<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Powersee的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://powersee.github.io/"/>
  <updated>2023-02-19T09:53:19.931Z</updated>
  <id>https://powersee.github.io/</id>
  
  <author>
    <name>powersee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个不错的 css 框架 Boltcss</title>
    <link href="https://powersee.github.io/2023/02/boltcss/"/>
    <id>https://powersee.github.io/2023/02/boltcss/</id>
    <published>2023-02-19T04:00:08.000Z</published>
    <updated>2023-02-19T09:53:19.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h2><h3 id="标题-2"><a href="#标题-2" class="headerlink" title="标题"></a>标题</h3><h4 id="标题-3"><a href="#标题-3" class="headerlink" title="标题"></a>标题</h4><p>发现一个不错的 css 框架 boltcss <a href="https://boltcss.com/">Bolt.css (boltcss.com)</a></p><p>是从阮一峰老师的博客推荐发现的，看了官方的 demo，感觉挺不错，里面很多样式自己挺喜欢的。</p><p>于是我下载来研究看看，之后看看能否引入自己的博客里面。</p><p><a href="https://raw.githubusercontent.com/tbolt/boltcss/main/bolt.css">https://raw.githubusercontent.com/tbolt/boltcss/main/bolt.css</a></p><p>喜欢的点：</p><ul><li>支持日夜模式（会根据系统自动切换）</li><li>details – summary 标签不错，在博客中可以用来收起一些内容</li></ul><p>例如这样</p><details>呵呵哒🙂  <summary>点击展开  </summary></details><p>直接在 markdown 里面写标签即可。</p><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;details&gt;呵呵哒🙂</span><br><span class="line">  &lt;summary&gt;点击展开</span><br><span class="line">  &lt;/summary&gt;</span><br><span class="line">&lt;/details&gt;</span><br></pre></td></tr></table></figure><p>由于直接把这个 css 引入博客，会和原来样式冲突，所以我目前只能，复制里面的代码到我博客自身的 css 里面。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* Interactive elements */</span><br><span class="line">details &#123;</span><br><span class="line">  border: 1px solid #aaa;</span><br><span class="line">  border-radius: 7px;</span><br><span class="line">  padding: 0.5em 0.5em 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">summary &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  margin: -0.5em -0.5em 0;</span><br><span class="line">  padding: 0.5em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">details[open] &#123;</span><br><span class="line">  padding: 0.5em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">details[open] summary &#123;</span><br><span class="line">  border-bottom: 1px solid #aaa;</span><br><span class="line">  margin-bottom: 0.5em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h1&gt;&lt;h2 id=&quot;标题-1&quot;&gt;&lt;a href=&quot;#标题-1&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;h
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>统计 Windows 电脑应用使用时长</title>
    <link href="https://powersee.github.io/2023/02/windows-tai/"/>
    <id>https://powersee.github.io/2023/02/windows-tai/</id>
    <published>2023-02-02T11:07:16.000Z</published>
    <updated>2023-02-02T11:16:46.424Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间发现一个可以统计电脑上，各个应用的使用时长的开源应用</p><p><a href="https://github.com/Planshit/Tai">https://github.com/Planshit/Tai</a></p><p><img src="/img/2023/2023-02-01_17-52-08.png"></p><p>我也使用了一段时间了，感觉还不错。平时占用的系统内存是 44MB 左右，在电脑的右下角状态栏会有图标，双击就可以打开软件界面。</p><p><img src="/img/2023/2023-02-02_15-14-47.png"></p><p>一月份我使用了 20 天，里面记录我电脑的使用时长是 132 个小时，其中使用最长的是原神，有 31 个小时。</p><p>切换到【按月】可以看到每天的统计时长。</p><blockquote><p><strong>需要注意的是，使用时长并不是软件的存活时间，而是软件从获得焦点时开始到失去焦点后这段时间</strong></p></blockquote><p>其中有一天，steam 被统计到使用了 13 个小时，估计是我电脑息屏的时候，steam 突然弹到前台，然后又是夜晚，所以被统计下来。虽然后来我们可以通过右键【忽略此应用】来让 tai 不再记录某些应用，但是之前记录的 steam 时长好像没法去掉。</p><p><img src="/img/2023/2023-02-02_15-20-41.png"></p><p>还有就是 steam 的游戏，有时候统计并不准确，像我这里 Beat Saber 这个游戏，我每天都是有玩的，而且都是超过半个小时的，但是在这里，统计出来的数据是这样的。</p><p><img src="/img/2023/2023-02-02_15-31-36.png"></p><p><a href="https://github.com/Planshit/Tai/issues/40">tai对steam里的游戏统计时长有问题 · Issue #40 · Planshit/Tai (github.com)</a></p><p>虽然问题已经关闭了，但是问题好像并没有解决。</p><p>不过我认为瑕不掩瑜吧，我之后还是会继续使用它的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间发现一个可以统计电脑上，各个应用的使用时长的开源应用&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Planshit/Tai&quot;&gt;https://github.com/Planshit/Tai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>如何找到手机淘宝 APP 保存的文件？</title>
    <link href="https://powersee.github.io/2023/01/taobao-files/"/>
    <id>https://powersee.github.io/2023/01/taobao-files/</id>
    <published>2023-01-13T05:54:42.000Z</published>
    <updated>2023-01-13T05:57:12.019Z</updated>
    
    <content type="html"><![CDATA[<p>淘宝的店家发了个文件给我，我需要把文件弄到电脑上使用。结果没想到过程还挺曲折的。</p><p>在手机淘宝app上可以接收文件，但是文件没法打开。不过在底部显示【使用其它应用打开】的按钮，点击后会弹出一堆 app 可以选择，但是我实测没用。</p><p>店家给我的是 <code>HEX</code> 结尾的文件，手机里应该没有 app 可以打开它，我想尝试用手机自带的文件管理器、ES 文件管理器，来将文件保存到其他位置，但是都不行。</p><p>选择用浏览器打开，会自动下载这个文件，哦，那这样也行，但结果却是下载失败了。。。</p><p>然后我注意到，刚点击【使用其它应用打开】的按钮时，会弹出一个文件存放在哪里的提示，我注意到是在 <code>Android/data/com.taobao.taobao</code> </p><p>那既然这样，我自己去这里找找看吧。</p><p>结果我发现，使用手机自带的文件管理器、ES 文件管理器打开 <code>Android/data/</code> 后，里面是空白的。</p><p>我网上搜一下，发现这是 Android11 之后的改变，现在不给 data 文件夹的权限了。我是真没想到，miui 居然连自带的文件管理器都访问不了这个文件夹。</p><p>知乎网友的一段话我觉得挺认同的，<a href="https://www.zhihu.com/people/dong-jie-rong-59">来源</a></p><blockquote><p>非常后悔更新了11,这可能是我见过最恶心的设计了，完全意义不明。能轻松管理所有文件一直是我觉得安卓比ios好的一点</p></blockquote><p>那么最后我是怎么解决的呢？其实在自带文件管理器里，它有提示可以【前往安卓存储访问框架查看文件】，点击后使用框架还是可以查看文件的。</p><p>淘宝的文件是在 <code>Android/data/com.taobao.taobao/files/file/filetransfer/</code> 里面，之后我把文件复制出来，然后复制到 nas 里，电脑上再访问 nas 的共享文件夹，将文件复制到电脑。</p><p>而且完成后我网上搜一下，才知道用新版的 es 文件管理器，授权之后还是可以访问 data 文件夹的，我手机之前有下载一个 【ESuper文件】的app，应该是改版的 es 吧，确实授权后就可以访问。</p><p>不过，淘宝还真是够烂的，就不能给个选项，让把文件保存到手机的其它目录吗，费了我这么多时间。问店家，他居然告诉我自己去电脑上下载个阿里旺旺……</p><p>淘宝这么搞下去，迟早得被拼多多干倒。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;淘宝的店家发了个文件给我，我需要把文件弄到电脑上使用。结果没想到过程还挺曲折的。&lt;/p&gt;
&lt;p&gt;在手机淘宝app上可以接收文件，但是文件没法打开。不过在底部显示【使用其它应用打开】的按钮，点击后会弹出一堆 app 可以选择，但是我实测没用。&lt;/p&gt;
&lt;p&gt;店家给我的是 &lt;c
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>edge 浏览器访问不安全内容 https 报错没有强制访问</title>
    <link href="https://powersee.github.io/2022/11/edge-unsafe/"/>
    <id>https://powersee.github.io/2022/11/edge-unsafe/</id>
    <published>2022-11-18T02:18:08.000Z</published>
    <updated>2022-11-18T02:31:54.299Z</updated>
    
    <content type="html"><![CDATA[<p>如今我的主力浏览器已经换位 edge 了，使用了很久，感觉挺好的。</p><p>最近发现，如果使用它访问证书已经失效的 https 网站，会报错，并且点击高级之后，没有继续访问的按钮了。</p><p>例如这样，我访问我局域网的 nas <code>https://192.168.68.172/</code></p><p><img src="/img/2022/link-unsafe.jpg"></p><p>那么要怎样才能继续访问呢？方法是，点击网页中空白的地方，然后键盘输入 <code>thisisunsafe</code> ，注意是在英文输入法的情况下，正常的话，输入完就自动访问了。</p><p>另外也可以在浏览器输入 <code>edge://settings/content/insecureContent</code> 来打开设置，将你想要访问的域名添加进去。</p><p><img src="/img/2022/edge-settings-insecureContent.jpg"></p><p>感觉现在就是限制更多了，不像以前那样方便，不过还好问题是可以解决的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如今我的主力浏览器已经换位 edge 了，使用了很久，感觉挺好的。&lt;/p&gt;
&lt;p&gt;最近发现，如果使用它访问证书已经失效的 https 网站，会报错，并且点击高级之后，没有继续访问的按钮了。&lt;/p&gt;
&lt;p&gt;例如这样，我访问我局域网的 nas &lt;code&gt;https://192
      
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Mac 命令行中复制粘贴 pbcopy 与 pbpaste</title>
    <link href="https://powersee.github.io/2022/06/mac-pbcopy-pbpaste/"/>
    <id>https://powersee.github.io/2022/06/mac-pbcopy-pbpaste/</id>
    <published>2022-06-10T03:28:56.000Z</published>
    <updated>2022-06-10T03:29:40.100Z</updated>
    
    <content type="html"><![CDATA[<p>发现两个有用的命令</p><ul><li>pbcopy 可以将文本复制（写入）到剪贴板</li><li>pbpaste 可以读取剪贴板中的内容</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;powersee&#x27; | pbcopy</span><br></pre></td></tr></table></figure><p>此时就将字符串 <code>powersee</code> 写入剪贴板，可以找个地方粘贴试试看。</p><p>另外一种用法，将文件中的文本内容复制到剪贴板</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$cat test.txt</span><br><span class="line">hehe</span><br><span class="line">$pbcopy &lt; test.txt</span><br></pre></td></tr></table></figure><p>现在有一个 txt 文件，里面的内容是 hehe，使用 <code>&lt;</code> 将里面的内容输入给 <code>pbcopy</code> ，这样就可以将内容复制到剪贴板。当然也可以用 <code>cat</code> 命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$cat test.txt | pbcopy</span><br></pre></td></tr></table></figure><p>读取剪贴板的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pbpaste</span><br><span class="line">hehe%</span><br><span class="line">$ echo `pbpaste`</span><br><span class="line">hehe</span><br></pre></td></tr></table></figure><p>直接执行 <code>pbpaste</code> 也可以输出内容，不过在最后会跟一个 <code>%</code> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;发现两个有用的命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pbcopy 可以将文本复制（写入）到剪贴板&lt;/li&gt;
&lt;li&gt;pbpaste 可以读取剪贴板中的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="Mac" scheme="https://powersee.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云云函数要收费了</title>
    <link href="https://powersee.github.io/2022/05/tencent-scf/"/>
    <id>https://powersee.github.io/2022/05/tencent-scf/</id>
    <published>2022-05-31T13:00:41.000Z</published>
    <updated>2022-05-31T13:08:23.237Z</updated>
    
    <content type="html"><![CDATA[<p>前几天腾讯云发布了通知，以后云函数不能免费使用了。我之前有从网上看到消息，今天还收到了腾讯云的短信通知。</p><blockquote><p>【腾讯云】腾讯云云函数免费额度和计费方式将于2022年6月1日 起正式调整，届时新用户将获得三个月更多的用量的免费额度，第四个月开始不再享受免费额度，同时从第四个月开始，系统每月会自动发放基础套餐额度并扣除基础套餐费用 12.8 元，详情请查看：<a href="https://mc.tencent.com/qpgtGc9H">https://mc.tencent.com/qpgtGc9H</a> ，如您有任何疑问可以登录（账号 ID：9527，昵称：powersee）提交工单与我们联系。</p></blockquote><p>我还在网上搜了一下，看看别人是怎么讨论这个的，不过看来讨论的好像不多。知乎上面有一个相关的提问，到目前 5 月 31 号才 11 个回答。</p><p><a href="https://www.zhihu.com/question/533580659">如何看待腾讯云函数（SCF）取消免费额度，每月必须 12.8 元最低消费？ - 知乎 (zhihu.com)</a></p><p>总而言之，以后可能就没法白嫖云函数了。</p><p>我登录电脑网页版了解看看，一来到云函数的界面，就有明显的提示</p><blockquote><h4 id="计费模式和免费额度变更通知"><a href="#计费模式和免费额度变更通知" class="headerlink" title="计费模式和免费额度变更通知"></a>计费模式和免费额度变更通知</h4><ol><li>SCF计费模式和免费额度于 2022 年 6 月 1 日进行调整，用户开通使用云函数三个月后每月不再享受免费额度，系统每月会发放基础套餐额度，同时自动扣除 12.8 元，详见<a href="https://cloud.tencent.com/document/product/583/12282">免费额度</a>文档。</li><li>新用户前三个月免费额度中资源使用量、外网出流量较此前免费额度的量将提升一倍，通过 0 元购买套餐包的形式享受免费额度，函数并发配额也将提升一倍。</li><li>学生用户可通过<a href="https://cloud.tencent.com/act/campus?utm_source=qcloud&utm_medium=navigation&utm_campaign=campus">云+校园</a>购买专属超低折扣套餐，活动长期有效。</li><li>如果您暂时不使用 SCF 的服务，可以<a href="https://cloud.tencent.com/document/product/583/12283#.E6.89.8B.E5.8A.A8.E5.86.BB.E7.BB.93">手动冻结</a>云函数。</li></ol></blockquote><p>按照它这个意思，也就是 6、7、8 这三个月还是可以免费使用的，之后到了 9 月，应该就开始每个月收 12.8 了。</p><p>我里面只有一个服务在运行着，每天自动运行一次来签到，使用的资源非常的少，我一个月就调用 30 次，而免费用户是可以一个月调用 5 万次的。腾讯云看来玩不起呀，那对于我这种情况，我肯定不会去付费使用的，所以我就打算停用了。</p><p>它这里也挺贴心的，还有教怎么冻结，这样以后应该就不会被扣费了。</p><p>手动冻结</p><p><img src="/img/2022/image-20220531203309383.png" alt="image-20220531203309383"></p><p>冻结的时候有提示</p><blockquote><p><strong>服务冻结须知冻结后，该账户下所有地域的函数将会有以下限制，是否确认冻结?</strong></p><ul><li>函数无法被调用，通过云 API 等方式的调用，函数将报错并无法执行。</li><li>预置的函数实例将会被回收。</li><li>函数代码及相关配置会继续保留。</li><li>函数服务不会继续产生费用。</li></ul></blockquote><p><img src="/img/2022/image-20220531205635345.png" alt="image-20220531205635345"></p><p>根据了解阿里云好像也有云函数可以免费使用，但是网上好像没什么教程，不知道什么情况，是可以免费白嫖呢？还是至少每个月有付一块钱呢？这个我还没去了解，等其他人研究后我再去抄作业吧，目前签到服务还是运行在家里的服务器吧。</p><p>看到有人分享用华为云免费运行云函数了：<a href="https://blog.csdn.net/qq_28778001/article/details/124891438">https://blog.csdn.net/qq_28778001/article/details/124891438</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几天腾讯云发布了通知，以后云函数不能免费使用了。我之前有从网上看到消息，今天还收到了腾讯云的短信通知。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【腾讯云】腾讯云云函数免费额度和计费方式将于2022年6月1日 起正式调整，届时新用户将获得三个月更多的用量的免费额度，第四个月
      
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>芝杜 z9x 手动升级固件，体验不错</title>
    <link href="https://powersee.github.io/2022/05/zidoo-z9x-update/"/>
    <id>https://powersee.github.io/2022/05/zidoo-z9x-update/</id>
    <published>2022-05-21T02:40:20.000Z</published>
    <updated>2022-05-21T03:48:00.392Z</updated>
    
    <content type="html"><![CDATA[<p>我的芝杜 z9x 有些问题，通过 smb 访问使用 d2550 搭建的黑群晖，经常提示“未知错误”，我在 smb 那里是弄了两个连接方式，一种是直接通过局域网主机名 <strong>d2550</strong> 这样来访问，另外一种是通过局域网 IP 地址 <strong>192.168.68.171</strong> 这样。</p><p>它也不是说完全不能访问，有时候我先点击 ip 的访问到第一层目录，然后就无法访问第二层目录了，之后我切换到主机名这种，就可以访问进去了，很烦人。</p><p>那么就尝试 NFS 吧，结果是 homes 文件夹里的可以显示出来，而我另外一个专门放影视资源的共享文件夹，是无法显示的，点进去后就是空白。挺难受的，之前用蜗牛星际当 nas 明明不会这样，难道是 d2550 的问题？可是我下载个当贝播放器，在里面用 smb 来播放 nas 里的视频却一直正常。</p><p>我一直在等芝杜推送系统更新，却一直没等到，昨晚实在烦了，就上网搜一下，到了芝杜的官方论坛，也没看到什么解决方案，接着又搜到了芝杜的贴吧 <strong>芝杜吧</strong> ，发现系统固件已经升级了很多次了，但是需要我们下载 ota 后自己去手动升级。</p><p><a href="https://tieba.baidu.com/p/7841671022">【图片】【220519 | 固件下载】芝杜Z9X 升级固件 v6.4.05 全量包_芝杜吧_百度贴吧 (baidu.com)</a></p><p>很新鲜，而且我从贴吧里了解到，目前新的固件是支持 webdav 的，而刚好我的 nas 就有启动 webdav 服务，所以我想的是，即使它没有修复 smb 和 NFS 的问题，那我还可以尝试通过 webdav 来播放 nas 里的视频，于是点击帖子中的链接，跳转到一个腾讯文档，里面有教程与下载链接</p><p><a href="https://docs.qq.com/doc/DSnhEdU10dkpvQVFN">芝杜Z9X 升级固件v6.4.05 v6.4.05G全量包 (qq.com)</a></p><p>用电脑网页版无法得到这个链接，我是在手机客服端点击才行的。</p><p>从文档里点击链接下载固件，放到 U 盘里，然后插到芝杜上面，点击桌面右边的“关于”，手动升级，选择 U 盘中的固件，会进行验证，然后将固件复制到机身内存，复制完再点一下升级。</p><p><a href="https://tieba.baidu.com/p/7127393998">【图片】【201203 | 教程攻略】芝杜播放器本地OTA升级教程_芝杜吧_百度贴吧 (baidu.com)</a></p><p><img src="/img/2022/image-20220521104308870.png" alt="image-20220521104308870"></p><p>系统升级完成后，打开文件管理器，此时在左侧可以看到一个 <strong>其它网络</strong> ，里面就有新的连接方式 webdav，我赶紧尝试通过它来连接 nas，很顺利，播放高清电影也很流畅。</p><p><img src="/img/2022/image-20220521114412831.png" alt="image-20220521114412831"></p><p><img src="/img/2022/image-20220521114437123.png" alt="image-20220521114437123"></p><p>不过我发现它不能像 smb 以及 NFS 那样，把某个文件夹收藏起来，方便下次直接访问。那也就是说，我每次访问 webdav 都得这样一层一层去打开文件夹，确实有点麻烦。</p><p>除了 webdav 之外，现在还可以直接访问 <strong>百度网盘</strong>、<strong>阿里云盘</strong> 里面的内容，这点感觉也不错嘛，如果平时收藏的视频是保存在网盘里的，现在可以直接播放还是挺方便的。不过我个人目前用不上这个功能，我的视频主要还是放在 nas 里的。</p><p><img src="/img/2022/rYDPf3z47r9GlCStnh3QMA.png" alt="img">        </p><p>接着最让我高兴的是，现在 smb 的问题好像都解决了，不会出现“未知错误”这样的提示了，直接点击就可以访问 nas 里的内容，NFS 这边也正常了，之前未升级的时候，点击后是显示空白的，现在可以正常显示 nas 的内容了。</p><p>其它的更新内容还挺多的，我就不想在这里重复了，有些更新的内容其实我也用不上，所以也不关心，我现在看到芝杜可以通过 smb、NFS、webdav 来访问 nas 里的文件，而且体验确实不错，就很满意了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我的芝杜 z9x 有些问题，通过 smb 访问使用 d2550 搭建的黑群晖，经常提示“未知错误”，我在 smb 那里是弄了两个连接方式，一种是直接通过局域网主机名 &lt;strong&gt;d2550&lt;/strong&gt; 这样来访问，另外一种是通过局域网 IP 地址 &lt;strong&gt;
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>荣耀平板V7Pro 与华为 matepad paper USB 调试开启教程</title>
    <link href="https://powersee.github.io/2022/04/usb-debugging-honor-and-huawei/"/>
    <id>https://powersee.github.io/2022/04/usb-debugging-honor-and-huawei/</id>
    <published>2022-04-21T08:52:15.000Z</published>
    <updated>2022-04-21T08:59:06.284Z</updated>
    
    <content type="html"><![CDATA[<p>手头上有一台荣耀的平板，以及一台华为的墨水屏平板，我发现它们想要和其它的设备一样开启 USB 调试，然后在电脑上使用 adb 来控制，似乎没那么容易。本文记录我折腾的过程，方便有同样需求的小伙伴。</p><h3 id="荣耀"><a href="#荣耀" class="headerlink" title="荣耀"></a>荣耀</h3><p>首先到【设置】【关于平板电脑】里，连续点击 5 次【版本号】，可以开启开发者模式。</p><p>然后到【系统和更新】【开发人员选项】打开【usb调试】以及 【“仅充电”模式下允许 ADB 调试】</p><p>最后用数据线连接平板与 windows 电脑，将会发现，它不按套路出牌，执行 <code>adb devices</code> 后并不能显示设备。</p><p><img src="/img/2022/2022-04-12_13-11-26.jpg" alt="2022-04-12_13-11-26"></p><p>打开 Android studio 也一样识别不到</p><p><img src="/img/2022/2022-04-12_13-16-38.jpg" alt="2022-04-12_13-16-38"></p><p>怎么搞呢？那么试试装一下此时显示在【此电脑】里面，多出来的那个盘符里的手机助理吧。装好后我发现可以连接了，而且这个过程中，平板上会弹出提示，它这个叫 HDB 验证。。。而平时我们在其他安卓手机、平板上的叫 ADB 验证。</p><p>那么它们是否都一样，只是荣耀这里改个名字而已呢？并不是，HDB 连接好后，可以通过电脑的手机助理来管理平板上的文件，应用等，好像还可以刷机。</p><p>但是这个时候如果我们再执行 <code>adb devices</code> ，会出现这个</p><p><img src="/img/2022/image-20220412134348799.png" alt="image-20220412134348799"></p><p>unauthorized ，adb 这边还是没有授权，依然没法使用 Android studio</p><p>我网上搜，别人有说手机上的怎么操作，需要在拨号界面输入 <code>*#*#2846579#*#*</code>，进入工程菜单</p><p>但问题是，我这是平板，没有拨号界面……</p><p>然后继续找，最后找到了。WIFI版平板进入计算器，横屏（科学计算器）模式下输入()()2846579()()即可进入工程模式。</p><p>来源：<a href="https://club.huawei.com/forum.php?mod=viewthread&tid=30717452&extra=page=1">花粉俱乐部</a></p><p>不过按照教程，应该把【USB端口设置】从 【Hisuite模式】改为 【生产模式】，但是我这台平板好像改不了，只能改为【默认模式】。不过好像不影响开启 adb，反正最后是成功了。</p><p><img src="/img/2022/2022-04-12_13-23-13.jpg" alt="2022-04-12_13-23-13"></p><p><img src="/img/2022/image-20220412134858390.png" alt="image-20220412134858390"></p><p>看来手机助理这个软件是完全没有必要安装的，关键点在于进入工程菜单。</p><h3 id="华为"><a href="#华为" class="headerlink" title="华为"></a>华为</h3><p>操作上基本一样。</p><p>点击版本号 5 次，打开开发者选项</p><p><img src="/img/2022/image-20220421153431809.png" alt="image-20220421153431809"></p><p>然后在【系统和更新】【开发人员选项】中打开 USB 调试</p><p><img src="/img/2022/image-20220421153531693.png" alt="image-20220421153531693"></p><p>到应用菜单里打开【计算机】，点击右上角进入【科学计算器】模式，输入 <code>()()2846579()()</code> 即可进入工程模式。</p><p><img src="/img/2022/image-20220421153730565.png" alt="image-20220421153730565"></p><p>此时在工程菜单里，点击【后台设置】【USB端口设置】，选择【生产模式】即可。</p><p><img src="/img/2022/image-20220421154105540.png" alt="image-20220421154105540"></p><p><img src="/img/2022/image-20220421154145072.png" alt="image-20220421154145072"></p><p>在 Android studio 里面也可以识别到了</p><p><img src="/img/2022/image-20220421154252687.png" alt="image-20220421154252687"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;手头上有一台荣耀的平板，以及一台华为的墨水屏平板，我发现它们想要和其它的设备一样开启 USB 调试，然后在电脑上使用 adb 来控制，似乎没那么容易。本文记录我折腾的过程，方便有同样需求的小伙伴。&lt;/p&gt;
&lt;h3 id=&quot;荣耀&quot;&gt;&lt;a href=&quot;#荣耀&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="手机" scheme="https://powersee.github.io/tags/%E6%89%8B%E6%9C%BA/"/>
    
      <category term="Android" scheme="https://powersee.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RISC-V 开源软件安装与自行编译</title>
    <link href="https://powersee.github.io/2022/04/riscv-apps/"/>
    <id>https://powersee.github.io/2022/04/riscv-apps/</id>
    <published>2022-04-13T02:42:58.000Z</published>
    <updated>2022-05-16T11:39:55.344Z</updated>
    
    <content type="html"><![CDATA[<p>risc-v 开发板虽然可以运行 Linux 发行版，但是毕竟还是处于起步阶段，生态是没法跟 arm 以及 x86 相比的。</p><p>这段时间在研究这台 visionfive，在软件这方面也折腾了不少，本文记录一下心得。</p><p>以前拿到开发板或者可以运行 Linux 的机顶盒时，我喜欢在上面装下载软件，以及开启 smb 共享，让它作为一台简易 NAS 来使用。这次在 visionfive 上面我也有进行尝试。</p><p>首先 BT 下载软件 transmission 和 qbittorrent 在这上面想要安装都非常简单，直接用 dnf 就行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install transmission-daemon</span><br><span class="line">dnf install qbittorrent-nox</span><br></pre></td></tr></table></figure><p><img src="/img/2022/image-20220412155348270.png" alt="image-20220412155348270"></p><p><img src="/img/2022/image-20220412155459647.png" alt="image-20220412155459647"></p><p>samba 也可以直接用 dnf 安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf install samba</span><br></pre></td></tr></table></figure><p><img src="/img/2022/image-20220412160053966.png" alt="image-20220412160053966"></p><p>这种是比较简单的，这里就不多细讲了。</p><p>像有些开源软件，它是托管在 GitHub 上面的，这类软件，我们可以到它的 GitHub release 里面，下载 riscv 架构的可执行文件。这里举两个例子</p><h4 id="syncthing"><a href="#syncthing" class="headerlink" title="syncthing"></a>syncthing</h4><p>这是一个多平台同步软件，之前有一段时间，我经常使用它将我手机里的照片、视频，同步到电脑上面。</p><p>想要让它在 visionfive 上面运行，需要到 <a href="https://github.com/syncthing/syncthing/releases">https://github.com/syncthing/syncthing/releases</a> 里面找名字带 riscv64 的，目前最新的是这个</p><p><a href="https://github.com/syncthing/syncthing/releases/download/v1.19.2/syncthing-linux-riscv64-v1.19.2.tar.gz">https://github.com/syncthing/syncthing/releases/download/v1.19.2/syncthing-linux-riscv64-v1.19.2.tar.gz</a></p><p>我们可以通过 wget 将它下载到本地，然后使用 tar 解压</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/syncthing/syncthing/releases/download/v1.19.2/syncthing-linux-riscv64-v1.19.2.tar.gz</span><br><span class="line">tar xf syncthing-linux-riscv64-v1.19.2.tar.gz</span><br></pre></td></tr></table></figure><p>此时我们得到的是一个文件夹</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$l</span> syncthing-linux-riscv64-v1.19.1</span><br><span class="line">total 23M</span><br><span class="line">drwxr-xr-x   5 riscv riscv 4.0K Mar  1 14:45 .</span><br><span class="line">drwx------. 19 riscv riscv 4.0K Apr 10 10:45 ..</span><br><span class="line">-rw-r--r--   1 riscv riscv  14K Mar  1 14:38 AUTHORS.txt</span><br><span class="line">drwxr-xr-x  11 riscv riscv 4.0K Mar  1 14:45 etc</span><br><span class="line">drwxr-xr-x   2 riscv riscv 4.0K Mar  1 14:45 extra</span><br><span class="line">-rw-r--r--   1 riscv riscv  17K Mar  1 14:38 LICENSE.txt</span><br><span class="line">drwxr-xr-x   2 riscv riscv 4.0K Mar  1 14:45 .metadata</span><br><span class="line">-rw-r--r--   1 riscv riscv 4.7K Mar  1 14:38 README.txt</span><br><span class="line">-rwxr-xr-x   1 riscv riscv  23M Mar  1 14:44 syncthing</span><br></pre></td></tr></table></figure><p>执行文件夹里的 syncthing 即可启动这个软件，然后它会输出一些启动信息</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">➜ <span class="built_in">cd</span> syncthing-linux-riscv64-v1.19.1 </span><br><span class="line">➜ syncthing-linux-riscv64-v1.19.1 ./syncthing </span><br><span class="line">[start] 16:13:15 INFO: syncthing v1.19.1 <span class="string">&quot;Fermium Flea&quot;</span> (go1.17.7 linux-riscv64) teamcity@build.syncthing.net 2022-02-21 13:57:21 UTC</span><br><span class="line">[start] 16:13:15 INFO: Generating ECDSA key and certificate <span class="keyword">for</span> syncthing...</span><br><span class="line">[start] 16:13:16 INFO: Default folder created and/or linked to new config</span><br><span class="line">[start] 16:13:16 INFO: Default config saved. Edit /root/.config/syncthing/config.xml to taste (with Syncthing stopped) or use the GUI</span><br><span class="line">[start] 16:13:16 INFO: Archiving a copy of old config file format at: /root/.config/syncthing/config.xml.v0</span><br></pre></td></tr></table></figure><p>等一会会出现一条比较重要的信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[6RXV3] 16:13:32 INFO: Access the GUI via the following URL: http://127.0.0.1:8384/</span><br></pre></td></tr></table></figure><p>它表示我们只能在 visionfive 上面使用浏览器访问这个网址，才可以打开 syncthing 的图形化界面。如果你像我一样，并没有给 visionfive 接显示器，一直都是 ssh 连接来操作的。此时这一步就没有进行下去了。</p><p>所以我们需要先停止软件，改一下配置文件后，再来启动。按 <code>ctrl + c</code> 这两个按键可以退出软件，然后我们使用 nano 来修改配置文件。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nano ~/.config/syncthing/config.xml</span><br></pre></td></tr></table></figure><p>找到 <code>&lt;address&gt;127.0.0.1:8384&lt;/address&gt;</code> 这一行，改为 <code>&lt;address&gt;0.0.0.0:8384&lt;/address&gt;</code> ，再次输入 <code>./syncthing</code> 启动软件</p><p>此时就可以用电脑的浏览器来访问运行在 visionfive 上面的 syncthing 了。</p><p><img src="/img/2022/image-20220412162500139.png" alt="image-20220412162500139"></p><h4 id="miniserve"><a href="#miniserve" class="headerlink" title="miniserve"></a>miniserve</h4><p>这个软件是我个人非常喜欢的文件展示应用，它的主要功能就是将某个文件夹通过 web 的方式共享出来，但是功能远不止于此。它还是支持上传功能，以及添加用户名密码验证，所以也可以把它当一个简易网盘来使用。</p><p>项目：<a href="https://github.com/svenstaro/miniserve">https://github.com/svenstaro/miniserve</a></p><p>安装方法：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/svenstaro/miniserve/releases/download/v0.19.4/miniserve-v0.19.4-riscv64gc-unknown-linux-gnu</span><br><span class="line">mv miniserve-* miniserve</span><br><span class="line">chmod +x miniserve</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./miniserve</span><br></pre></td></tr></table></figure><p>非常简单，下载后赋予它可执行权限，然后直接 <code>./</code> 就可以运行了。这样它会将你当前所在的文件夹，通过 <code>8080</code> 端口共享出来。</p><p>如果想使用其它端口，可以使用 <code>-p</code> 来指定，想添加上传功能，使用 <code>-u</code> ，想共享其它的文件夹，直接将文件夹路径写上去即可。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜ ./miniserve -u -p 9527 /tmp/test</span><br><span class="line">miniserve v0.19.3</span><br><span class="line">Bound to [::]:9527, 0.0.0.0:9527</span><br><span class="line">Serving path /tmp/test</span><br><span class="line">Available at (non-exhaustive list):</span><br><span class="line">    http://127.0.0.1:9527</span><br><span class="line">    http://192.168.68.178:9527</span><br><span class="line">    http://[::1]:9527</span><br><span class="line"></span><br><span class="line">Quit by pressing CTRL-C</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/2022/image-20220412163658298.png" alt="image-20220412163658298"></p><h3 id="自行编译"><a href="#自行编译" class="headerlink" title="自行编译"></a>自行编译</h3><p>上面讲到的 syncthing 和 miniserve，它们的 release 里都有提供 riscv 的可执行文件，所以我们使用起来还算是比较容易。</p><p>但这类还是比较少数的，其它开源软件大多数目前都是没有提供 riscv 版的，所以如果我们想要使用的话，就需要自行编译。</p><p>先来一个简单的——<a href="https://github.com/zerotier/ZeroTierOne">zerotier</a></p><p>这个软件的功能是组虚拟局域网，让家里没有公网 ip 的用户，也可以远程访问家里设备。</p><p>想让它在 visionfive 上面运行我们需要自行编译，很简单，下载源代码到本地，进入项目文件夹，执行 make 编译就行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/zerotier/ZeroTierOne.git</span><br><span class="line">cd ZeroTierOne</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>编译完成后当前目前下多出 <code>zerotier-one</code> 和 <code>zerotier-cli</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./zerotier-cli -v                   </span><br><span class="line">1.8.8</span><br></pre></td></tr></table></figure><p>另外我还尝试编译 <a href="https://github.com/fatedier/frp">frp</a> 这款软件，这个耗费了我不少的时间。由于它是用 go 写的，想要编译它需要有 go 环境，然后我就想到 golang 的官网下载，却发现并没有提供 riscv 版的。</p><p>走了一堆弯路之后，我才发现 visionfive 的 Fedora 里竟然自带 go</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  ~ go version</span><br><span class="line">go version go1.14.6 gccgo (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) linux/riscv64</span><br></pre></td></tr></table></figure><p>不过我使用它并没法成功编译 frp，想使用自带的 go1.14.6 编译现在最新的 go1.18 也没成功。</p><p>之后又发现在 x86 上面是可以使用 go 设定交叉编译，来编译 riscv64 的可执行文件的。</p><p>最终我使用这两条命令，成功编译出 riscv 版的 frp 服务器端和客户端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>网络问题，先设置代理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CGO_ENABLE=0 GOOS=linux GOARCH=riscv64 go build ./cmd/frpc</span><br><span class="line">CGO_ENABLE=0 GOOS=linux GOARCH=riscv64 go build ./cmd/frps</span><br></pre></td></tr></table></figure><p>这样编译出来的文件是在当前目录下的，想存放在其它地方，应该使用 -o 参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CGO_ENABLE=0 GOOS=linux GOARCH=riscv64 go build -o bin/frpc-riscv64 ./cmd/frpc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜ frpc -v         </span><br><span class="line">0.41.0</span><br><span class="line">➜ file frpc       </span><br><span class="line">frpc: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), statically linked, Go BuildID=Pwh5MYcPoYJ1E09FI1rO/vrYuoTbR0yxAguZ0ck9D/DeYARJeTJfCF72R2PXOv/9mZ673VwFshYBrO5Grjy, not stripped</span><br></pre></td></tr></table></figure><p>那么用同样的方法，也可以编译 <a href="https://github.com/filebrowser/filebrowser">filebrowser</a> 的后端部分</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GOOS=linux GOARCH=riscv64 go build</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜ file filebrowser</span><br><span class="line">filebrowser: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), statically linked, Go BuildID=8ohLL6OaYPgPR1ZtkIRd/d9lcK8Ocz9YIDVZqMFFv/cB4dn0G6WtNCIXUJsvX-/Xo17t9_I87svg4x4zqx_, not stripped</span><br></pre></td></tr></table></figure><p>前端部分需要 nodejs 和 npm ，这个官方没有提供 riscv 版，GitHub 上面有修改版，说是可以给 riscv 用，不过我没弄成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;risc-v 开发板虽然可以运行 Linux 发行版，但是毕竟还是处于起步阶段，生态是没法跟 arm 以及 x86 相比的。&lt;/p&gt;
&lt;p&gt;这段时间在研究这台 visionfive，在软件这方面也折腾了不少，本文记录一下心得。&lt;/p&gt;
&lt;p&gt;以前拿到开发板或者可以运行 Li
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>visionfive 串口调试与编译内核</title>
    <link href="https://powersee.github.io/2022/04/visionfive-ttl-linux/"/>
    <id>https://powersee.github.io/2022/04/visionfive-ttl-linux/</id>
    <published>2022-04-12T09:36:52.000Z</published>
    <updated>2022-04-12T10:23:56.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="串口调试"><a href="#串口调试" class="headerlink" title="串口调试"></a>串口调试</h3><p>开发板除了通过 HDMI 连接显示器，然后通过 usb 键盘来控制之外，还可以通过串口与电脑进行连接，将它的输出信息显示在电脑上，并且还可以直接用电脑键盘来控制。<br>想要进行这样的操作，需要买一个 USB 转 TTL， 我使用的是 CH340G，拼多多上面 6.3 包邮买的，平时也可以用来给路由器或者机顶盒刷机。</p><p><img src="/img/2022/ch340.jpg" alt="ch340"></p><p>另外我还有一个 CH341A，这个看起来就比较高级一点，两年前淘宝 18 块买的。</p><p><img src="/img/2022/image-20220411135344552.png" alt="image-20220411135344552"></p><p>不过只是用来调试开发板的话，它们用起来都一样的，连接到电脑的 usb 口之后，安装店家提供的驱动，顺利的话就可以在【设备管理器】的【端口】看到了。我们需要记住的是它对应的 com 口是多少，例如我图中的 12 和 13</p><p><img src="/img/2022/image-20220411132651192.png" alt="image-20220411132651192"></p><p>注：设备管理器可以通过点击，开始菜单旁边的放大镜，在里面搜索来打开。</p><p><img src="/img/2022/image-20220411132635593.png" alt="image-20220411132635593"></p><p>接下来需要它与开发板进行连接，这时就需要使用杜邦线，这个一般购买模块时都会赠送的，如果没有的话，也可以自己购买。拼多多或者淘宝搜【杜邦线母对母】就可以找到相对应的商品（个人建议购买比较长一点的，我之前用买模块送的杜邦线，只有十几厘米，有时候不太方面，所以后来我重新买了一排30厘米的）</p><p>连接的话只需要 3 根线，接序是这样的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GND --- GND</span><br><span class="line">TX ---- RX</span><br><span class="line">RX ---- TX</span><br></pre></td></tr></table></figure><p><img src="/img/2022/image-20220411135551131.jpg" alt="image-20220411135551131"></p><p>按照这样连接好后，将模块插到电脑上，确认在设备管理器里可以看到。</p><p>然后我们还需要软件，才可以显示模块输出的信息。可以选择的软件非常多，我个人用过的有 putty、友善串口调试助手、以及我个人最常用的 xshell。我个人比较推荐 xshell，平时可以用来 ssh 连接开发板，需要串口调试时也可以用它。而且 xshell 个人在家庭或者学校使用的话，是完全免费的，到它的官网 <a href="https://www.xshell.com/zh/free-for-home-school/">https://www.xshell.com/zh/free-for-home-school/</a> 填写邮箱后，收到邮件就可以下载。</p><p>下载安装后，进行如下操作</p><p><img src="/img/2022/image-20220411141221081.png" alt="image-20220411141221081"></p><p><img src="/img/2022/image-20220411141516299.png" alt="image-20220411141516299"></p><p>顺利的话应该会看到这个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Connecting to COM12...</span><br><span class="line">Connected.</span><br></pre></td></tr></table></figure><p>此时就可以给开发板接通电源开机了。然后我们可以看到 bootloader 的加载信息，以及不断出现的系统启动信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bootloader version:211102-0b86f96</span><br><span class="line">ddr 0x00000000, 1M test</span><br><span class="line">ddr 0x00100000, 2M test</span><br><span class="line">DDR clk 2133M,Version: 211102-d086aee                                                  </span><br><span class="line">0 crc flash: 5595e732, crc ddr: 5595e732</span><br><span class="line">crc check PASSED</span><br><span class="line"></span><br><span class="line">bootloader.</span><br><span class="line"></span><br><span class="line">OpenSBI v1.0</span><br><span class="line">   ____                    _____ ____ _____</span><br><span class="line">  / __ \                  / ____|  _ \_   _|</span><br><span class="line"> | |  | |_ __   ___ _ __ | (___ | |_) || |</span><br><span class="line"> | |  | | &#x27;_ \ / _ \ &#x27;_ \ \___ \|  _ &lt; | |</span><br><span class="line"> | |__| | |_) |  __/ | | |____) | |_) || |_</span><br><span class="line">  \____/| .__/ \___|_| |_|_____/|____/_____|</span><br><span class="line">        | |</span><br><span class="line">        |_|</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>等到开机完成，会出现这样的界面，在这里我们可以用电脑键盘输入用户名和密码来进行登录。</p><p><img src="/img/2022/image-20220411141936085.png" alt="image-20220411141936085"></p><h3 id="编译-Linux-内核"><a href="#编译-Linux-内核" class="headerlink" title="编译 Linux 内核"></a>编译 Linux 内核</h3><p>目前官方提供的 Fedora 镜像是</p><p><strong>2021-December-26:</strong> <a href="https://fedora.starfivetech.com/pub/downloads/VisionFive-release/Fedora-riscv64-jh7100-developer-xfce-Rawhide-20211226-214100.n.0-sda.raw.zst">Fedora-riscv64-jh7100-developer-xfce-Rawhide-20211226-214100.n.0-sda.raw.zst</a></p><p>使用的内核是 5.15，如果我们想要使用更新的内核，可以选择自己编译。</p><p>首先下载源代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/starfive-tech/linux.git</span><br></pre></td></tr></table></figure><p>这时就得分情况了，我们是要在哪里进行编译呢？如果是在 x86 架构的机器编译，需要通过交叉编译。因为我们的开发板是 risc-v 架构的，如果直接在开发板编译就不需要。这两种我都又尝试过，分别讲一下。</p><h4 id="交叉编译"><a href="#交叉编译" class="headerlink" title="交叉编译"></a>交叉编译</h4><p>按照 GitHub 上的文档操作即可。</p><p><a href="https://github.com/starfive-tech/linux">https://github.com/starfive-tech/linux</a></p><p>先下载源代码，之后安装编译所需的工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Debian/Ubuntu</span><br><span class="line">sudo apt-get install libncurses-dev libssl-dev bc flex bison make gcc gcc-riscv64-linux-gnu</span><br><span class="line"># Fedora</span><br><span class="line">sudo dnf install ncurses-devel openssl openssl-devel bc flex bison make gcc gcc-riscv64-linux-gnu</span><br><span class="line"># Archlinux</span><br><span class="line">sudo pacman -S --needed ncurses openssl bc flex bison make gcc riscv64-linux-gnu-gcc</span><br></pre></td></tr></table></figure><p>配置与编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make -j8 ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- visionfive_defconfig</span><br><span class="line">make -j8 ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- nconfig</span><br><span class="line">make -j8 ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu-</span><br></pre></td></tr></table></figure><p>我使用的处理器是 i5 8259U，四核八线程，第一次编译 3、4分钟就搞定了。</p><h4 id="原生编译"><a href="#原生编译" class="headerlink" title="原生编译"></a>原生编译</h4><p>同样下载源代码到设备上</p><p>安装编译所需的工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install ncurses-devel openssl openssl-devel bc flex bison make gcc</span><br></pre></td></tr></table></figure><p>配置与编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make -j2 visionfive_defconfig</span><br><span class="line">make -j2 nconfig</span><br><span class="line">make -j2</span><br></pre></td></tr></table></figure><p>由于板子是双核双线程的，所以这里就改为 -j2 了。耗费的时间是两个半小时左右。</p><p>不管是交叉编译还是原生编译，编译完成我们都可以得到内核 <code>arch/riscv/boot/Image</code> 以及 dtb <code>arch/riscv/boot/dts/starfive/jh7100-starfive-visionfive-v1.dtb</code></p><p>那么要怎么使用它们呢？</p><p>我个人是这样操作的，在 /boot 里新建一个文件夹，然后将这两个文件放到里面。我现在新编译的内核版本是 5.18，所以我新建一个 518 的文件夹，再将内核与 dtb 复制进去。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /boot/518</span><br><span class="line">cp arch/riscv/boot/Image /boot/518/</span><br><span class="line">cp arch/riscv/boot/dts/starfive/jh7100-starfive-visionfive-v1.dtb /boot/518/</span><br></pre></td></tr></table></figure><p>然后修改 <code>/boot/grub.cfg</code> ，在里面添加多一个 menuentry</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menuentry &#x27;5.18&#x27; &#123;</span><br><span class="line">    linux /518/Image earlycon console=ttyS0,115200n8 stmmac.chain_mode=1 root=/dd</span><br><span class="line">ev/mmcblk0p4 rootwait</span><br><span class="line">    devicetree /518/jh7100-starfive-visionfive-v1.dtb</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后这个文件前面 22 行的内容是这样的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set default=0</span><br><span class="line">set timeout_style=menu</span><br><span class="line">set timeout=2</span><br><span class="line"></span><br><span class="line">set debug=&quot;linux,loader,mm&quot;</span><br><span class="line">set term=&quot;vt100&quot;</span><br><span class="line"></span><br><span class="line">menuentry &#x27;5.18&#x27; &#123;</span><br><span class="line">    linux /518/Image earlycon console=ttyS0,115200n8 stmmac.chain_mode=1 root=/dev/mmcblk0p4 rootwait</span><br><span class="line">    devicetree /518/jh7100-starfive-visionfive-v1.dtb</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">menuentry &#x27;Fedora vmlinux-5.17.0&#x27; &#123;</span><br><span class="line">    linux /Image earlycon console=ttyS0,115200n8 stmmac.chain_mode=1 root=/dev/mmcblk0p4 rootwait</span><br><span class="line">    devicetree /jh7100-starfive-visionfive-v1.dtb</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">menuentry &#x27;Fedora vmlinux-5.15.10+ visionfive&#x27; &#123;</span><br><span class="line">    linux /vmlinuz-5.15.10+ ro root=UUID=59fcd098-2f22-441a-ba45-4f7185baf23f rhgb console=tty0 console=ttyS0,115200 earlycon rootwait stmmaceth=chain_mode:1 selinux=0 LANG=en_US.UTF-8</span><br><span class="line">    devicetree /dtbs/5.15.10+/starfive/jh7100-starfive-visionfive-v1.dtb</span><br><span class="line">        initrd /initramfs-5.15.10+.img</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面的 5.17 也是我之前自己添加的。此时重启机器</p><p>在启动过程中会出现一个选择菜单界面</p><p><img src="/img/2022/image-20220411151418548.png" alt="image-20220411151418548"></p><p>可以按上下键来选择不同的内核版本，如果不手动选的话，就会自动加载第一个。</p><p>进入系统后输入 <code>uname -sr</code> 可以查看当前的内核版本。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$uname -sr   </span><br><span class="line">Linux 5.18.0-rc1-visionfive-g7ff84520cb68</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;串口调试&quot;&gt;&lt;a href=&quot;#串口调试&quot; class=&quot;headerlink&quot; title=&quot;串口调试&quot;&gt;&lt;/a&gt;串口调试&lt;/h3&gt;&lt;p&gt;开发板除了通过 HDMI 连接显示器，然后通过 usb 键盘来控制之外，还可以通过串口与电脑进行连接，将它的输出信息显示在电
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>visionfive 开发板通过 gpio 控制 led 灯</title>
    <link href="https://powersee.github.io/2022/04/visionfive-gpio-led/"/>
    <id>https://powersee.github.io/2022/04/visionfive-gpio-led/</id>
    <published>2022-04-11T01:14:38.000Z</published>
    <updated>2022-04-13T01:16:35.450Z</updated>
    
    <content type="html"><![CDATA[<p>visionfive 是赛昉科技推出的一款开发板，使用的处理器是他们自家研发的【惊鸿 7100】（JH7100），这是一颗 risc-v 架构的处理器，双核 U74，U74 对标的是 ARM 的 Cortex-A55 。</p><p><img src="/img/2022/visionfive1.jpg" alt="visionfive1"></p><h3 id="写入镜像"><a href="#写入镜像" class="headerlink" title="写入镜像"></a>写入镜像</h3><p>这块板子的系统运行和树莓派一样，需要先将系统镜像写入内存卡，再插到板子上来运行。目前官方提供的只有 Fedora 这个发行版，可以在 GitHub 上找到下载链接。</p><p><a href="https://github.com/starfive-tech/Fedora_on_StarFive">https://github.com/starfive-tech/Fedora_on_StarFive</a></p><p>下载完是一个特殊的压缩格式，zst，我搜了一下</p><blockquote><p>当前这种 ZST 格式是一种 压缩文件 ，是由 ZStandard 研发，作为一种 ZStandard压缩文件使用，此文件流行程度是 50 分（0-100满分）。</p></blockquote><p>还得使用专门的工具才能解压，稍微麻烦了点。工具在这里有提供</p><p><a href="https://rvspace.org/en/Product/VisionFive/Technical_Documents/VisionFive_Single_Board_Computer_Quick_Start_Guide">https://rvspace.org/en/Product/VisionFive/Technical_Documents/VisionFive_Single_Board_Computer_Quick_Start_Guide</a></p><p>点击网页左侧的 <strong>Flashing Fedora OS to a Micro-SD Card</strong> 可以快速达到。</p><p><img src="/img/2022/Snipaste_22-04-11_09-21-44.jpg" alt="Snipaste_22-04-11_09-21-44"></p><p>我是在 win10 进行操作的，将下载好的解压工具，从压缩包里解压出来，和 zst 文件放在一起。</p><p><img src="/img/2022/2022-04-11_09-57-19.jpg" alt="2022-04-11_09-57-19"></p><p>此时在这个文件夹里的空白处，一只手按住键盘上的 shift 键，另一只手按一下鼠标的右键，在此处打开 powershell，就可以快速在当前文件夹打开一个命令行窗口。（此处我的 powershell 是自己升级过的，系统自带的是没有带 preview 的。）</p><p><img src="/img/2022/2022-04-11_09-58-00.jpg" alt="2022-04-11_09-58-00"></p><p>执行这条命令就可以解压了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./zstd.exe -d Fedora-riscv64-jh7100-developer-xfce-Rawhide-20211226-214100.n.0-sda.raw\.zst -o Fedora-riscv64-jh7100-developer-xfce-Rawhide-20211226-214100.n.0-sda.raw</span><br></pre></td></tr></table></figure><p>解压出来的文件差不多 13G，可以使用写盘工具将它写入内存卡中，例如 etcher。</p><h3 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h3><p>之后将内存卡插入开发板，使用 HDMI 线连接显示器，通电开机，便可进入 Fedora 了。</p><p>默认的用户名是 riscv</p><p>密码是 starfive</p><p>这台设备的桌面体验，我感觉还是比较差的，毕竟没有 GPU，而已本身也只是双核而已，所以桌面体验会有一些卡顿。很快我就放弃用鼠标来控制它了，而是选择在电脑上通过 ssh 来控制它。</p><p><img src="/img/2022/visionfive-neofetch.jpg" alt="visionfive-neofetch"></p><h3 id="如何通过-gpio-控制-LED-灯？"><a href="#如何通过-gpio-控制-LED-灯？" class="headerlink" title="如何通过 gpio 控制 LED 灯？"></a>如何通过 gpio 控制 LED 灯？</h3><p>通过这个网页，我们可以了解到这块板子的 GPIO 信息</p><p><a href="https://rvspace.org/en/Product/General/StarFive_40-Pin_GPIO_Header_User_Guide">https://rvspace.org/en/Product/General/StarFive_40-Pin_GPIO_Header_User_Guide</a></p><p><img src="/img/2022/visionfive-gpio.jpg" alt="img"></p><p>准备一颗 LED 灯，一头连接 34 号的 GND，一头连接 40 号的 GPIO0</p><p><img src="/img/2022/LED-off.jpg" alt="LED-off"></p><p>在终端里进行如下的操作（需要 root 身份来执行）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /sys/class/gpio</span><br><span class="line">echo 448 &gt; export</span><br><span class="line">cd gpio448</span><br><span class="line">echo out &gt; direction</span><br><span class="line">echo 1 &gt; value</span><br></pre></td></tr></table></figure><p>这样便可以点亮 LED 灯</p><p><img src="/img/2022/LED-on.jpg" alt="LED-on"></p><p>如果想熄灭它，只需执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 &gt; value</span><br></pre></td></tr></table></figure><p>官方文档里的这个表格非常重要，刚才我们控制 GPIO0，操作的是 448，如果现在我们想控制 GPIO4，从表格可以查到是 452，那么只需将刚才的 448 换成 452 即可让 GPIO4 输出高电平。</p><p><img src="/img/2022/gpio%E8%A1%A8%E6%88%AA%E5%9B%BE.jpg" alt="gpio"></p><p>对此我写了一个 Python 脚本，作用是监控哔哩哔哩上面是否有人给我发私信，也就是我是否有未读消息，如果有的话，则点亮 LED 灯。而当我看完消息后，脚本检测到目前没有未读消息了，则会将 LED 灯熄灭。</p><p>脚本已放在 GitHub 上面，有兴趣的朋友可以参考一下。</p><p><a href="https://github.com/powersee/bilibili_unread/blob/master/bili-for-visionfive.py">https://github.com/powersee/bilibili_unread/blob/master/bili-for-visionfive.py</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;visionfive 是赛昉科技推出的一款开发板，使用的处理器是他们自家研发的【惊鸿 7100】（JH7100），这是一颗 risc-v 架构的处理器，双核 U74，U74 对标的是 ARM 的 Cortex-A55 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2022
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="python" scheme="https://powersee.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pve去除订阅提示</title>
    <link href="https://powersee.github.io/2022/04/pve-remove-notice/"/>
    <id>https://powersee.github.io/2022/04/pve-remove-notice/</id>
    <published>2022-04-09T13:45:14.000Z</published>
    <updated>2022-04-09T13:48:21.063Z</updated>
    
    <content type="html"><![CDATA[<p>pve 每次登录时，都会弹出一个提示</p><p><img src="/img/2022/pve-subscription-notice.jpg"></p><p>看着挺烦的，如何去掉它呢？网上一搜很容易就找到解决方案，这里记录一下。我目前使用的版本是 7.1-7</p><p>参考文章：<a href="https://johnscs.com/remove-proxmox51-subscription-notice/">Remove Proxmox Subscription Notice (Tested to 7.1-10) | John’s Computer Services (johnscs.com)</a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -Ezi.bak &quot;s/(Ext.Msg.show\(\&#123;\s+title: gettext\(&#x27;No valid sub)/void\(\&#123; \/\/\1/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br></pre></td></tr></table></figure><p>上面这一步是备份 <code>proxmoxlib.js</code> 为 <code>proxmoxlib.js.bak</code>，然后修改 <code>proxmoxlib.js</code> 里的 “Ext.Msg.show” 为 “void”</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart pveproxy.service</span><br></pre></td></tr></table></figure><p>之后重启一下服务即可。</p><p>这里记录一个坑，之前看到另外一个教程，是修改 <code>/usr/share/pve-manager/js/pvemanagerlib.js</code> 这个文件的，但是要修改的内容我找不到，然后我自己摸索，看到可能是这个提示相关的代码，我就用 <code>#</code>将它注释掉。结果悲剧了。</p><p>本来打算修改 js 文件，去掉 pve 的订阅提示，却不小心在 js 里面用 # 来注释，导致了重启 pve 的管理面板服务之后，web 端打开时一片空白，什么都不显示，重启机器也没用。</p><p>好在 ssh 还可以连接进去，所以我再次修改 js 文件，将之前的 <code>#</code> 去掉，再执行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart pveproxy.service</span><br></pre></td></tr></table></figure><p>就救回来了。看来 pve 的版本不同，js 内容也会不同的，大家找教程的时候记得留意一下版本是否对应。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pve 每次登录时，都会弹出一个提示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2022/pve-subscription-notice.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;看着挺烦的，如何去掉它呢？网上一搜很容易就找到解决方案，这里记录一下。我目前使用的版本是 7.1-7&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>千万别用松鼠记账</title>
    <link href="https://powersee.github.io/2022/01/songshujizhang/"/>
    <id>https://powersee.github.io/2022/01/songshujizhang/</id>
    <published>2022-01-24T08:43:35.000Z</published>
    <updated>2022-01-24T08:46:30.279Z</updated>
    
    <content type="html"><![CDATA[<p>松鼠记账，这是一款记账app，我平时主要用来记录日常支出与收入，使用的时间也不短了。到现在应该有一年多了。</p><p>由于我的手机取消了应用商店自动更新 app 的功能，所以一直都是使用旧版本，感觉还不错，没有广告，而且 APP 的推送通知功能，也被我屏蔽了，平时根本不会被打扰到。</p><p>有一天，我心血来潮，试着将它的一个权限【读写手机存储】给关闭了，因为这个功能是用来读取手机里的相片，或者内部存储空间的其它文件的。作为一款记账软件，我记账并不需要上传图片，所以我就把它关了。</p><p>然后就悲剧了，再次打开软件，所有的记账记录全部丢失了。。。一年多快两年的记录，全部都没了。。。</p><p>其实这款软件也是可以注册账号的，登录之后就可以将数据同步在服务器里，不过我之前看到它要求必须用手机号注册才行，就没有注册账号，一直都是单机使用，所以现在数据丢失，也就完全没法找回了，全没了。</p><p>那么是因为关闭这个权限，导致软件没法正常运行吗？其实并不是，因为我丢失数据之后，继续关闭这个权限使用，是可以正常用的，这个权限并不是必须的。总之这点我就当作是它的一个 bug 吧，之后我就老老实实用手机号注册一个账号，避免以后又发现数据丢失的情况。</p><p>那么就这样使用了一段时间，然后又发生了一件事。我的手机一直提示我，可以升级 miui12.5 稳定版了，快点升级快点升级，但是我不想升级，因为我没看到升级后能给我带来什么新的功能。</p><p>然而它也不会放任我不升级，它每天都会给我来一条推送，我想禁止它的通知功能，但是因为【系统升级】是系统级应用，没法禁止。我只能每天都手动把这条升级通知给清除掉。</p><p>终于有一天，我忍受不了了，我想砸手机，但是舍不得，所以还是被逼得只能去升级系统了，垃圾 MIUI。</p><p>那么回到主线，升级之后，松鼠记账这个 APP 会闪退。那么我想到的是，可能是 APP 版本太老了吧，毕竟我一直没去升级 APP 版本，可能和现在的 MIUI 12.5 有冲突吧。于是我就升级 APP 到最新的。</p><p>于是我升级完 APP 回来了，然后我震惊了。现在打开 APP 有开屏广告了，APP 底部多了返利的标签页，记账页面显示开通 VIP 可以无广告，你不开通的话，每记一次帐，就给你弹一次广告。那么就开通 VIP 吧，毕竟人开发一款 APP 也不容易嘛。</p><p>价格是多少呢？</p><p>11.9 元，每个月，每个月，<strong>每个月</strong></p><p>我他妈震惊了，人家 B 站会员，打折的时候一年一百出头，购买后大量动漫、电影、电视剧可以观看。人家百度网盘每年 11 月购买会员有优惠，一年 svip 价格不到 200 ，购买后可以扩大网盘空间，可以高速下载从网上转存的大量资源。</p><p>而你一个记账软件，一个月会员费收 12 块，主要作用是去掉记账时的广告…… 我觉得我要是去充值那我肯定就是智障了。而且我也后悔了，升级之前为什么没有看看应用商店里，其它网友的评论呢？要是早看到我肯定不会去升级的。</p><p><img src="/img/2022/Screenshot_2022-01-24-13-14-37-156_com.xiaomi.market.jpg" alt="com.xiaomi.market"></p><p>不过也好，越早知道它们吃相这么难看，才能够越早转移。于是我开始寻找其它的记账 APP 来替代它。然而我并没有立刻找到，所以暂时还是需要用到它，于是我把这款软件的联网功能禁止了，不能联网它也没广告了，不过每次打开 APP 到可以记账的页面，大概需要 10 秒才行，因为它好像设定了开屏时会定住几秒，用来显示开屏广告，如果没法联网加载广告图片，会停在那里显示 APP 的开屏页面。</p><h3 id="替代方案——那样记账"><a href="#替代方案——那样记账" class="headerlink" title="替代方案——那样记账"></a>替代方案——那样记账</h3><p>了解来源——GitHub</p><p>我之前在搜索引擎里找，没找到合适的，感觉大多数都是商业公司的产品，我是再也不想 APP 用着用着就给我来一堆广告了，所以那些我都不太想去尝试。然后今天我尝试在 GitHub 上面搜索，因为我想可能也会有人和我一样，只需要一个简单的记录收入和支出的应用而已，并不需要那些花里胡哨的功能。那么应该也有人会尝试自己写一个吧。</p><p>果然，在 GitHub 搜索记账后，出来很多的项目，而第一个结果就是我想要的了</p><p><a href="https://github.com/purezhi/MoneyKeeper">https://github.com/purezhi/MoneyKeeper</a></p><p>不过它最后的更新在 2018 年的 6 月，距今都快 4 年了。然后我根据 readme 跳转到酷安，发现原来作者是一直有更新的，最近的更新是 2021-12-20，版本 6.8.5</p><p><a href="https://www.coolapk.com/apk/188475">那样记账 - 纯粹的记账软件(me.bakumon.moneykeeper) - 6.8.5 - 应用 - 酷安 (coolapk.com)</a></p><p>应用介绍里有这么一段话</p><blockquote><p>没有任何多余的权限，没有广告，没有用户系统，不保存用户任何信息，只是单纯的记录收支情况，做一些明了的统计，通过清楚的了解钱花在了哪，来建立起良好的消费习惯。 </p></blockquote><p>我很喜欢这样的软件，很纯粹，很轻量，安装包只有 5.3M，里面不会弹广告，备份可以使用本地备份和云备份，数据都是备份为 zip 压缩包的。云备份是通过 webdav 来实现的，使用我非常熟悉的坚果云就行。里面可以开通永久会员，价格是 21 元，不是一个月，也不是一年，而是 21 元买断。承诺永久无广告，不过目前这个 APP 好像也没有广告，所以目前会员的作用是可以使用不同的主题和图标包。不过我认为默认的图标就挺好看的了。</p><p>设置里面可以把【快速记账】的设置勾选上，这样打开 APP 时就自动进入记账页面了，填上金额和选择一个类别就行。软件的速度也很快，从桌面点击打开到记账页面，耗时不到一秒，对比松鼠记账的 10 秒，呵呵。</p><p>我的手机里还有另外一款 APP，也是在 GitHub 了解到的，是一款日记软件，模仿电影《你的名字》里面的 APP 开发的，这款是完全开源的。</p><p><a href="https://github.com/DaxiaK/MyDiary">DaxiaK/MyDiary: In the Movie “-your name.-“ (君の名は。, 你的名字) , “My Diary” of android version. (github.com)</a></p><p>它的备份方式也是通过将数据导出为 zip 压缩包，然后到其它的手机上，导入这个 zip 压缩包就可以恢复数据。也挺好的，开源软件虽然后续就没人维护了，但是只要基本功能都有，不更新也无所谓了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;松鼠记账，这是一款记账app，我平时主要用来记录日常支出与收入，使用的时间也不短了。到现在应该有一年多了。&lt;/p&gt;
&lt;p&gt;由于我的手机取消了应用商店自动更新 app 的功能，所以一直都是使用旧版本，感觉还不错，没有广告，而且 APP 的推送通知功能，也被我屏蔽了，平时根本不
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>品胜 WPR001N 折腾与刷机</title>
    <link href="https://powersee.github.io/2022/01/pisen-wpr001n/"/>
    <id>https://powersee.github.io/2022/01/pisen-wpr001n/</id>
    <published>2022-01-17T14:19:44.000Z</published>
    <updated>2022-01-18T03:19:05.461Z</updated>
    
    <content type="html"><![CDATA[<p>之前买了台品胜路由器，买来之后系统是有缺陷的，没法进入 web 管理界面，最终没办法，只能刷机，于是刷了个 breed 进去。</p><p>但是只有 breed，没有系统固件可以用……所以就放着吃灰了。</p><p>今天有网友说可以帮我编译固件，所以又来折腾它了。</p><p>因为不知道编译好的固件，刷入后会不会出问题，为了避免待会完全变砖，无法挽回。所以先研究一下怎么 ttl 串口连接。</p><p>首先需要拆机，带二维码的为背面，沿着缝隙撬开，有三颗螺丝，拧开后再撬正面的外壳。</p><p>主板上面有三个金属接触点，分别是 RXD, TXD, GND</p><p><img src="/img/2022/Snipaste_22-01-17_22-14-57.jpg" alt="主板"></p><p>一开始我拿杜邦线将它与 CH340G 模块进行连接（GND–GND, TX–RX, RX–TX），我是直接用手按着，然而我还需要接通电源以及操控鼠标，所以一直没法按稳。</p><p>没办法，还是拿出了电烙铁，焊点锡上去吧。结果成了这样（其实也没多牢固，不过比用手按着好很多了）</p><p><img src="/img/2022/Snipaste_22-01-17_22-18-01.jpg" alt="焊锡好"></p><p>之后连接好模块，电脑上可以使用 putty 或者 xshell 来进行串口调试。由于我之前以及刷好 breed 进去了，所以给路由器通电，然后在几秒内按回车键，就可以进入 breed，在浏览器可以通过 <code>192.168.1.1</code> 来访问。</p><p>如果不按回车键的话，就会启动闪存中的系统。然后我就发现了，原来我之前刷进去的 openwrt 固件，是可以启动的</p><p><img src="/img/2022/2022-01-17_19-04-24.jpg" alt="2022-01-17_19-04-24"></p><p><img src="/img/2022/2022-01-17_19-10-16.jpg" alt="2022-01-17_19-10-16"></p><p>通过 ttl 我才知道的，不过它的 web 服务和 wifi 都没有开启，系统能启动成功也没什么用。</p><p>那么 ttl 连接没问题，就可以来折腾看看了。于是我将 @<strong>大电视姬</strong>  发过来的固件，在 breed 中刷入路由器。</p><p>之后路由器自动重启，成功了。</p><p><img src="/img/2022/2022-01-17_20-06-28.jpg" alt="2022-01-17_20-06-28"></p><p>然后，索然无味……就算刷机成功了，又怎样呢？我又不会去使用它，家里面基本所有路由器都比它强，没什么意思。</p><p>固件放到网盘和下载站里，在【路由器】【品胜路由器】中，再次感谢 @<strong>大电视姬</strong></p><p>网盘：<a href="http://veger.ysepan.com/">http://veger.ysepan.com/</a></p><p>下载站：<a href="https://pan.powersee.top/">https://pan.powersee.top/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前买了台品胜路由器，买来之后系统是有缺陷的，没法进入 web 管理界面，最终没办法，只能刷机，于是刷了个 breed 进去。&lt;/p&gt;
&lt;p&gt;但是只有 breed，没有系统固件可以用……所以就放着吃灰了。&lt;/p&gt;
&lt;p&gt;今天有网友说可以帮我编译固件，所以又来折腾它了。&lt;/p
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>买了两款品胜路由器</title>
    <link href="https://powersee.github.io/2022/01/pisen-router/"/>
    <id>https://powersee.github.io/2022/01/pisen-router/</id>
    <published>2022-01-14T05:54:39.000Z</published>
    <updated>2022-01-14T09:24:36.305Z</updated>
    
    <content type="html"><![CDATA[<p>最近从小黄鱼收了台路由器，挺特别的，带耳机孔。</p><p>不过我买的是 WPR001N ，这款只有的 WiFi 速率只有 150M，而另外有一款外形和它一样的，但是速率是 300M。</p><p><img src="/img/2022/001N.jpg" alt="001N"></p><p>原本以为它们就这点区别而已，买来后才发现并不是，区别还是挺多的。</p><p>首先它们的外形还有一点不同的，就是 300M 这款是有两个网口的，而我的这款 150M 的，它的网口只有一个。其次它们的型号也不同，我这个是 WPR001N ，而那款是 WPR003N，所以导致了，它们的固件是不通用的。</p><p><img src="/img/2022/001N-rj45.jpg" alt="001N"></p><p>所以如果你是为了刷机，那么应该多花点钱买 300M 那款。不过其实我个人并不建议买这玩意来刷 openwrt，毕竟它最大的价值是那个 3.5mm 耳机接口，而刷机之后，接口就没法用了。只能作为普通的路由器使用。</p><p>但是作为普通路由器，它在目前看来，又太弱了。比它更好的选择有太多了，例如同样百兆的路由器有：斐讯 k2、极路由、小米路由器等等，这些都是几十块就能买到的，而且网上的固件也很多，很容易找。</p><p>如果价格升到 50 块，那中兴 e8820s 是一个非常好的选择，千兆，带 USB 接口。</p><p>然后说回来，目前我手里的这款，刷机方法教程应该只有恩山的这个帖子：<a href="https://www.right.com.cn/forum/thread-7717621-1-1.html">https://www.right.com.cn/forum/thread-7717621-1-1.html</a></p><p>里面并没有提供 breed ，我自己网上搜了下。</p><hr><p>hackpascal自建的http服务器：<a href="http://breed.hackpascal.net/">http://breed.hackpascal.net/</a></p><p>breed 备份下载地址：</p><p><a href="https://pan.powersee.top/">https://pan.powersee.top/</a></p><p><a href="http://veger.ysepan.com/">http://veger.ysepan.com/</a></p><p>在 【路由器】【品胜路由器wrp001N-breed】里面</p><hr><p>不过目前没找到它可以用的固件，可能得自己去编译才行……</p><h3 id="更奇葩的路由器"><a href="#更奇葩的路由器" class="headerlink" title="更奇葩的路由器"></a>更奇葩的路由器</h3><p>后来我又买了品胜的另外一款路由器——净 音 云路由</p><p><img src="/img/2022/%E5%93%81%E8%83%9C%E8%B7%AF%E7%94%B1%E5%99%A8.jpg" alt="两款路由器"></p><p>这款里面内置风扇，配有海绵，可以用当空气净化器……脑洞非常的大</p><p>当然，它同样有音频输出接口，所以可以连接一个音响，然后使用它配套的 APP——Pisen Cloud，使用这个 APP 可以访问到，插在路由器上面的 U 盘，或者移动硬盘中的文件。它这个 APP 应该是相当古老的，在现在的全面屏手机上面使用时，下面的一节是黑的，不显示内容。</p><p><img src="/img/2022/pisen_cloud_app.png" alt="APP底部"></p><p>我记得下载时官网好像提示要求 Android 版本要在 4.0 及以上。然后我还发现了，这款 APP 似乎完全没要求过权限。如果是其它的 APP，想要获取定位、访问相册、访问手机里的其它文件，手机应该会弹出一个提示权限要求才对。但是这个 APP 完全没有，直接就可以访问了。原来只要保持 APP 兼容旧版本的 Android，就可以无视这些权限要求，还是挺可怕的，陌生 APP 安装要谨慎点。</p><p>对了，这款 APP 想要识别到路由器，需要手机连接到【净 音 云路由】的 WiFi 上，同时还要把手机的定位功能打开，这点是 Android 6 之后的要求，可能这个 APP 诞生时 Android 6 还没发布吧，所以它也没有提示什么的。</p><p>在 APP 里面的闪电互传里，可以播放手机里面的音乐，点击右上角可以将音乐推送到路由器上，也就可以让连接在路由器上的音响出声。其实它就是 dlna 而且，用 网易云音乐 也可以推送，点击歌词界面的右上角就行。但是手机必须连接在品胜路由器的 WiFi 下才行，才可以识别并推送。如果手机和连接在品胜路由器的上级路由，此时是发现不了 dlna 信号的。</p><p><img src="/img/2022/pisen-dlna.jpg" alt="dlna"></p><p>总体体验下来，不是什么好东西，并不实用，不建议购买。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近从小黄鱼收了台路由器，挺特别的，带耳机孔。&lt;/p&gt;
&lt;p&gt;不过我买的是 WPR001N ，这款只有的 WiFi 速率只有 150M，而另外有一款外形和它一样的，但是速率是 300M。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2022/001N.jpg&quot; alt=&quot;0
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客2022年瞎折腾</title>
    <link href="https://powersee.github.io/2022/01/hexo-2022/"/>
    <id>https://powersee.github.io/2022/01/hexo-2022/</id>
    <published>2022-01-12T03:21:54.000Z</published>
    <updated>2022-01-12T08:40:27.245Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我的博客一直使用 hexo 部署的，之前还有同步到 gitee 上，后来 gitee 提示我说有内容违规，把 gitee page 给我关了，还要我自己去审查我哪里违规。。。</p><p>那就算了，不用 gitee 了，现在主要部署在 GitHub 上面。</p><h3 id="为什么使用-hexo？"><a href="#为什么使用-hexo？" class="headerlink" title="为什么使用 hexo？"></a>为什么使用 hexo？</h3><p>主要原因有，文档可以使用 Markdown，博客可以部署到 GitHub pages（免费），迁移不难（相对于 WordPress 来说）。说起来我这博客还真的迁移了好几次了，之前在黑苹果上，后来迁移到 win7，之后到 win10，现在迁移到 Mac mini M1</p><p>前段时间也了解到有一个和 hexo 差不多的，可以将 Markdown 渲染为 HTML，然后可以部署到 GitHub pages 的项目——<a href="https://vuepress.vuejs.org/zh/">VuePress (vuejs.org)</a></p><p>不过我还没去深入了解，毕竟 hexo 我也用了好几年了，其实主题方面也花了不少时间去折腾，才达到了自己勉强满意的效果，如果换其它的，之前的时间感觉就白费了，而且可以又得花时间去了解、去调整到自己满意的效果。</p><p>所以既然现在 hexo 还能用，就继续用就行了。</p><h3 id="本次迁移过程中遇到的问题"><a href="#本次迁移过程中遇到的问题" class="headerlink" title="本次迁移过程中遇到的问题"></a>本次迁移过程中遇到的问题</h3><p>步骤是安装 nodejs 先，我是直接下载 tar 压缩包，解压后将 bin 文件夹路径添加到环境变量中的，执行 node -v 和 npm -v 查看版本，成功显示既可。</p><p>之后参考 hexo 官网安装，然后把之前备份的 hexo 博客项目拉取回来，进入博客根目录，执行 npm install 安装依赖。</p><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>完成后就碰到问题了，执行 hexo d 无法将内容部署到 GitHub 上面。显示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Copying files from public folder</span><br></pre></td></tr></table></figure><p>后就报错了</p><p>那么就网上搜搜看别人的解决方法，于是找到了。</p><p><a href="https://www.zhihu.com/question/443396119">求解hexo d把文件复制到deploy文件夹就没用然后了？ - 知乎 (zhihu.com)</a></p><blockquote><p>我也遇到了这个问题，这是我在GitHub上看到的某位大佬的办法，先把原来的hexo-deployer-git插件卸载了，然后直接从 master 分支安装<br>npm un hexo-deployer-git<br>npm i hexojs/hexo-deployer-git</p><p>作者：cc666<br>链接：<a href="https://www.zhihu.com/question/443396119/answer/1721530396">https://www.zhihu.com/question/443396119/answer/1721530396</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>接着遇到了第二个问题，就是 public 文件夹内的 html 文件，内容都是空白的。</p><p>那么这个具体是怎么解决的呢？其实我也不太清楚，我的操作过程是，升级看看。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm audit fix</span><br><span class="line"></span><br><span class="line">npm audit fix --force</span><br></pre></td></tr></table></figure><p>然后查看 <code>package.json</code> 发现里的 hexo 版本是 3.7，对比一下 hexo 官网，最新的好像已经是 6 点几了，于是我执行一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><p>然后它就自动变为 6.0.0 了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;hexo&quot;: &#123;</span><br><span class="line">  &quot;version&quot;: &quot;6.0.0&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>那么看来已经把 hexo 升级了，于是再来试试 <code>hexo g</code></p><p>这一次生成的 html 文件就又内容了，在执行 <code>hexo d</code> 部署到 GitHub pages，就完成了。</p><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>然后部署到 GitHub pages 的内容，打开后发现图片没法加载。</p><p>原因是我的博客文章里，图片链接都是以这种方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![Mac_M1_kcc](\img\2021\Mac_M1_kcc.png)</span><br></pre></td></tr></table></figure><p>之所以是反斜杠 <code>\</code> ，是因为我之前用的是 win10 ，Windows 里面文件的路径就是用反斜杠的，而在 Linux 或者 macOS 里面，文件路径则是 <code>/</code> ，所以导致现在在浏览器里面，图片的加载路径变为像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://powersee.github.io/2021/07/zte-e8820s/\img\2021\e8820s-ttl.jpg</span><br></pre></td></tr></table></figure><p>这样的了，自然就没法加载出来图片。不过也是很奇怪，我刚才没有升级 hexo 的时候，明明图片是可以加载出来的（刚才在电脑里通过 hexo s 访问 localhost:4000 的时候，图片什么的都是正常的……）</p><p>然后我又查看了一下我的备份博客，我设置它每天凌晨同步 GitHub 上的网页，所以刚才更新的内容，它还没同步过去。然后我发现，其实之前的图片也是有反斜杠的，并且图片可以正常加载。</p><p><img src="/img/2022/%E4%BD%BF%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%E7%9A%84%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5.jpg"></p><p>等了一会之后，我再去刷新 GitHub pages 搭建的博客，图片大多数也可以加载了。有点莫名其妙。不过我还是使用 vscode 里的查找替换功能，将 <code>\img\2021\</code> 全部替换为 <code>/img/2021/</code> ，以及 2020 年的。</p><p>其实想想也不怎么省心呀，不过还好问题能够解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我的博客一直使用 hexo 部署的，之前还有同步到 gitee 上，后来 gitee 提示我说有内容违规，把 gitee page 给我关了
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>kindle 漫画制作软件 kindle comic converter 汉化版</title>
    <link href="https://powersee.github.io/2021/12/about-kcc/"/>
    <id>https://powersee.github.io/2021/12/about-kcc/</id>
    <published>2021-12-10T12:20:37.000Z</published>
    <updated>2022-01-12T08:29:09.975Z</updated>
    
    <content type="html"><![CDATA[<p>Kindle Comic Converter 是漫画制作软件，主要是用来讲图片转换为 epub 或者 mobi 格式的文件，方便墨水屏设备阅读。</p><p>项目地址：<a href="https://github.com/ciromattia/kcc">ciromattia/kcc: KCC (a.k.a. Kindle Comic Converter) is a comic and manga converter for ebook readers. (github.com)</a></p><p>最后的更新停留在 2019 年 10 月，最近我也是花了很多的时间在研究这款软件上。最终的成果是在自己的机器上，编译出了新的软件版本。</p><p>目前编译出的有</p><ul><li>Windows 64 位版（win10 和 win7 上都可以用）</li><li>Macos ARM 版（在 M1 芯片的 Mac mini 上可以使用，不需要转译）</li></ul><p><img src="/img/2021/Mac_M1_kcc.png" alt="Mac_M1_kcc"></p><blockquote><p>软件链接：</p><p>蓝奏云：<a href="https://pan.lanzou.com/b0bg5lrub">https://pan.lanzou.com/b0bg5lrub</a> 密码:2ebz</p><p>百度网盘：链接：<a href="https://pan.baidu.com/s/1NWci0kT5NN_XFfv3HETVJw">https://pan.baidu.com/s/1NWci0kT5NN_XFfv3HETVJw</a><br>提取码：psee</p><p>个人下载站：<a href="https://pan.powersee.top/">https://pan.powersee.top/</a> </p><p>在【Windows 应用】和【Mac 应用】文件夹中</p><p>阿里云盘分享不了压缩包，mac 的 dmg 安装包居然也不行。。。</p></blockquote><p><img src="/img/2021/profiles_kcc.png" alt="profiles_kcc"></p><p>并且我还对软件进行了汉化。并且添加多几个预设，如果你们的设备没有在列表里面，其实也没有关系的，选择同样分辨率的设备就行。例如里面的 Boox，我就只添加一个，因为我发现 7.8 英寸的 nova air 和 10.3 英寸的 note X 其实它们的分辨率是一样的，都是1404 * 1872，和 kobo auro ONE 其实也一样，本来是不需要添加进去的。</p><p>但是我发现如果预设选择 kobo 系列的，那么转换出来的文件，后缀是 kepub.epub，看着有点别扭，所以我就添加多一个预设进去了。这样转换出来的 epub 就不会带 kepub。</p><p><img src="/img/2021/kcc-other.jpg" alt="kcc-other"></p><p>如果自己的设备在里面没有相同分辨率的机器，那么可以选择 other，然后自己添加分辨率。</p><p>这里我也把里面的预设的分辨率放出来给大家参考</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;K1&#x27;: (&quot;Kindle 1&quot;, (600, 670), Palette4, 1.8),</span><br><span class="line">&#x27;K2&#x27;: (&quot;Kindle 2&quot;, (600, 670), Palette15, 1.8),</span><br><span class="line">&#x27;K34&#x27;: (&quot;Kindle Keyboard/Touch&quot;, (600, 800), Palette16, 1.8),</span><br><span class="line">&#x27;K578&#x27;: (&quot;Kindle&quot;, (600, 800), Palette16, 1.8),</span><br><span class="line">&#x27;KDX&#x27;: (&quot;Kindle DX/DXG&quot;, (824, 1000), Palette16, 1.8),</span><br><span class="line">&#x27;KPW&#x27;: (&quot;Kindle Paperwhite 1/2&quot;, (758, 1024), Palette16, 1.8),</span><br><span class="line">&#x27;KV&#x27;: (&quot;Kindle Paperwhite 3/4/Voyage/Oasis&quot;, (1072, 1448), Palette16, 1.8),</span><br><span class="line">&#x27;KPW5&#x27;: (&quot;Kindle Paperwhite 5/Signature Edition&quot;, (1236, 1648), Palette16, 1.8),</span><br><span class="line">&#x27;KO&#x27;: (&quot;Kindle Oasis 2/3&quot;, (1264, 1680), Palette16, 1.8),</span><br><span class="line">&#x27;MIX7&#x27;: (&quot;Kindle Oasis 2/3&quot;, (1264, 1680), Palette16, 1.8),</span><br><span class="line">&#x27;KoMT&#x27;: (&quot;Kobo Mini/Touch&quot;, (600, 800), Palette16, 1.8),</span><br><span class="line">&#x27;KoG&#x27;: (&quot;Kobo Glo&quot;, (768, 1024), Palette16, 1.8),</span><br><span class="line">&#x27;KoGHD&#x27;: (&quot;Kobo Glo HD&quot;, (1072, 1448), Palette16, 1.8),</span><br><span class="line">&#x27;KoA&#x27;: (&quot;Kobo Aura&quot;, (758, 1024), Palette16, 1.8),</span><br><span class="line">&#x27;KoAHD&#x27;: (&quot;Kobo Aura HD&quot;, (1080, 1440), Palette16, 1.8),</span><br><span class="line">&#x27;KoAH2O&#x27;: (&quot;Kobo Aura H2O&quot;, (1080, 1430), Palette16, 1.8),</span><br><span class="line">&#x27;KoAO&#x27;: (&quot;Kobo Aura ONE&quot;, (1404, 1872), Palette16, 1.8),</span><br><span class="line">&#x27;BOOX&#x27;: (&quot;BOOX nova air / note X&quot;, (1404, 1872), Palette16, 1.8),</span><br><span class="line">&#x27;KoC&#x27;: (&quot;Kobo Clara HD&quot;, (1072, 1448), Palette16, 1.8),</span><br><span class="line">&#x27;KoL&#x27;: (&quot;Kobo Libra H2O&quot;, (1264, 1680), Palette16, 1.8),</span><br><span class="line">&#x27;KoF&#x27;: (&quot;Kobo Forma&quot;, (1440, 1920), Palette16, 1.8),</span><br><span class="line">&#x27;OTHER&#x27;: (&quot;Other&quot;, (0, 0), Palette16, 1.8),</span><br></pre></td></tr></table></figure><p>其实选择不同的预设，只是转换出来的图片分辨率不用而已，但是，好像都是可以正常全屏阅读的，例如我同一本漫画，转为为 ko2 和 kindle（也就是上面的 K578，分辨率为 600 X 800），那么结果在我的 kindle 499 上面都是可以正常阅读，而且明显用 ko2 预设转换出来的漫画，分辨率更高，在 kindle 499 上面看也比较清晰一些。因为选 ko2 转换出来的 mobi 文档，里面的图片分辨率是 1680 X 1264 ，而选择 kindle 转换出来的分辨率则为 600 X 800，所以不管在那台设备，都是高分辨率的图片看起来清晰。</p><p>所以个人感觉，如果可以，尽可能的使用较高分辨率的预设，这样转换出来的图片分辨率比较高，画质更好更清晰，而且可能以后的设备也可以阅读（例如现在有时从网上下载的 kindle 漫画，有些是比较旧的，是当年网友制作给 600 X 800 的设备阅读的，放到 ko2 这个分辨率为 1680 X 1264 的设备看就挺模糊的）。</p><p>当然也不是说分辨率调高就好，现在比较高清的日本漫画资源，分辨率高度方面好像就 2000 多而已，你调个 3、4000 肯定也没用。</p><p><img src="/img/2021/tieba-img-download.jpg" alt="tieba-img-download"></p><p>然后我发现贴吧还是可以下载到挺多漫画图片的，所以我也写了个程序来下载贴吧的高清图片，用着也还不错，图片会按照顺序重命名，所以下载完后，直接把文件夹拖到 kcc 里面就可以转换为 epub 或者 mobi 了，两者可以配合使用。</p><p>对了，kcc 这个软件也是可以将 PDF 漫画，转换为 epub 或者 mobi 的，我之前就有尝试过，将 700 多 M 的 PDF 漫画，拖进去，转换为 mobi 漫画，放到 kindle 上面来阅读。结果会变成两个文件，因为这个软件限制 mobi 格式的文档，最大只能 400M，据说是太大了 kindle 用起来会卡。（作者在论坛说的）</p><p>EPUB 就没有这方面的限制，所以我尝试过把整本漫画转换为 epub，结果生成了一个 1G 多的文档，放到墨案 mix7 上面阅读还挺流畅的。</p><h3 id="12-21-版"><a href="#12-21-版" class="headerlink" title="12.21 版"></a>12.21 版</h3><p><img src="/img/2021/kcc-2021-12-21.jpg" alt="kcc-2021-12-21"></p><p>添加了两个选择框</p><ul><li>禁删 epub</li><li>保持原图</li></ul><p>当我们制作 mobi 漫画时，其实软件是先将图片制作为 epub，然后再使用 kindlegen 将 epub 转换为 mobi，转换完成就把 epub 删除掉。</p><p>如果我们制作的漫画是想要放到网上进行分享的，那么两种格式都保存可能比较好，这样受众会更多一些。所以我添加了一个选项，勾选上就不会删除 epub 了。</p><p>保持原图，就是不对图片进行处理，仅仅是把图片放到 epub 或者 mobi 里面而已，所以不管你的图片是双页，还是留有巨大的白边，它都不管了，直接放进去就行。一些高分辨率图片也可以使用这个功能。</p><h3 id="另类的用法——将-PPT-课件转为-mobi"><a href="#另类的用法——将-PPT-课件转为-mobi" class="headerlink" title="另类的用法——将 PPT 课件转为 mobi"></a>另类的用法——将 PPT 课件转为 mobi</h3><p>这个是网友 @<a href="https://space.bilibili.com/11372531">芊里阿</a>  分享的方法</p><blockquote><p>之前用kindle把ppt转成pdf看，又卡，每一页还显示不全。 用up分享的软件，先把ppt转成图片，然后再转mobi格式的就方便多了（要点那个旋转不切割，不缩放）大家有需要的也可以试试 </p></blockquote><p>如果是直接将 PPT 导出为 PDF，放到 kindle 上面也可以看，但是不能横屏吧。而且 PDF 在 kindle 上面观看，应该是每一页都会全刷，屏闪非常严重。用 mobi 就不会，而且用这个软件可以让图片进行旋转，也就可以全屏观看了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Kindle Comic Converter 是漫画制作软件，主要是用来讲图片转换为 epub 或者 mobi 格式的文件，方便墨水屏设备阅读。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/ciromattia/kcc&quot;&gt;ciromatt
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="kindle" scheme="https://powersee.github.io/tags/kindle/"/>
    
  </entry>
  
  <entry>
    <title>关于 radxa-zero</title>
    <link href="https://powersee.github.io/2021/09/radxa-zero/"/>
    <id>https://powersee.github.io/2021/09/radxa-zero/</id>
    <published>2021-09-17T13:40:18.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>最近搞来了一台 radxa zero</p><p><img src="/img/2021/radxa-zero-1.jpg" alt="radxa-zero-1"></p><p>产品信息：<a href="https://forum.radxa.com/t/introduce-the-radxa-zero/6550/">https://forum.radxa.com/t/introduce-the-radxa-zero/6550/</a></p><p>从论坛可以了解到，目前可以在这台机器上运行 TwisterOS、emuelec、coreelec、Android 9、MiniMyth2、Manjaro</p><p>机器到手时，emmc 自带的是 Android 9，之后我开始尝试运行其它的系统。使用 sd 卡成功运行了 TwisterOS 和 EmuELEC，其它的没有启动成功。</p><p>看论坛有人说需要把 emmc 的内容擦除掉，这样机器启动时就会自动加载 sd 卡的系统。那么我也尝试了，没有效果。</p><p>之后又看到有人说要把 uboot 写入烧录了镜像的 sd 中，我也尝试了，还是没法启动。</p><p>那就算了，我还是刷回 Android 9 吧，不然现在 emmc 浪费着有点可惜。</p><p>但是这时我发现，这机器并不能像以往的晶晨机器那样，使用 usb burning tool 来将安卓固件烧录到 emmc 里面。</p><p>然后我又耗费了很多时间去折腾，中间也联系了 radxa 的工作人员，最终发现，只能使用 Ubuntu 物理机才行。</p><p>教程在官方的 wiki 这里：<a href="https://wiki.radxa.com/Zero/install/eMMC_aml_tool">https://wiki.radxa.com/Zero/install/eMMC_aml_tool</a></p><p>在 Ubuntu 上面没有像 Windows 一样的 gui 烧录程序，只能通过脚本来烧录。我一开始在 win10 上面通过虚拟机，执行脚本，将镜像烧录进机器，却一直报错。即使已经设置了 usb 默认连接到虚拟机里面，也不行。尝试了 virtual box 和 VMware，都没有成功。</p><p>后来 radxa 这边的大哥告诉我，他烧录成功是在物理机上面执行的。那么我就抱着最后的希望，我用 t48e 这台小主机，装了一个 ubuntu 20.04 server 版，之后在 win10 上通过 ssh 控制它。</p><p>安装 lrzsz 后将固件传入机器，下载和安装刷机工具。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># git clone flash tool</span><br><span class="line">git clone https://github.com/radxa/aml-flash-tool.git</span><br><span class="line"># install dependency</span><br><span class="line">cd aml-flash-tool</span><br><span class="line">./INSTALL</span><br></pre></td></tr></table></figure><p>传入固件后，解压（如果电脑没下载固件的话，也可以在 Ubuntu 里面下载）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#下载，看情况</span><br><span class="line">wget https://dl.radxa.com/zero/images/android/radxa_zero_android_9_20210708-amlupdate.img.gz</span><br><span class="line"># 解压</span><br><span class="line">tar -xzvf radxa_zero_android_9_20210708-amlupdate.img.gz</span><br></pre></td></tr></table></figure><p><img src="/img/2021/radxa-zero-2.jpg" alt="radxa-zero-2"></p><p>之后按住机器背后的按键，使用数据线连接运行着 Ubuntu 的电脑，通过 <code>lsusb</code> 查看是否有识别到名字带 Amlogic 的设备。</p><p>有的话可以进行下一步，执行刷机命令，由于此时固件和脚本放在同一个目录下，所以可以这样执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./aml-flash-tool.sh radxa_zero_android_9_20210708-amlupdate.img</span><br></pre></td></tr></table></figure><p>我的执行过程是这样的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ver@t48e:~/aml-flash-tool$ ./aml-flash-tool.sh radxa_zero_android_9_20210717-amlupdate.img</span><br><span class="line">Unpacking image [OK]</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">awk: cmd. line:1: warning: regexp escape sequence `\&quot;&#x27; is not a known regexp operator</span><br><span class="line">Initializing ddr ........[OK]</span><br><span class="line">Running u-boot ........[OK]</span><br><span class="line">Create partitions [OK]</span><br><span class="line">Writing device tree [OK]</span><br><span class="line">Writing bootloader [OK]</span><br><span class="line">Wiping  data partition [OK]</span><br><span class="line">Wiping  cache partition [OK]</span><br><span class="line">Writing boot partition [OK]</span><br><span class="line">Writing dtbo partition [OK]</span><br><span class="line">Writing logo partition [OK]</span><br><span class="line">Writing odm partition [OK]</span><br><span class="line">Writing product partition [OK]</span><br><span class="line">Writing recovery partition [OK]</span><br><span class="line">Writing system partition [OK]</span><br><span class="line">Writing vbmeta partition [OK]</span><br><span class="line">Writing vendor partition [OK]</span><br><span class="line">Resetting board [OK]</span><br><span class="line">ver@t48e:~/aml-flash-tool$</span><br></pre></td></tr></table></figure><p>那么就成功刷好了，之后重启机器就进入 Android 9 了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近搞来了一台 radxa zero&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/radxa-zero-1.jpg&quot; alt=&quot;radxa-zero-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;产品信息：&lt;a href=&quot;https://forum.radxa.com/t/introd
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>中兴e8820s路由器</title>
    <link href="https://powersee.github.io/2021/07/zte-e8820s/"/>
    <id>https://powersee.github.io/2021/07/zte-e8820s/</id>
    <published>2021-07-25T07:11:50.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/2021/zte-e8820s.jpg" alt="zte-e8820s"></p><p>参考帖子：<a href="https://www.right.com.cn/forum/thread-4046951-1-1.html">中兴8820S与8820V2比较及TTL刷机</a></p><p>相关文件：</p><p>网盘：<a href="http://veger.ys168.com/">http://veger.ys168.com/</a><br>个人下载站：<a href="https://pan.powersee.top/">https://pan.powersee.top</a></p><p>padavan 固件下载：<a href="https://opt.cn2qq.com/padavan">https://opt.cn2qq.com/padavan</a></p><p>选择 ZTE_E8820S 开头的</p><p>这台路由器想刷机的话，需要自己焊接针脚。</p><p><img src="/img/2021/e8820s-ttl.jpg" alt="e8820s-ttl"></p><p>我使用的模块是 CH340</p><p><img src="/img/2021/e8820s-ttl2.jpg" alt="e8820s-ttl2"></p><p>软件的选择有很多，可以用 putty，也可以用 xshell。</p><ul><li>连接上之后，使用账号密码进行登录。</li><li>之后将 breed 放在 U 盘中，插入路由器</li><li>路由器进入 U 盘所在目录</li><li>备份原系统</li><li>写入 breed</li><li>重启</li></ul><p><img src="/img/2021/command-zte.png" alt="14.command-zte"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/2021/zte-e8820s.jpg&quot; alt=&quot;zte-e8820s&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考帖子：&lt;a href=&quot;https://www.right.com.cn/forum/thread-4046951-1-1.html&quot;&gt;中兴8820
      
    
    </summary>
    
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>vscode 修改默认终端</title>
    <link href="https://powersee.github.io/2021/07/vscode-change-default-terminal/"/>
    <id>https://powersee.github.io/2021/07/vscode-change-default-terminal/</id>
    <published>2021-07-18T13:37:21.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>vscode 默认新建终端的话，开启的是一个 cmd 的 shell，如何将它改为其它的呢？例如 powershell。</p><p>首先点击左下角的进入设置，也可以用快捷键 <code>ctrl + ,</code> </p><p>点击【功能】，【终端】，修改如下图两个地方即可。</p><p><img src="/img/2021/vscode-settings.jpg" alt="vscode-settings"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vscode 默认新建终端的话，开启的是一个 cmd 的 shell，如何将它改为其它的呢？例如 powershell。&lt;/p&gt;
&lt;p&gt;首先点击左下角的进入设置，也可以用快捷键 &lt;code&gt;ctrl + ,&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;点击【功能】，【终端】，修改如下图两
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
