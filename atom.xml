<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Powersee的博客</title>
  
  
  <link href="https://powersee.github.io/atom.xml" rel="self"/>
  
  <link href="https://powersee.github.io/"/>
  <updated>2024-01-12T12:19:10.052Z</updated>
  <id>https://powersee.github.io/</id>
  
  <author>
    <name>powersee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>服务器高频读取，导致连 ssh 都连接不上</title>
    <link href="https://powersee.github.io/2024/01/vps-high-io/"/>
    <id>https://powersee.github.io/2024/01/vps-high-io/</id>
    <published>2024-01-12T12:18:08.000Z</published>
    <updated>2024-01-12T12:19:10.052Z</updated>
    
    <content type="html"><![CDATA[<p>之前服务器有时候 ssh 连接不上，我以为是网络问题。因为毕竟连搭建在上面的网站都访问不了，但是后来测试开梯子，还是访问不了，又感觉不像是网络问题。</p><p>而最近我终于发现问题所在了,是系统磁盘高频读取导致的。我通过腾讯云的后台实时监控，发现在「系统盘 IO」这里，读取能达到 100 多 MB 每秒，并且是一条直线的。</p><p>而平时服务器正常时的监控图表是这样的</p><p><img src="/img/2024/Tencent-cloud-monitoring-shadow.webp" alt="Tencent-cloud-monitoring-shadow"></p><p>而且读取达到 100 多 MB 时，左侧的带宽使用基本是 0。那么应该不是在往外传东西。其实就算是在往外传，也不可能读取达到这么高。因为这轻量应用服务器的带宽是（峰值带宽：30Mbps）</p><p><img src="/img/2024/Tencent-cloud-monitoring-io-shadow.webp" alt="Tencent-cloud-monitoring-io-shadow"></p><p>那导致 io 这么高的原因是什么呢？其实我也没查到，因为这时我压根没法 ssh 连接上去，查看不了。</p><p>不过我搜索一下，发现也有其他人遇到这种问题。</p><p><a href="https://developer.aliyun.com/ask/237165">阿里云 系统磁盘总读BPS 突然增长很高，导致网站502 Bad Gateway</a></p><p>我猜问题应该是内存不够用导致的，使用 htop 查看一下，平时的内存使用率就很高了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CPU[|||||||                  19.2%]   Tasks: 81, 342 thr; 1 running</span><br><span class="line">Mem[|||||||||||||||||||||786M/970M]   Load average: 0.12 0.13 0.10</span><br><span class="line">Swp[                         0K/0K]   Uptime: 2 days, 00:03:35</span><br></pre></td></tr></table></figure><p>遇到这种情况呢，其实重启一下服务器，是可以解决问题的，但是使用一段时间后又会复发。而且每次都要登录腾讯云后台去重启，也挺麻烦的。</p><p>目前我强制重启之后，连接上服务器，然后添加 1GB 的 swap 交换文件。试试看这样能否解决问题吧。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CPU[|||||                    12.6%]   Tasks: 83, 332 thr; 1 running</span><br><span class="line">Mem[|||||||||||||||||||||387M/970M]   Load average: 0.17 0.08 0.08</span><br><span class="line">Swp[||||||||||||        397M/1024M]   Uptime: 2 days, 06:59:42</span><br></pre></td></tr></table></figure><p>问题好像解决了，运行了两天多，没出现连接不上的情况。添加 swap 之后，内存有一部分分摊到 swp 里。看来内存小的服务器，开启 swap 还是挺有必要的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前服务器有时候 ssh 连接不上，我以为是网络问题。因为毕竟连搭建在上面的网站都访问不了，但是后来测试开梯子，还是访问不了，又感觉不像是网络问题。&lt;/p&gt;
&lt;p&gt;而最近我终于发现问题所在了,是系统磁盘高频读取导致的。我通过腾讯云的后台实时监控，发现在「系统盘 IO」这里，</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
    <category term="服务器" scheme="https://powersee.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>自建 RSS 订阅服务 miniflux</title>
    <link href="https://powersee.github.io/2024/01/docker-miniflux/"/>
    <id>https://powersee.github.io/2024/01/docker-miniflux/</id>
    <published>2024-01-11T02:53:44.000Z</published>
    <updated>2024-01-11T02:54:36.677Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/miniflux/v2">miniflux</a> 是一个可自建的 rss 服务。在 GitHub 上面有 5k 多颗星⭐️。</p><p><img src="/img/2024/miniflux.webp" alt="miniflux"></p><p>界面看起来挺朴素的。</p><p>miniflux 需要使用 postgresql 数据库，且只支持这一个。最简单的搭建方法是使用 docker compose。</p><p>官方文档：<a href="https://miniflux.app/docs/docker.html">Miniflux Installation with Docker</a></p><p>里面给的 compose 文件内容，新建一个 docker-compose.yaml 文件，把下面的内容粘贴进去。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">  miniflux:</span><br><span class="line">    image: miniflux/miniflux:latest</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:8080&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      db:</span><br><span class="line">        condition: service_healthy</span><br><span class="line">    environment:</span><br><span class="line">      - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable</span><br><span class="line">      - RUN_MIGRATIONS=1</span><br><span class="line">      - CREATE_ADMIN=1</span><br><span class="line">      - ADMIN_USERNAME=admin</span><br><span class="line">      - ADMIN_PASSWORD=test123</span><br><span class="line">  db:</span><br><span class="line">    image: postgres:15</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_USER=miniflux</span><br><span class="line">      - POSTGRES_PASSWORD=secret</span><br><span class="line">      - POSTGRES_DB=miniflux</span><br><span class="line">    volumes:</span><br><span class="line">      - miniflux-db:/var/lib/postgresql/data</span><br><span class="line">    healthcheck:</span><br><span class="line">      test: [&quot;CMD&quot;, &quot;pg_isready&quot;, &quot;-U&quot;, &quot;miniflux&quot;]</span><br><span class="line">      interval: 10s</span><br><span class="line">      start_period: 30s</span><br><span class="line">volumes:</span><br><span class="line">  miniflux-db:</span><br></pre></td></tr></table></figure><p>如果我们的 80 端口已经被使用了，就修改一下上面的 80 为其它数字。</p><p>之后保存退出，然后执行一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>我之前的 RSS 订阅是使用 inoreader，一直是免费使用，没充过钱。不过越来越多的网站 rss 订阅只给出一点内容，每次查看需要去再次加载，比较麻烦。</p><p>而 miniflux 有一个功能，在设置「源」的地方，有一个「抓取全文内容」的选项，把它勾选上☑️，就能抓取像少数派这类网站的全文了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/miniflux/v2&quot;&gt;miniflux&lt;/a&gt; 是一个可自建的 rss 服务。在 GitHub 上面有 5k 多颗星⭐️。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2024/miniflux.webp&quot; alt</summary>
      
    
    
    
    
    <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>达芬奇小技巧，使用鼠标滚轮左右滑动时间线</title>
    <link href="https://powersee.github.io/2024/01/davinci-timeline-mouse-wheel/"/>
    <id>https://powersee.github.io/2024/01/davinci-timeline-mouse-wheel/</id>
    <published>2024-01-10T06:57:40.000Z</published>
    <updated>2024-01-10T06:58:15.277Z</updated>
    
    <content type="html"><![CDATA[<p>默认情况下，我们在达芬奇的时间线上，拨动鼠标滚轮，是上下移动时间线。</p><p>如果想要左右移动，需要按住 command 再拨动滚轮。（Windows 上应该是按住 Ctrl 键）</p><p>只要我们进入设置，在「用户」、「UI 设置」里面，关掉「2D 时间线滚动」。</p><p><img src="/img/2024/DaVinci-ui-setting-timeline.webp" alt="DaVinci-ui-setting-timeline"></p><p>就可以在时间线直接使用滚轮来左右滚动了。</p><p>此时想要上下滚动时间线，得按住滚轮，再来上下移动鼠标。其实左右移动也可以，按住滚轮的时候，有点像之前使用触摸板。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;默认情况下，我们在达芬奇的时间线上，拨动鼠标滚轮，是上下移动时间线。&lt;/p&gt;
&lt;p&gt;如果想要左右移动，需要按住 command 再拨动滚轮。（Windows 上应该是按住 Ctrl 键）&lt;/p&gt;
&lt;p&gt;只要我们进入设置，在「用户」、「UI 设置」里面，关掉「2D 时间线滚动</summary>
      
    
    
    
    
    <category term="视频" scheme="https://powersee.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>如何查看 Mac 电脑的硬盘使用时间？</title>
    <link href="https://powersee.github.io/2024/01/mac-disk-power-on-hours/"/>
    <id>https://powersee.github.io/2024/01/mac-disk-power-on-hours/</id>
    <published>2024-01-09T05:20:07.000Z</published>
    <updated>2024-01-09T05:21:03.208Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 上面我们想要查看硬盘的使用时间，很多人会选择 CrystalDiskInfo</p><p><img src="/img/2024/disk-info.png" alt="disk-info"></p><p>那么在 Mac 上要怎么查看呢？我见过有人使用一款叫「DriveDx」的软件，可以查看很多硬盘信息。</p><p><img src="/img/2024/DriveDx-2-drives-dashboard.webp" alt="DriveDx-2-drives-dashboard"></p><p>但是这是一款付费软件，官网查了一下，个人版的费用是 19.99 美元。虽然可以下载后免费试用一段时间，不过我还是不想去尝试。</p><p>我使用免费的命令行工具 smartctl</p><p>在电脑有安装 homebrew 的情况下，用 brew 就可以安装。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install smartmontools</span><br></pre></td></tr></table></figure><p>装好之后，使用这条命令就可以查看硬盘信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smartctl -a disk0</span><br></pre></td></tr></table></figure><p>这个我很久之前就有用，当时是为了查看硬盘的写入量。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=== START OF SMART DATA SECTION ===</span><br><span class="line">SMART overall-health self-assessment test result: PASSED</span><br><span class="line"></span><br><span class="line">SMART/Health Information (NVMe Log 0x02)</span><br><span class="line">Critical Warning:                   0x00</span><br><span class="line">Temperature:                        37 Celsius</span><br><span class="line">Available Spare:                    100%</span><br><span class="line">Available Spare Threshold:          99%</span><br><span class="line">Percentage Used:                    3%</span><br><span class="line">Data Units Read:                    164,352,048 [84.1 TB]</span><br><span class="line">Data Units Written:                 84,019,304 [43.0 TB]</span><br><span class="line">Host Read Commands:                 3,608,721,339</span><br><span class="line">Host Write Commands:                1,345,245,922</span><br><span class="line">Controller Busy Time:               0</span><br><span class="line">Power Cycles:                       202</span><br><span class="line">Power On Hours:                     1,962</span><br><span class="line">Unsafe Shutdowns:                   75</span><br><span class="line">Media and Data Integrity Errors:    0</span><br><span class="line">Error Information Log Entries:      0</span><br></pre></td></tr></table></figure><p>下方的 Power On Hours 就是硬盘使用时长，我这硬盘居然使用了快 2000 小时。</p><p>这么看好像很多，但是我用计算器算一下，24 × 365 &#x3D; 8760</p><p>我这电脑都用两年多了，基本不关机。所以它这个时间估计是算电脑有亮屏的时间吧。电脑熄屏（不休眠）应该是不算进去的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Windows 上面我们想要查看硬盘的使用时间，很多人会选择 CrystalDiskInfo&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2024/disk-info.png&quot; alt=&quot;disk-info&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么在 Mac 上要怎么查看呢？我见过有人使用一</summary>
      
    
    
    
    
    <category term="Mac" scheme="https://powersee.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>如何下载 YouTube、bilibili 的视频字幕</title>
    <link href="https://powersee.github.io/2024/01/youtube-bilibili-downsub/"/>
    <id>https://powersee.github.io/2024/01/youtube-bilibili-downsub/</id>
    <published>2024-01-07T17:01:05.000Z</published>
    <updated>2024-01-07T17:02:11.358Z</updated>
    
    <content type="html"><![CDATA[<p>下载 YouTube、bilibili 的视频，有很多的方案。但是要下载它们的字幕呢？</p><p>我目前找到的比较简单的方法，是通过一个网站。</p><p><a href="https://downsub.com/">https://downsub.com/</a></p><p>把视频链接粘贴到网站中的输入框就行。</p><p>我测试过 bilibili 的，手动上传的字幕可以，系统自动生成的字幕就没法下载。</p><p>而 YouTube 这边的支持就比较好，自动生成的字幕也可以下载。</p><p><img src="/img/2024/downsub.webp" alt="downsub"></p><p>下载的时候可以选择 srt 还是 txt。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下载 YouTube、bilibili 的视频，有很多的方案。但是要下载它们的字幕呢？&lt;/p&gt;
&lt;p&gt;我目前找到的比较简单的方法，是通过一个网站。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://downsub.com/&quot;&gt;https://downsub.com/&lt;/a&gt;&lt;</summary>
      
    
    
    
    
    <category term="视频" scheme="https://powersee.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>检查更新 Mac 上的第三方应用 Latest</title>
    <link href="https://powersee.github.io/2024/01/mac-latest/"/>
    <id>https://powersee.github.io/2024/01/mac-latest/</id>
    <published>2024-01-07T12:00:36.000Z</published>
    <updated>2024-01-07T12:02:12.830Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现一款不错的应用，可以用来更新 Mac 上面的 APP。</p><p>因为 Mac 自带的 APP Store 只能更新从里面下载的 APP。我们自己下载的第三方应用，或者用 homebrew 安装的应用，是没法在 APP Store 里面更新的。</p><p>而现在这个在 GitHub 上面开源的应用 <a href="https://github.com/mangerlahn/Latest">mangerlahn&#x2F;Latest: A small utility app for macOS that makes sure you know about all the latest updates to the apps you use.</a> 就可以很好地形成互补。</p><p>目前它在 GitHub 上面的 star 数量是两千多。<a href="https://github.com/mangerlahn/Latest/releases">Releases</a> 里面有提供 dmg 包下载，不过我电脑有装 homebrew，所以我直接使用命令行安装。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install --cask latest</span><br></pre></td></tr></table></figure><p>APP 打开后的界面是这样的，左边显示有那些应用可以更新，点击之后会在右边显示更新日志。</p><p><img src="/img/2024/Latest.webp" alt="Latest"></p><p>而且它连 Mac 官方的应用都可以更新，例如我上图中的 keynote。</p><p>我感觉挺好的，其实我电脑里装了挺多开源软件，有些用 homebrew 安装的，有些是在 GitHub 下载的。如果软件自身没有检测更新的功能，可能我一直都不会去更新它。</p><p>现在有 latest 这个 APP 来帮忙检测和更新，确实方便多了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近发现一款不错的应用，可以用来更新 Mac 上面的 APP。&lt;/p&gt;
&lt;p&gt;因为 Mac 自带的 APP Store 只能更新从里面下载的 APP。我们自己下载的第三方应用，或者用 homebrew 安装的应用，是没法在 APP Store 里面更新的。&lt;/p&gt;
&lt;p&gt;而</summary>
      
    
    
    
    
    <category term="Mac" scheme="https://powersee.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>达芬奇更改默认项目设置</title>
    <link href="https://powersee.github.io/2024/01/davinci-change-project-default-setting/"/>
    <id>https://powersee.github.io/2024/01/davinci-change-project-default-setting/</id>
    <published>2024-01-05T11:49:46.000Z</published>
    <updated>2024-01-05T11:51:07.570Z</updated>
    
    <content type="html"><![CDATA[<p>达芬奇 DaVinci 是我的主力剪辑软件。有一个困扰我已久的问题，最近终于找到了解决方案。</p><p>平常我新建一个项目时，如果我直接把视频素材拖进来，软件会提示我更改项目帧率。</p><blockquote><p>所选片段的帧率与项目帧率不同。您想要更改时间线帧率以和片段帧率匹配吗？</p></blockquote><p>这是因为默认的项目设置是 1080P 24 帧，我们点击右下角的齿轮⚙就可以看到。</p><p><img src="/img/2024/DaVinci-default-project.webp" alt="DaVinci-default-project"></p><p>我的视频基本没有 24 帧的，所以基本我每个项目都会弹出提示。</p><p>想要修改这里的默认设置也很简单，直接在这里改，例如我改为 59.94 帧，然后点击右上方的三个点 …</p><p><img src="/img/2024/DaVinci2.webp" alt="DaVinci2"></p><p>选择「将当前设置设定为默认预设…」就可以了。</p><p>其实我这么改，也不只是为了少点一下那个弹窗。更主要是为了避免，剪辑大半天才发现时间线帧数错了。</p><p>因为达芬奇时间线创建好之后，是没法再修改它的分辨率和帧数的。所以它默认 24 帧，如果我们拖进来视频，会提示我们帧数不同，但是如果拖进来的是图片、音频，就不会有提示。</p><p>我之前拍的视频基本是 50 帧的，有时候剪辑了大半段，才发现时间线是 24 帧。补救的方法是新建一条 50 帧的时间线，然后再把旧时间线上的内容，全选，然后复制粘贴到新的时间线上。</p><p>而现在我修改了默认项目设置，就可以避免这种情况了。</p><p>对了，以前我是拍 50 帧，但是现在我已经变了，改为 59.94 帧。因为前段时间<a href="https://www.bilibili.com/video/BV1hp4y1f7B5/">影视飓风的视频</a>说，用 29.97 和 59.94 会比用 25 和 50 帧好。</p><p>他们已经从 P 制改为用 N 制了，所以我也跟随潮流，才将达芬奇的项目设置改为 59.94。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;达芬奇 DaVinci 是我的主力剪辑软件。有一个困扰我已久的问题，最近终于找到了解决方案。&lt;/p&gt;
&lt;p&gt;平常我新建一个项目时，如果我直接把视频素材拖进来，软件会提示我更改项目帧率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所选片段的帧率与项目帧率不同。您想要更改时间线帧</summary>
      
    
    
    
    
    <category term="视频" scheme="https://powersee.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>网心云从端口限制型变回全锥型</title>
    <link href="https://powersee.github.io/2024/01/onething-nat-type/"/>
    <id>https://powersee.github.io/2024/01/onething-nat-type/</id>
    <published>2024-01-04T08:27:18.000Z</published>
    <updated>2024-01-04T08:28:29.513Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间，家里一直运行网心云的 OEC 无端端变成「端口限制型」。这导致我每天的收益变少了。</p><p>但我也没去改家里的网络设置，怎么无缘无故就变了呢？不清楚，也找不到解决方案，就这样放着。</p><p>我个人名下是办理了两条宽带的，都是移动的。一条在我现在的住处，一条在我父母的住处。</p><p>两边的网络情况基本一样，都是自己修改光猫设置，改为桥接模式，然后使用京东路由器拨号上网。跑网心云的设备通过网线连接在路由器上。</p><p>之前两边的状态都是全锥型，而且 UPNP 都是可用。</p><p><img src="/img/2024/quanzhui-upnp-ok.jpg" alt="quanzhui-upnp-ok"></p><p>而现在我这边的设备变成了「端口限制型」且 UPNP 不可用。</p><p><img src="/img/2024/port-limit.jpg" alt="port-limit"></p><p>于是我进入路由器后台，看看是否我这边的路由器 UPNP 没开？结果发现一直开着的。</p><p>而且里面还有网心云设备的记录。</p><p>这时我看到 UPNP 旁边就是 DMZ，那我试试把网心云设备的 IP 填入到 DMZ 里面，然后点击保存。</p><p><img src="/img/2024/route-dmz.webp" alt="route-dmz"></p><p>过一会再去 APP 里面看网心云设备的状态。现在变回全锥型了，不过 UPNP 还是不可用。</p><p><img src="/img/2024/quanzhui-upnp-no.jpg" alt="quanzhui-upnp-no"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前段时间，家里一直运行网心云的 OEC 无端端变成「端口限制型」。这导致我每天的收益变少了。&lt;/p&gt;
&lt;p&gt;但我也没去改家里的网络设置，怎么无缘无故就变了呢？不清楚，也找不到解决方案，就这样放着。&lt;/p&gt;
&lt;p&gt;我个人名下是办理了两条宽带的，都是移动的。一条在我现在的住处，</summary>
      
    
    
    
    
    <category term="网络" scheme="https://powersee.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>威联通的 qbittorrent 不支持 ipv6</title>
    <link href="https://powersee.github.io/2024/01/qnap-qbittorrent-ipv6/"/>
    <id>https://powersee.github.io/2024/01/qnap-qbittorrent-ipv6/</id>
    <published>2024-01-02T09:12:26.000Z</published>
    <updated>2024-01-02T09:16:08.813Z</updated>
    
    <content type="html"><![CDATA[<p>之前我使用威联通 nas 里的 qb 来下载资源，发现无法连接上种子的 tracker。我以为是 tracker 的问题，毕竟它是套了 cloudflare 的，在国内的访问确实有些问题。</p><p>但是后来我发现，怎么家里的黑群晖 nas 却可以正常下载。明明都是同一个局域网下，使用着同样的宽带，不应该呀。</p><p>经过一番排查，发现问题在于 ipv6。威联通和群晖上面的 qb，我都是使用套件安装的，但是群晖的支持 ipv6，而威联通的不支持。</p><p>所以同样的种子，在群晖上面的 qb 可以连接上 tracker，但是在威联通的 qb 就连接不上，无法下载。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>既然知道问题所在，那现在就让 qb 支持 ipv6 就行呗。但是我找不到让威联通 qnap 里的 qbittorrent 套件，支持 ipv6 的方法。</p><p>所以我的做法是不使用这个 qb，而是使用 docker 来运行 qb。而想要让 docker 容器支持 ipv6，最简单的方法就是使用 host 网络。</p><p>所以我使用这条命令来创建并运行 qb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=qbittorrent \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Aisa/Shanghai \</span><br><span class="line">  -e WEBUI_PORT=8082 \</span><br><span class="line">  --network host \</span><br><span class="line">  -v /share/CACHEDEV1_DATA/Container/qbit:/config \</span><br><span class="line">  -v /share/CACHEDEV1_DATA/Download:/downloads \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  ghcr.io/linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><p>完成之后 qb 应该就在运行中了。现在新版的 qb，已经不使用 adminadmin 来作为默认的密码了。我们需要通过容器的日志来查看默认密码。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#docker logs qbittorrent</span><br><span class="line"></span><br><span class="line">******** Information ********</span><br><span class="line">To control qBittorrent, access the WebUI at: http://localhost:8082</span><br><span class="line"></span><br><span class="line">The WebUI administrator username is: admin</span><br><span class="line">The WebUI administrator password was not set. </span><br><span class="line">A temporary password is provided for this session: S3powersee</span><br></pre></td></tr></table></figure><p>可以看到默认的用户名还是 admin，密码是随机生成的。使用它们进入 qb 的网页管理界面，然后到【设置】的 Web UI 里面，就可以修改密码。</p><p>之后我使用这个 docker 运行的 qb 来下载之前的种子，就可以正常下载了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前我使用威联通 nas 里的 qb 来下载资源，发现无法连接上种子的 tracker。我以为是 tracker 的问题，毕竟它是套了 cloudflare 的，在国内的访问确实有些问题。&lt;/p&gt;
&lt;p&gt;但是后来我发现，怎么家里的黑群晖 nas 却可以正常下载。明明都是同一</summary>
      
    
    
    
    
    <category term="NAS" scheme="https://powersee.github.io/tags/NAS/"/>
    
    <category term="qnap" scheme="https://powersee.github.io/tags/qnap/"/>
    
  </entry>
  
  <entry>
    <title>如何把文件移动到服务器里？</title>
    <link href="https://powersee.github.io/2023/12/moving-file-to-server/"/>
    <id>https://powersee.github.io/2023/12/moving-file-to-server/</id>
    <published>2023-12-31T08:23:30.000Z</published>
    <updated>2023-12-31T08:24:01.607Z</updated>
    
    <content type="html"><![CDATA[<p>平时把文件复制到服务器，我们可以使用 scp。但如何直接移动过去呢？</p><p>比较简单的方法，是先 scp 复制过去。完成之后，再使用 rm 来删除本地的文件。</p><p>另外一种比较优雅的方式 <strong>rsync</strong></p><p>它有一个参数 <code>--remove-source-files</code> 表示在成功同步后删除源文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用 rsync 同步文件并删除本地文件</span><br><span class="line">rsync -av --remove-source-files /path/to/local/file.txt username@remote_server:/path/to/remote/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;平时把文件复制到服务器，我们可以使用 scp。但如何直接移动过去呢？&lt;/p&gt;
&lt;p&gt;比较简单的方法，是先 scp 复制过去。完成之后，再使用 rm 来删除本地的文件。&lt;/p&gt;
&lt;p&gt;另外一种比较优雅的方式 &lt;strong&gt;rsync&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它有一个</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>WPS 只粘贴文本</title>
    <link href="https://powersee.github.io/2023/12/wps-paste/"/>
    <id>https://powersee.github.io/2023/12/wps-paste/</id>
    <published>2023-12-14T03:08:07.000Z</published>
    <updated>2023-12-14T03:10:18.519Z</updated>
    
    <content type="html"><![CDATA[<p>平时使用 WPS 写东西时，如果我从网页复制内容，到 WPS 里面粘贴，会发现粘贴进来的样式，和 WPS 中原本的内容样式不同。</p><p>所以我得右键，然后选择「只粘贴文本」</p><p><img src="/img/2023/wps-paste.jpg" alt="wps-paste"></p><p>由于我复制粘贴还经常使用，所以我想着能否提高一下效率，否则每次粘贴都得先右键，再选择，比较麻烦。</p><h4 id="解决方案：更改默认粘贴方式"><a href="#解决方案：更改默认粘贴方式" class="headerlink" title="解决方案：更改默认粘贴方式"></a>解决方案：更改默认粘贴方式</h4><p>点击左上角的「文件」，然后选择「文字偏好设置」。</p><p><img src="/img/2023/wps-file-select.jpg" alt="wps-file-select"></p><p>之后进入编辑，拉到最下方。改为「无格式文本」即可。</p><p><img src="/img/2023/wps-edit-setting.webp" alt="wps-edit-setting"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;平时使用 WPS 写东西时，如果我从网页复制内容，到 WPS 里面粘贴，会发现粘贴进来的样式，和 WPS 中原本的内容样式不同。&lt;/p&gt;
&lt;p&gt;所以我得右键，然后选择「只粘贴文本」&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2023/wps-paste.jpg&quot; alt=</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>如何查看电脑蓝牙版本</title>
    <link href="https://powersee.github.io/2023/11/windows-bluetooth-version/"/>
    <id>https://powersee.github.io/2023/11/windows-bluetooth-version/</id>
    <published>2023-11-29T02:58:44.000Z</published>
    <updated>2023-11-29T03:03:12.936Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows 电脑上，我们可以同时按住 win + X 这两个按键。然后左下角会弹出菜单，选择「设备管理器」。</p><p>然后展开「蓝牙」选项，一般里面会有很多项，例如我的里面有手柄、耳机，应该是以前匹配过的就会显示在这里。我们需要选择「蓝牙无线收发器」，右键，选择「属性」，再进入「高级」选项。</p><p><img src="/img/2023/nucx-BT.png" alt="nucx蓝牙版本"></p><p>在这里我们可以看到它的 LMP 版本，LMP 12 就是蓝牙 5.3。上面是笔记本使用的无线网卡中蓝牙的版本。</p><p>下面是我台式电脑使用的蓝牙接收器，几块钱买的，也是 5.3。</p><p><img src="/img/2023/BT5.3.png" alt="BT5.3">我几年也有买一个 USB 蓝牙接收器，同样是给台式电脑用的，查了一下是 LMP 6 的，也就是蓝牙 4.0。同时连接手柄和蓝牙耳机的话，耳机的音频会断断续续，搜索了解一番，好像是蓝牙版本低，它的带宽不够，连接多个设备就会这样。</p><p>于是到拼多多搜一下，没想到现在最新的蓝牙 5.3 也就几块钱包邮，于是就买了一个。</p><p>到手后插到机箱后的 USB 2.0 接口就行，此时手柄和耳机就能同时用了。</p><table><thead><tr><th>链路管理器协议 (LMP) 版本</th><th>蓝牙核心规格</th></tr></thead><tbody><tr><td>LMP 0</td><td>蓝牙核心规格 1.0b（已撤销）</td></tr><tr><td>LMP 1</td><td>蓝牙核心规格 1.1（已撤销）</td></tr><tr><td>LMP 2</td><td>蓝牙核心规格 1.2（已撤销）</td></tr><tr><td>LMP 3</td><td>蓝牙核心规格 2.0 + EDR（已撤销）</td></tr><tr><td>LMP 4</td><td>蓝牙核心规范 2.1 + EDR （已弃用、待撤销）</td></tr><tr><td>LMP 5</td><td>蓝牙核心规范 3.0 + HS （已弃用、待撤销）</td></tr><tr><td>LMP 6</td><td>蓝牙核心规格 4.0</td></tr><tr><td>LMP 7</td><td>蓝牙核心规格 4.1</td></tr><tr><td>LMP 8</td><td>蓝牙核心规格 4.2</td></tr><tr><td>LMP 9</td><td>蓝牙核心规格 5.0</td></tr><tr><td>LMP 10</td><td>蓝牙核心规格 5.1</td></tr><tr><td>LMP 11</td><td>蓝牙核心规格 5.2</td></tr><tr><td>LMP 12</td><td>蓝牙核心规格 5.3</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Windows 电脑上，我们可以同时按住 win + X 这两个按键。然后左下角会弹出菜单，选择「设备管理器」。&lt;/p&gt;
&lt;p&gt;然后展开「蓝牙」选项，一般里面会有很多项，例如我的里面有手柄、耳机，应该是以前匹配过的就会显示在这里。我们需要选择「蓝牙无线收发器」，右键，选</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://powersee.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows 按键重映射简单方案</title>
    <link href="https://powersee.github.io/2023/11/windows-keyboard-remap/"/>
    <id>https://powersee.github.io/2023/11/windows-keyboard-remap/</id>
    <published>2023-11-15T09:05:48.000Z</published>
    <updated>2023-11-15T09:14:23.201Z</updated>
    
    <content type="html"><![CDATA[<p>最近在玩一款游戏，星之海，这个游戏人物对话时，想要继续，得使用空格键，不能用鼠标和回车键。</p><p>所以我的问题出现了，空格键离我的右手比较远，由于我的键盘右侧是有数字区域的。</p><p>所以我想通过按键映射的方法，把小键盘上的数字 0 映射到空格键上。也就是按 0 时相当于按空格键。</p><p>我使用的软件是 powertoys</p><p><img src="/img/2023/image-20231113200125-suokhij.webp" alt="image">​</p><p>微软官方出的，而且是<a href="https://github.com/microsoft/PowerToys/wiki/Keyboard-Manager">开源</a>的。可以直接在 win 商店下载，也可以到 GitHub 下载。</p><p><img src="/img/2023/image-20231113200412-0ozj5f2.webp" alt="image">​</p><p>软件打开之后，在左边找到（键盘管理器），把 Numpad 0 映射到 Space 就行。</p><p>也就是说，现在小键盘上的数字 0 等于空格键，我们可以选择找一个可以输入文字地方测试。</p><p>然后我发现映射的前面只能是一个按键，而后面则可以多个按键组合。例如我这里把小键盘上的 + 映射为 alt + tab，用来切换程序。</p><p><img src="/img/2023/sshot-24-20231114152712-ncyzsv0.png" alt="sshot-24">​</p><p>目前体验挺不错，软件会开机自启，设置也简单。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在玩一款游戏，星之海，这个游戏人物对话时，想要继续，得使用空格键，不能用鼠标和回车键。&lt;/p&gt;
&lt;p&gt;所以我的问题出现了，空格键离我的右手比较远，由于我的键盘右侧是有数字区域的。&lt;/p&gt;
&lt;p&gt;所以我想通过按键映射的方法，把小键盘上的数字 0 映射到空格键上。也就是按 </summary>
      
    
    
    
    
    <category term="Windows" scheme="https://powersee.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>使用 docker 自建在线文档「思源笔记」</title>
    <link href="https://powersee.github.io/2023/11/docker-siyuan/"/>
    <id>https://powersee.github.io/2023/11/docker-siyuan/</id>
    <published>2023-11-06T06:16:25.000Z</published>
    <updated>2023-11-06T06:18:48.492Z</updated>
    
    <content type="html"><![CDATA[<p>思源笔记是一款开源的笔记应用，目前（2023年11月06日）在 <a href="https://github.com/siyuan-note/siyuan">GitHub</a> 上的 star 数量接近一万三。</p><p>我自己也使用它有一两个月了，感觉还不错。我只使用 docker 自建的，没有使用电脑和手机的客户端。因为我感觉在浏览器里使用它就够了，能满足我的日常使用需求。</p><p>虽然这是一个开源应用，不过里面有些功能是需要付费才能使用的。例如通过 webdav 备份，这个功能需要花 128 元才能启用。</p><p>不想花钱的话，可以使用旧版本的，v2.9.6 就是最后一个可以免费使用 webdav 备份的版本。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull b3log/siyuan:v2.9.6</span><br></pre></td></tr></table></figure><p>旧版本的容器运行起来也比较简单，映射一个端口和一个容器内的路径就行。</p><p>例如这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -v /volume1/docker/siyuan-test:/siyuan/workspace -p 6806:6806 -u 1000:1000 b3log/siyuan:v2.9.6 -lang=zh_CN</span><br></pre></td></tr></table></figure><p>之后在浏览器访问机器的 ip:6806 就可以。最后面的 lang 是指定语言，不加的话默认打开是英文的，虽然我们可以到 Settings - Appearance - Language 更改语言，不过生成的「用户指南」并不会一起更改语言。</p><p>也就是说第一次打开时是英文，文档就一直是英文。所以我是建议加上 lang 参数的。</p><blockquote><p>端口 6806</p><p>容器内路径 &#x2F;siyuan&#x2F;workspace</p></blockquote><p>目前最新的版本是 v2.10.13，这个项目的更新是非常频繁的，基本一周一更。如果使用新版本，就不能用上面的命令了。否则会出现报错，容器会自动停止。</p><p><a href="https://github.com/siyuan-note/siyuan/issues/9447">The access authorization code command line parameter (–accessAuthCode) must be set when deploying via DockerPlease enter the title of the bug report · Issue #9447 · siyuan-note&#x2F;siyuan (github.com)</a></p><p>新版本需要使用 <code>-accessAuthCode</code> 参数，注意加在容器名后面的。</p><p>例如我在威联通 NAS 上执行的命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -v /share/CACHEDEV1_DATA/Container/siyuan-test:/siyuan/workspace -p 6809:6806 b3log/siyuan:v2.10.13 --workspace=/siyuan/workspace/ -accessAuthCode=123456  -lang=zh_CN</span><br></pre></td></tr></table></figure><p>这里我的授权码设置为 123456</p><p>容器运行后，通过 6809 端口访问，会出现这样的网页，必须填上正确的授权码，才可以进入笔记页面。</p><p><img src="/img/2023/siyuan-accessAuthCode.webp" alt="siyuan-accessAuthCode"></p><p>我也在群晖 6.1.7 上面使用，会报错。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># docker run -v /volume1/docker/siyu96:6806 -u 1000:1000 powersee/siyuan:v2.10.13 --workspace=/siyuan/workspace/ -—accessAuthCode=123456  -lang=zh_CN</span><br><span class="line"></span><br><span class="line">flag provided but not defined: -—accessAuthCode</span><br><span class="line">Usage of /opt/siyuan/kernel:</span><br><span class="line">  -accessAuthCode string</span><br><span class="line">    access auth code</span><br><span class="line">  -alsologtostderr</span><br><span class="line">    log to standard error as well as files</span><br><span class="line">  -lang string</span><br><span class="line">    zh_CN/zh_CHT/en_US/fr_FR/es_ES</span><br><span class="line">  -log_backtrace_at value</span><br><span class="line">    when logging hits line file:N, emit a stack trace</span><br><span class="line">  -log_dir string</span><br><span class="line">    If non-empty, write log files in this directory</span><br><span class="line">  -log_link string</span><br><span class="line">    If non-empty, add symbolic links in this directory to the log files</span><br><span class="line">  -logbuflevel int</span><br><span class="line">    Buffer log messages logged at this level or lower (-1 means don&#x27;t buffer; 0 means buffer INFO only; ...). Has limited applicability on non-prod platforms.</span><br><span class="line">  -logtostderr</span><br><span class="line">    log to standard error instead of files</span><br><span class="line">  -mode string</span><br><span class="line">    dev/prod (default &quot;prod&quot;)</span><br><span class="line">  -port string</span><br><span class="line">    port of the HTTP server (default &quot;0&quot;)</span><br><span class="line">  -readonly string</span><br><span class="line">    read-only mode (default &quot;false&quot;)</span><br><span class="line">  -ssl</span><br><span class="line">    for https and wss</span><br><span class="line">  -stderrthreshold value</span><br><span class="line">    logs at or above this threshold go to stderr (default 2)</span><br><span class="line">  -v value</span><br><span class="line">    log level for V logs</span><br><span class="line">  -vmodule value</span><br><span class="line">    comma-separated list of pattern=N settings for file-filtered logging</span><br><span class="line">  -wd string</span><br><span class="line">    working directory of SiYuan (default &quot;/opt/siyuan&quot;)</span><br><span class="line">  -workspace string</span><br><span class="line">    dir path of the workspace, default to ~/SiYuan/</span><br></pre></td></tr></table></figure><p>关键信息是这句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag provided but not defined: -—accessAuthCode</span><br></pre></td></tr></table></figure><p>然后下面给的帮助文档，使用的都是一个减号 - 的，那么我就试试用一个 - 看看咯。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># docker run -v /volume1/docker/siyuan-test:/siyuan/workspace -p 6896:6806 -u 1000:1000 powersee/siyuan:v2.10.13 --workspace=/siyuan/workspace/ —accessAuthCode=123456  -lang=zh_CN</span><br><span class="line"></span><br><span class="line">The access authorization code command line parameter (--accessAuthCode) must be set when deploying via Docker.</span><br></pre></td></tr></table></figure><p>不知道是不是 docker 版本太老了，不支持新的命令参数。</p><p>如果有读者也是使用旧版本群晖的话，没法使用新版思源笔记，就使用旧版本的吧。</p><p>对了，在威联通上，倒是不管减号 - 一个还是两个，都是可以成功运行的。</p><p>上面我的容器名称变成了 powersee&#x2F;siyuan:v2.10.13，这个是我使用社区版的思源笔记编译的，去掉了一些付费限制。</p><p>项目：<a href="https://github.com/siyuan-community/siyuan">https://github.com/siyuan-community/siyuan</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;思源笔记是一款开源的笔记应用，目前（2023年11月06日）在 &lt;a href=&quot;https://github.com/siyuan-note/siyuan&quot;&gt;GitHub&lt;/a&gt; 上的 star 数量接近一万三。&lt;/p&gt;
&lt;p&gt;我自己也使用它有一两个月了，感觉还不错。我只</summary>
      
    
    
    
    
    <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
    <category term="qnap" scheme="https://powersee.github.io/tags/qnap/"/>
    
  </entry>
  
  <entry>
    <title>Outlook 邮箱添加白名单 垃圾邮件处理</title>
    <link href="https://powersee.github.io/2023/10/outlook-email-whitelist/"/>
    <id>https://powersee.github.io/2023/10/outlook-email-whitelist/</id>
    <published>2023-10-21T02:45:09.000Z</published>
    <updated>2023-10-21T02:46:30.306Z</updated>
    
    <content type="html"><![CDATA[<p>微软的邮箱，处理垃圾邮件的力度太猛了，大多数通知邮件都被归类到垃圾邮件里面。而且 10 天就会删除。</p><p>它好像没有关闭邮件拦截的开关，所以目前我的做法是，自己手动添加白名单。</p><p>可以到网页端进行操作：<a href="https://outlook.live.com/">https://outlook.live.com/</a></p><p>点击右上角的齿轮图标⚙，打开设置。</p><p><img src="/img/2023/Outlook-setting-shadow.webp" alt="Outlook-setting-shadow"></p><p>在「邮件」「垃圾电子邮件」里面，就可以设置黑名单和白名单。</p><p>不过这样手动添加也比较麻烦，我们可以先点开垃圾邮件，然后点击上方的「这不是垃圾邮件」，这是网页会弹出一个提示，问是否要将这个邮箱地址，添加到「安全发件人」，点击「是」即可。</p><p>不过这种得你已经收到邮件，并且邮件在「垃圾邮件」文件夹里能看到才行，毕竟这里面的邮件，存放 10 天就回被删除，所以要是长时间没去注意的话，很可能有些邮件被拦截，然后被自动删除，自己完全不知道。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;微软的邮箱，处理垃圾邮件的力度太猛了，大多数通知邮件都被归类到垃圾邮件里面。而且 10 天就会删除。&lt;/p&gt;
&lt;p&gt;它好像没有关闭邮件拦截的开关，所以目前我的做法是，自己手动添加白名单。&lt;/p&gt;
&lt;p&gt;可以到网页端进行操作：&lt;a href=&quot;https://outlook.</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Mac 使用 nano 编辑器如何复制 M-6</title>
    <link href="https://powersee.github.io/2023/10/mac-nano-copy/"/>
    <id>https://powersee.github.io/2023/10/mac-nano-copy/</id>
    <published>2023-10-18T18:10:20.000Z</published>
    <updated>2023-10-18T18:11:33.540Z</updated>
    
    <content type="html"><![CDATA[<p>nano 编辑器中复制使用的快捷键是 M-6，在 Windows 和 Linux 就是 Alt + 6 这两个按键一起按。作用和 vim 的 yy 一样。</p><p>当我们没有选中任何内容时，就会复制当前光标所在的行。使用 Ctrl + U 就可以粘贴。</p><p>但是在 Mac 上就有问题了，我发现当我按下 Alt + 6 时，屏幕上是多出来一个特殊的符号 <code>§</code></p><p>Mac 的 Alt 或者说 Option 键，是有特殊的用处的，在输入状态下，是打出特殊字符。</p><p>例如我们按 shift + 2，打出的是 @，而按 Alt + 2，则是 ™。</p><p>下面是一些常见的特殊字符和符号，以及在按住 Option 键时输入对应字符的方式：</p><ol><li><strong>常见特殊字符</strong>：<ul><li><code>Option + a</code> 产生 å</li><li><code>Option + e</code> 产生 é</li><li><code>Option + u</code> 产生 ü</li><li><code>Option + i</code> 产生 î</li><li><code>Option + o</code> 产生 ô</li></ul></li><li><strong>符号和标点</strong>：<ul><li><code>Option + 1</code> 产生 ¡</li><li><code>Option + 2</code> 产生 ™</li><li><code>Option + 3</code> 产生 £</li><li><code>Option + 4</code> 产生 ¢</li><li><code>Option + 5</code> 产生 ∞</li><li><code>Option + 6</code> 产生 §</li><li><code>Option + 7</code> 产生 ¶</li><li><code>Option + 8</code> 产生 •</li><li><code>Option + 9</code> 产生 ª</li><li><code>Option + 0</code> 产生 º</li><li><code>Option + -</code> 产生 –</li><li><code>Option + =</code> 产生 ±</li></ul></li></ol><p>也就是说，Alt + 6 的快捷键组合，已经被 Mac 自身使用了，所以在 nano 里不生效。</p><p>解决方法，按 escape + 6，也就是键盘左上角的 ESC 键。</p><p>参考：<a href="https://stackoverflow.com/questions/26285791/unix-what-modifier-key-does-m-refer-to-e-g-m-c">nano - Unix: what modifier key does “M-“ refer to (e.g. M-C) - Stack Overflow</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;nano 编辑器中复制使用的快捷键是 M-6，在 Windows 和 Linux 就是 Alt + 6 这两个按键一起按。作用和 vim 的 yy 一样。&lt;/p&gt;
&lt;p&gt;当我们没有选中任何内容时，就会复制当前光标所在的行。使用 Ctrl + U 就可以粘贴。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Mac" scheme="https://powersee.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Alpine 里安装 docker</title>
    <link href="https://powersee.github.io/2023/10/alpine-install-docker/"/>
    <id>https://powersee.github.io/2023/10/alpine-install-docker/</id>
    <published>2023-10-17T16:32:41.000Z</published>
    <updated>2023-10-17T16:34:15.426Z</updated>
    
    <content type="html"><![CDATA[<p>注，是实机安装 Alpine 作为主系统使用。</p><p>安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apk add docker</span><br></pre></td></tr></table></figure><p>添加开机自启</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rc-update add docker boot</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>此时应该就可以正常使用 docker 了，可以执行 <code>docker info</code> 来检查看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># docker info</span><br><span class="line">Client:</span><br><span class="line"> Context:    default</span><br><span class="line"> Debug Mode: false</span><br><span class="line"> Plugins:</span><br><span class="line">  buildx: Docker Buildx (Docker Inc.)</span><br><span class="line">    Version:  v0.10.4</span><br><span class="line">    Path:     /usr/libexec/docker/cli-plugins/docker-buildx</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Containers: 0</span><br><span class="line">  Running: 0</span><br><span class="line">  Paused: 0</span><br><span class="line">  Stopped: 0</span><br><span class="line"> Images: 0</span><br><span class="line"> Server Version: 23.0.6</span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">  Backing Filesystem: extfs</span><br><span class="line">  Supports d_type: true</span><br><span class="line">  Using metacopy: false</span><br><span class="line">  Native Overlay Diff: true</span><br><span class="line">  userxattr: false</span><br><span class="line"> Logging Driver: json-file</span><br><span class="line"> Cgroup Driver: cgroupfs</span><br><span class="line"> Cgroup Version: 1</span><br><span class="line"> Plugins:</span><br><span class="line">  Volume: local</span><br><span class="line">  Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog</span><br><span class="line"> Swarm: inactive</span><br><span class="line"> Runtimes: io.containerd.runc.v2 runc</span><br><span class="line"> Default Runtime: runc</span><br><span class="line"> Init Binary: docker-init</span><br><span class="line"> containerd version: 0cae528dd6cb557f7201036e9f43420650207b58</span><br><span class="line"> runc version: 860f061b76bb4fc671f0f9e900f7d80ff93d4eb7</span><br><span class="line"> init version: </span><br><span class="line"> Security Options:</span><br><span class="line">  seccomp</span><br><span class="line">   Profile: builtin</span><br><span class="line"> Kernel Version: 6.1.51-0-lts</span><br><span class="line"> Operating System: Alpine Linux v3.18</span><br><span class="line"> OSType: linux</span><br><span class="line"> Architecture: x86_64</span><br><span class="line"> CPUs: 1</span><br><span class="line"> Total Memory: 460.3MiB</span><br><span class="line"> Name: vultr</span><br><span class="line"> ID: 60556f53-c374-4131-8e9f-45c112f766b2</span><br><span class="line"> Docker Root Dir: /var/lib/docker</span><br><span class="line"> Debug Mode: false</span><br><span class="line"> Registry: https://index.docker.io/v1/</span><br><span class="line"> Experimental: false</span><br><span class="line"> Insecure Registries:</span><br><span class="line">  127.0.0.0/8</span><br><span class="line"> Live Restore Enabled: false</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:           23.0.6</span><br><span class="line"> API version:       1.42</span><br><span class="line"> Go version:        go1.20.10</span><br><span class="line"> Git commit:        ef23cbc4315ae76c744e02d687c09548ede461bd</span><br><span class="line"> Built:             Thu Oct 12 14:14:03 2023</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          23.0.6</span><br><span class="line">  API version:      1.42 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.20.10</span><br><span class="line">  Git commit:       9dbdbd4b6d7681bd18c897a6ba0376073c2a72ff</span><br><span class="line">  Built:            Thu Oct 12 14:14:03 2023</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          v1.7.2</span><br><span class="line">  GitCommit:        0cae528dd6cb557f7201036e9f43420650207b58</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.7</span><br><span class="line">  GitCommit:        860f061b76bb4fc671f0f9e900f7d80ff93d4eb7</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;注，是实机安装 Alpine 作为主系统使用。&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apk add doc</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
    <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>威联通安装 zsh 与 ohmyzsh</title>
    <link href="https://powersee.github.io/2023/10/qnap-zsh/"/>
    <id>https://powersee.github.io/2023/10/qnap-zsh/</id>
    <published>2023-10-16T07:56:48.000Z</published>
    <updated>2023-10-18T18:11:59.217Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录如何在威联通的 qnap 系统里安装 zsh 和配置集 ohmyzsh。</p><p>比较简单的方法，是在 APP Center 里添加「程序来源」</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.myqnap.org/repo.xml</span><br></pre></td></tr></table></figure><p>或者到 <a href="https://www.myqnap.org/">https://www.myqnap.org/</a> 上面下载，然后使用命令行安装。</p><p>注意，以前的 qnapclub 已经不能用了。</p><hr><p>搜索 zsh 可以找到一个 oh my zsh，安装好就行。</p><p>之后 ssh 连接上威联通，输入 zsh，就可以把 shell 从默认的 sh 切换到 zsh。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[admin@qnap ~]# zsh</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure><p>它的真实路径是在硬盘的 <code>.qpkg</code> 目录中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lrwxrwxrwx /usr/bin/zsh -&gt; /share/CACHEDEV1_DATA/.qpkg/ZSH/bin/zsh*</span><br></pre></td></tr></table></figure><p>在普通的 Linux 发行版上，我们可能会使用 chsh 来切换默认 shell，实现 ssh 连接上时，自动使用 zsh，但是在威联通 qnap 里面并没有 chsh。</p><p>目前好像没什么比较好的办法来实现，网上搜到这篇教程，但是这样操作有风险，我没尝试。</p><p><a href="https://post.smzdm.com/p/a785zrr5/">NAS 篇一：威联通设置默认 shell 为 zsh_NAS存储_什么值得买</a></p><p>目前我想到的做法是，直接在 .profile 的最后，添加一行 zsh，这样我们 ssh 连接上威联通时，先启动 sh，然后它在加载配置文件时，自动启动 zsh。</p><p>但由于速度很快，所以我们肉眼看就像直接就进入 zsh 了。</p><p>同时它也帮我们装好了 oh my zsh，真实路径在</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.oh-my-zsh -&gt; /share/CACHEDEV1_DATA/.qpkg/ZSH/oh-my-zsh</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.zshrc -&gt; /share/CACHEDEV1_DATA/.qpkg/ZSH/zshrc.zsh-template</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文记录如何在威联通的 qnap 系统里安装 zsh 和配置集 ohmyzsh。&lt;/p&gt;
&lt;p&gt;比较简单的方法，是在 APP Center 里添加「程序来源」&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="NAS" scheme="https://powersee.github.io/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>不错的通知方式——PushMe</title>
    <link href="https://powersee.github.io/2023/10/PushMe/"/>
    <id>https://powersee.github.io/2023/10/PushMe/</id>
    <published>2023-10-12T08:44:45.000Z</published>
    <updated>2023-10-12T08:46:51.223Z</updated>
    
    <content type="html"><![CDATA[<p>刚才没事看看青龙的更新日志，发现它从 7 月份开始，支持多一种通知方式 PushMe，了解了下，发现还挺不错的。</p><p>官网：<a href="https://push.i-i.me/">PushMe 一个简单轻量的Android消息客户端 (i-i.me)</a></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><hr><ul><li>简单：无需登录注册，安装后，在app上获取push_key，即可使用</li><li>轻量：android原生开发，无多余功能，安装包大小不到7M</li><li>可靠：支持离线消息</li><li>兼容：接口兼容企业微信&#x2F;钉钉&#x2F;飞书群机器人，直接替换即可</li><li>Markdown：消息内容支持markdown格式</li><li>数据小屏：方便查看数据消息 new</li></ul><p>它不同于我之前使用的 server 酱，爱语飞飞，Pushplus 这些需要使用微信公众号的。pushme 是一款安卓 APP，那么就只有安卓设备可以使用咯。</p><p>官网上提供的下载方式有 GitHub 和 Gitee，不过它并不是开源软件，只是把 apk 安装包放上去去。到 GitHub 上可以发现仓库只是放了图片和 apk 安装包而已。</p><p>这 APP 确实简洁，甚至连自己 APP 图标都没有。</p><p>我在 MIUI 上安装好后，需要自己去打开应用的通知权限。</p><p>第一次使用，需要在左侧获取一下 push_key。然后可以在 APP 内给自己发消息，也可以在<a href="https://push.i-i.me/">官网</a>，主要是测试能否收到消息。</p><p><img src="/img/2023/pushme-test-shadow.webp" alt="pushme-test-shadow"></p><p>目前也使用有 10 来天了，感觉还不错。目前一些青龙脚本我就是使用它，来发送通知到手机的。</p><p>如果是自己写的 Python 脚本，只需要在加入这样几行</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> notify</span><br><span class="line"></span><br><span class="line">title = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line"></span><br><span class="line">notify.send(title, result)</span><br></pre></td></tr></table></figure><p>就可以在脚本运行完成之后，通过 pushme 把内容发送到手机。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>不过我明明给这个 APP 自启动的权限，并且关闭了省电限制，也让它固定在后台，但是却发现依然不能收到通知，只能打开 APP 后刷新才能看到消息。</p><p>而且这 APP 一放到后台没多久，就会弹出一条通知「通道状态：Disconnected」</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>我发现直接把 APP 从后台划掉，这样就可以直接收到通知了。到「通知管理」里面，将 StateChannel 关掉，就不会收到通道状态的消息了。</p><h3 id="更新-notice"><a href="#更新-notice" class="headerlink" title="更新 notice"></a>更新 notice</h3><p>qinglong 需要更新 notice 文件，由于我只使用 Python 脚本，所以去 GitHub 下载新的 <a href="https://github.com/whyour/qinglong/blob/develop/sample/notify.py">qinglong&#x2F;sample&#x2F;notify.py at develop · whyour&#x2F;qinglong · GitHub</a></p><p>然后替换掉原来的就可以了。</p><p>通过观察 notify.py 文件，可以看到这样的内容</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pushme</span>(<span class="params">title: <span class="built_in">str</span>, content: <span class="built_in">str</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用 PushMe 推送消息。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> push_config.get(<span class="string">&quot;PUSHME_KEY&quot;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;PushMe 服务的 PUSHME_KEY 未设置!!\n取消推送&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;PushMe 服务启动&quot;</span>)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">f&#x27;https://push.i-i.me/?push_key=<span class="subst">&#123;push_config.get(<span class="string">&quot;PUSHME_KEY&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span>: title,</span><br><span class="line">        <span class="string">&quot;content&quot;</span>: content,</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span> <span class="keyword">and</span> response.text == <span class="string">&quot;success&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;PushMe 推送成功！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;PushMe 推送失败！<span class="subst">&#123;response.status_code&#125;</span> <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>虽然里面用的是 post，不过其实我们把它转换一下，然后用 get 也是可以发送通知的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://push.i-i.me/?push_key=KEY&amp;title=标题&amp;content=内容</span><br></pre></td></tr></table></figure><p>把这里的 KEY 换成自己的秘钥，然后把链接复制到浏览器访问一下，手机端就可以收到消息。</p><p><img src="/img/2023/pushme-msg.webp" alt="pushme-msg"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;刚才没事看看青龙的更新日志，发现它从 7 月份开始，支持多一种通知方式 PushMe，了解了下，发现还挺不错的。&lt;/p&gt;
&lt;p&gt;官网：&lt;a href=&quot;https://push.i-i.me/&quot;&gt;PushMe 一个简单轻量的Android消息客户端 (i-i.me)&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="Python" scheme="https://powersee.github.io/tags/Python/"/>
    
    <category term="工具" scheme="https://powersee.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>caddy 添加身份验证 basicauth</title>
    <link href="https://powersee.github.io/2023/10/caddy-basicauth/"/>
    <id>https://powersee.github.io/2023/10/caddy-basicauth/</id>
    <published>2023-10-08T03:24:46.000Z</published>
    <updated>2023-10-08T03:26:33.720Z</updated>
    
    <content type="html"><![CDATA[<p>在 shell 里执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">caddy hash-password</span><br></pre></td></tr></table></figure><p>然后输入两次密码，它会帮我们生成 hash-password 字符串。</p><p>这里我输入 powersee 作为密码，输入密码的过程中不会显示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># caddy hash-password</span><br><span class="line">Enter password:</span><br><span class="line">Confirm password:</span><br><span class="line">$2a$14$plaWtwb6sWHLMe/M6J9YqeOzbfabMeOaSm51gnHAegXpraaRyARLm</span><br></pre></td></tr></table></figure><p>然后就得到了这样的字符串：<code>$2a$14$plaWtwb6sWHLMe/M6J9YqeOzbfabMeOaSm51gnHAegXpraaRyARLm</code></p><p>这步的作用是通过哈希密码，来对密码进行加密。它的特点是「不可逆」，没法通过上面的字符串来反推我的密码。</p><p>而且，我再执行一次命令，依然使用 powersee 作为密码，得到的字符串和上次也不一样。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># caddy hash-password</span><br><span class="line">Enter password:</span><br><span class="line">Confirm password:</span><br><span class="line">$2a$14$DDZ.pSpoDCjSLU6t4VCofer8kV/GMFRAiwlFLKQy2GR46/M26pvvy</span><br></pre></td></tr></table></figure><p>获得这个加密的密码后，我们需要把它添加到 caddy 的配置文件 Caddyfile 里面。</p><p>我里面的内容原本是这样的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:80 &#123;</span><br><span class="line">        root * /usr/share/caddy</span><br><span class="line">        file_server</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后变成这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:80 &#123;</span><br><span class="line">        basicauth * &#123;</span><br><span class="line">                admin       $2a$14$rwVbmOSeXDBg16KT3w2FtOPRmskImqGPWBmHhtAHFDjelpDANl8Zq</span><br><span class="line">        &#125;</span><br><span class="line">        root * /usr/share/caddy</span><br><span class="line">        file_server</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是多添加了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">basicauth * &#123;</span><br><span class="line">        admin       $2a$14$rwVbmOSeXDBg16KT3w2FtOPRmskImqGPWBmHhtAHFDjelpDANl8Zq</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时用户名是 admin，密码是后面的字符串，也就是之前的 powersee。</p><p>于是此时我通过 80 端口来访问这台服务器的话，会弹出一个窗口，然后输入用户名和密码，验证成功才能看到里面的内容。</p><p><img src="/img/2023/caddy-basicauth.webp" alt="caddy-basicauth"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 shell 里执行&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;caddy hash-password&lt;/span&gt;&lt;br&gt;&lt;/p</summary>
      
    
    
    
    
    <category term="web" scheme="https://powersee.github.io/tags/web/"/>
    
  </entry>
  
</feed>
