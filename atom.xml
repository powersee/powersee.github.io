<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Powersee的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://powersee.github.io/"/>
  <updated>2022-01-12T08:40:27.245Z</updated>
  <id>https://powersee.github.io/</id>
  
  <author>
    <name>powersee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客2022年瞎折腾</title>
    <link href="https://powersee.github.io/2022/01/hexo-2022/"/>
    <id>https://powersee.github.io/2022/01/hexo-2022/</id>
    <published>2022-01-12T03:21:54.000Z</published>
    <updated>2022-01-12T08:40:27.245Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我的博客一直使用 hexo 部署的，之前还有同步到 gitee 上，后来 gitee 提示我说有内容违规，把 gitee page 给我关了，还要我自己去审查我哪里违规。。。</p><p>那就算了，不用 gitee 了，现在主要部署在 GitHub 上面。</p><h3 id="为什么使用-hexo？"><a href="#为什么使用-hexo？" class="headerlink" title="为什么使用 hexo？"></a>为什么使用 hexo？</h3><p>主要原因有，文档可以使用 Markdown，博客可以部署到 GitHub pages（免费），迁移不难（相对于 WordPress 来说）。说起来我这博客还真的迁移了好几次了，之前在黑苹果上，后来迁移到 win7，之后到 win10，现在迁移到 Mac mini M1</p><p>前段时间也了解到有一个和 hexo 差不多的，可以将 Markdown 渲染为 HTML，然后可以部署到 GitHub pages 的项目——<a href="https://vuepress.vuejs.org/zh/">VuePress (vuejs.org)</a></p><p>不过我还没去深入了解，毕竟 hexo 我也用了好几年了，其实主题方面也花了不少时间去折腾，才达到了自己勉强满意的效果，如果换其它的，之前的时间感觉就白费了，而且可以又得花时间去了解、去调整到自己满意的效果。</p><p>所以既然现在 hexo 还能用，就继续用就行了。</p><h3 id="本次迁移过程中遇到的问题"><a href="#本次迁移过程中遇到的问题" class="headerlink" title="本次迁移过程中遇到的问题"></a>本次迁移过程中遇到的问题</h3><p>步骤是安装 nodejs 先，我是直接下载 tar 压缩包，解压后将 bin 文件夹路径添加到环境变量中的，执行 node -v 和 npm -v 查看版本，成功显示既可。</p><p>之后参考 hexo 官网安装，然后把之前备份的 hexo 博客项目拉取回来，进入博客根目录，执行 npm install 安装依赖。</p><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>完成后就碰到问题了，执行 hexo d 无法将内容部署到 GitHub 上面。显示</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Copying <span class="built_in">files</span> <span class="built_in">from</span> public <span class="built_in">folder</span></span><br></pre></td></tr></table></figure><p>后就报错了</p><p>那么就网上搜搜看别人的解决方法，于是找到了。</p><p><a href="https://www.zhihu.com/question/443396119">求解hexo d把文件复制到deploy文件夹就没用然后了？ - 知乎 (zhihu.com)</a></p><blockquote><p>我也遇到了这个问题，这是我在GitHub上看到的某位大佬的办法，先把原来的hexo-deployer-git插件卸载了，然后直接从 master 分支安装<br>npm un hexo-deployer-git<br>npm i hexojs/hexo-deployer-git</p><p>作者：cc666<br>链接：<a href="https://www.zhihu.com/question/443396119/answer/1721530396">https://www.zhihu.com/question/443396119/answer/1721530396</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>接着遇到了第二个问题，就是 public 文件夹内的 html 文件，内容都是空白的。</p><p>那么这个具体是怎么解决的呢？其实我也不太清楚，我的操作过程是，升级看看。</p><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> audit fix</span><br><span class="line"></span><br><span class="line"><span class="built_in">npm</span> audit fix --force</span><br></pre></td></tr></table></figure><p>然后查看 <code>package.json</code> 发现里的 hexo 版本是 3.7，对比一下 hexo 官网，最新的好像已经是 6 点几了，于是我执行一下</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">version</span></span><br></pre></td></tr></table></figure><p>然后它就自动变为 6.0.0 了</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;hexo&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;6.0.0&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>那么看来已经把 hexo 升级了，于是再来试试 <code>hexo g</code></p><p>这一次生成的 html 文件就又内容了，在执行 <code>hexo d</code> 部署到 GitHub pages，就完成了。</p><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>然后部署到 GitHub pages 的内容，打开后发现图片没法加载。</p><p>原因是我的博客文章里，图片链接都是以这种方式</p><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">![Mac_M1_kcc](<span class="symbol">\i</span>mg<span class="symbol">\2</span>021<span class="symbol">\M</span>ac_M1_kcc.png)</span><br></pre></td></tr></table></figure><p>之所以是反斜杠 <code>\</code> ，是因为我之前用的是 win10 ，Windows 里面文件的路径就是用反斜杠的，而在 Linux 或者 macOS 里面，文件路径则是 <code>/</code> ，所以导致现在在浏览器里面，图片的加载路径变为像</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>powersee.github.io<span class="regexp">/2021/</span><span class="number">07</span><span class="regexp">/zte-e8820s/</span>\img\<span class="number">2021</span>\e8820s-ttl.jpg</span><br></pre></td></tr></table></figure><p>这样的了，自然就没法加载出来图片。不过也是很奇怪，我刚才没有升级 hexo 的时候，明明图片是可以加载出来的（刚才在电脑里通过 hexo s 访问 localhost:4000 的时候，图片什么的都是正常的……）</p><p>然后我又查看了一下我的备份博客，我设置它每天凌晨同步 GitHub 上的网页，所以刚才更新的内容，它还没同步过去。然后我发现，其实之前的图片也是有反斜杠的，并且图片可以正常加载。</p><p><img src="/img/2022/%E4%BD%BF%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%E7%9A%84%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5.jpg"></p><p>等了一会之后，我再去刷新 GitHub pages 搭建的博客，图片大多数也可以加载了。有点莫名其妙。不过我还是使用 vscode 里的查找替换功能，将 <code>\img\2021\</code> 全部替换为 <code>/img/2021/</code> ，以及 2020 年的。</p><p>其实想想也不怎么省心呀，不过还好问题能够解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我的博客一直使用 hexo 部署的，之前还有同步到 gitee 上，后来 gitee 提示我说有内容违规，把 gitee page 给我关了
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>kindle 漫画制作软件 kindle comic converter 汉化版</title>
    <link href="https://powersee.github.io/2021/12/about-kcc/"/>
    <id>https://powersee.github.io/2021/12/about-kcc/</id>
    <published>2021-12-10T12:20:37.000Z</published>
    <updated>2022-01-12T08:29:09.975Z</updated>
    
    <content type="html"><![CDATA[<p>Kindle Comic Converter 是漫画制作软件，主要是用来讲图片转换为 epub 或者 mobi 格式的文件，方便墨水屏设备阅读。</p><p>项目地址：<a href="https://github.com/ciromattia/kcc">ciromattia/kcc: KCC (a.k.a. Kindle Comic Converter) is a comic and manga converter for ebook readers. (github.com)</a></p><p>最后的更新停留在 2019 年 10 月，最近我也是花了很多的时间在研究这款软件上。最终的成果是在自己的机器上，编译出了新的软件版本。</p><p>目前编译出的有</p><ul><li>Windows 64 位版（win10 和 win7 上都可以用）</li><li>Macos ARM 版（在 M1 芯片的 Mac mini 上可以使用，不需要转译）</li></ul><p><img src="/img/2021/Mac_M1_kcc.png" alt="Mac_M1_kcc"></p><blockquote><p>软件链接：</p><p>蓝奏云：<a href="https://pan.lanzou.com/b0bg5lrub">https://pan.lanzou.com/b0bg5lrub</a> 密码:2ebz</p><p>百度网盘：链接：<a href="https://pan.baidu.com/s/1NWci0kT5NN_XFfv3HETVJw">https://pan.baidu.com/s/1NWci0kT5NN_XFfv3HETVJw</a><br>提取码：psee</p><p>个人下载站：<a href="https://pan.powersee.top/">https://pan.powersee.top/</a> </p><p>在【Windows 应用】和【Mac 应用】文件夹中</p><p>阿里云盘分享不了压缩包，mac 的 dmg 安装包居然也不行。。。</p></blockquote><p><img src="/img/2021/profiles_kcc.png" alt="profiles_kcc"></p><p>并且我还对软件进行了汉化。并且添加多几个预设，如果你们的设备没有在列表里面，其实也没有关系的，选择同样分辨率的设备就行。例如里面的 Boox，我就只添加一个，因为我发现 7.8 英寸的 nova air 和 10.3 英寸的 note X 其实它们的分辨率是一样的，都是1404 * 1872，和 kobo auro ONE 其实也一样，本来是不需要添加进去的。</p><p>但是我发现如果预设选择 kobo 系列的，那么转换出来的文件，后缀是 kepub.epub，看着有点别扭，所以我就添加多一个预设进去了。这样转换出来的 epub 就不会带 kepub。</p><p><img src="/img/2021/kcc-other.jpg" alt="kcc-other"></p><p>如果自己的设备在里面没有相同分辨率的机器，那么可以选择 other，然后自己添加分辨率。</p><p>这里我也把里面的预设的分辨率放出来给大家参考</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">&#x27;K1&#x27;: (<span class="string">&quot;Kindle 1&quot;</span>, (<span class="number">600</span>, <span class="number">670</span>), Palette4, <span class="number">1.8</span>),</span><br><span class="line">&#x27;K2&#x27;: (<span class="string">&quot;Kindle 2&quot;</span>, (<span class="number">600</span>, <span class="number">670</span>), Palette15, <span class="number">1.8</span>),</span><br><span class="line">&#x27;K34&#x27;: (<span class="string">&quot;Kindle Keyboard/Touch&quot;</span>, (<span class="number">600</span>, <span class="number">800</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;K578&#x27;: (<span class="string">&quot;Kindle&quot;</span>, (<span class="number">600</span>, <span class="number">800</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KDX&#x27;: (<span class="string">&quot;Kindle DX/DXG&quot;</span>, (<span class="number">824</span>, <span class="number">1000</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KPW&#x27;: (<span class="string">&quot;Kindle Paperwhite 1/2&quot;</span>, (<span class="number">758</span>, <span class="number">1024</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KV&#x27;: (<span class="string">&quot;Kindle Paperwhite 3/4/Voyage/Oasis&quot;</span>, (<span class="number">1072</span>, <span class="number">1448</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KPW5&#x27;: (<span class="string">&quot;Kindle Paperwhite 5/Signature Edition&quot;</span>, (<span class="number">1236</span>, <span class="number">1648</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KO&#x27;: (<span class="string">&quot;Kindle Oasis 2/3&quot;</span>, (<span class="number">1264</span>, <span class="number">1680</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;MIX7&#x27;: (<span class="string">&quot;Kindle Oasis 2/3&quot;</span>, (<span class="number">1264</span>, <span class="number">1680</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoMT&#x27;: (<span class="string">&quot;Kobo Mini/Touch&quot;</span>, (<span class="number">600</span>, <span class="number">800</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoG&#x27;: (<span class="string">&quot;Kobo Glo&quot;</span>, (<span class="number">768</span>, <span class="number">1024</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoGHD&#x27;: (<span class="string">&quot;Kobo Glo HD&quot;</span>, (<span class="number">1072</span>, <span class="number">1448</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoA&#x27;: (<span class="string">&quot;Kobo Aura&quot;</span>, (<span class="number">758</span>, <span class="number">1024</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoAHD&#x27;: (<span class="string">&quot;Kobo Aura HD&quot;</span>, (<span class="number">1080</span>, <span class="number">1440</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoAH2O&#x27;: (<span class="string">&quot;Kobo Aura H2O&quot;</span>, (<span class="number">1080</span>, <span class="number">1430</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoAO&#x27;: (<span class="string">&quot;Kobo Aura ONE&quot;</span>, (<span class="number">1404</span>, <span class="number">1872</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;BOOX&#x27;: (<span class="string">&quot;BOOX nova air / note X&quot;</span>, (<span class="number">1404</span>, <span class="number">1872</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoC&#x27;: (<span class="string">&quot;Kobo Clara HD&quot;</span>, (<span class="number">1072</span>, <span class="number">1448</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoL&#x27;: (<span class="string">&quot;Kobo Libra H2O&quot;</span>, (<span class="number">1264</span>, <span class="number">1680</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;KoF&#x27;: (<span class="string">&quot;Kobo Forma&quot;</span>, (<span class="number">1440</span>, <span class="number">1920</span>), Palette16, <span class="number">1.8</span>),</span><br><span class="line">&#x27;OTHER&#x27;: (<span class="string">&quot;Other&quot;</span>, (<span class="number">0</span>, <span class="number">0</span>), Palette16, <span class="number">1.8</span>),</span><br></pre></td></tr></table></figure><p>其实选择不同的预设，只是转换出来的图片分辨率不用而已，但是，好像都是可以正常全屏阅读的，例如我同一本漫画，转为为 ko2 和 kindle（也就是上面的 K578，分辨率为 600 X 800），那么结果在我的 kindle 499 上面都是可以正常阅读，而且明显用 ko2 预设转换出来的漫画，分辨率更高，在 kindle 499 上面看也比较清晰一些。因为选 ko2 转换出来的 mobi 文档，里面的图片分辨率是 1680 X 1264 ，而选择 kindle 转换出来的分辨率则为 600 X 800，所以不管在那台设备，都是高分辨率的图片看起来清晰。</p><p>所以个人感觉，如果可以，尽可能的使用较高分辨率的预设，这样转换出来的图片分辨率比较高，画质更好更清晰，而且可能以后的设备也可以阅读（例如现在有时从网上下载的 kindle 漫画，有些是比较旧的，是当年网友制作给 600 X 800 的设备阅读的，放到 ko2 这个分辨率为 1680 X 1264 的设备看就挺模糊的）。</p><p>当然也不是说分辨率调高就好，现在比较高清的日本漫画资源，分辨率高度方面好像就 2000 多而已，你调个 3、4000 肯定也没用。</p><p><img src="/img/2021/tieba-img-download.jpg" alt="tieba-img-download"></p><p>然后我发现贴吧还是可以下载到挺多漫画图片的，所以我也写了个程序来下载贴吧的高清图片，用着也还不错，图片会按照顺序重命名，所以下载完后，直接把文件夹拖到 kcc 里面就可以转换为 epub 或者 mobi 了，两者可以配合使用。</p><p>对了，kcc 这个软件也是可以将 PDF 漫画，转换为 epub 或者 mobi 的，我之前就有尝试过，将 700 多 M 的 PDF 漫画，拖进去，转换为 mobi 漫画，放到 kindle 上面来阅读。结果会变成两个文件，因为这个软件限制 mobi 格式的文档，最大只能 400M，据说是太大了 kindle 用起来会卡。（作者在论坛说的）</p><p>EPUB 就没有这方面的限制，所以我尝试过把整本漫画转换为 epub，结果生成了一个 1G 多的文档，放到墨案 mix7 上面阅读还挺流畅的。</p><h3 id="12-21-版"><a href="#12-21-版" class="headerlink" title="12.21 版"></a>12.21 版</h3><p><img src="/img/2021/kcc-2021-12-21.jpg" alt="kcc-2021-12-21"></p><p>添加了两个选择框</p><ul><li>禁删 epub</li><li>保持原图</li></ul><p>当我们制作 mobi 漫画时，其实软件是先将图片制作为 epub，然后再使用 kindlegen 将 epub 转换为 mobi，转换完成就把 epub 删除掉。</p><p>如果我们制作的漫画是想要放到网上进行分享的，那么两种格式都保存可能比较好，这样受众会更多一些。所以我添加了一个选项，勾选上就不会删除 epub 了。</p><p>保持原图，就是不对图片进行处理，仅仅是把图片放到 epub 或者 mobi 里面而已，所以不管你的图片是双页，还是留有巨大的白边，它都不管了，直接放进去就行。一些高分辨率图片也可以使用这个功能。</p><h3 id="另类的用法——将-PPT-课件转为-mobi"><a href="#另类的用法——将-PPT-课件转为-mobi" class="headerlink" title="另类的用法——将 PPT 课件转为 mobi"></a>另类的用法——将 PPT 课件转为 mobi</h3><p>这个是网友 @<a href="https://space.bilibili.com/11372531">芊里阿</a>  分享的方法</p><blockquote><p>之前用kindle把ppt转成pdf看，又卡，每一页还显示不全。 用up分享的软件，先把ppt转成图片，然后再转mobi格式的就方便多了（要点那个旋转不切割，不缩放）大家有需要的也可以试试 </p></blockquote><p>如果是直接将 PPT 导出为 PDF，放到 kindle 上面也可以看，但是不能横屏吧。而且 PDF 在 kindle 上面观看，应该是每一页都会全刷，屏闪非常严重。用 mobi 就不会，而且用这个软件可以让图片进行旋转，也就可以全屏观看了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Kindle Comic Converter 是漫画制作软件，主要是用来讲图片转换为 epub 或者 mobi 格式的文件，方便墨水屏设备阅读。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/ciromattia/kcc&quot;&gt;ciromatt
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="kindle" scheme="https://powersee.github.io/tags/kindle/"/>
    
  </entry>
  
  <entry>
    <title>关于 radxa-zero</title>
    <link href="https://powersee.github.io/2021/09/radxa-zero/"/>
    <id>https://powersee.github.io/2021/09/radxa-zero/</id>
    <published>2021-09-17T13:40:18.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>最近搞来了一台 radxa zero</p><p><img src="/img/2021/radxa-zero-1.jpg" alt="radxa-zero-1"></p><p>产品信息：<a href="https://forum.radxa.com/t/introduce-the-radxa-zero/6550/">https://forum.radxa.com/t/introduce-the-radxa-zero/6550/</a></p><p>从论坛可以了解到，目前可以在这台机器上运行 TwisterOS、emuelec、coreelec、Android 9、MiniMyth2、Manjaro</p><p>机器到手时，emmc 自带的是 Android 9，之后我开始尝试运行其它的系统。使用 sd 卡成功运行了 TwisterOS 和 EmuELEC，其它的没有启动成功。</p><p>看论坛有人说需要把 emmc 的内容擦除掉，这样机器启动时就会自动加载 sd 卡的系统。那么我也尝试了，没有效果。</p><p>之后又看到有人说要把 uboot 写入烧录了镜像的 sd 中，我也尝试了，还是没法启动。</p><p>那就算了，我还是刷回 Android 9 吧，不然现在 emmc 浪费着有点可惜。</p><p>但是这时我发现，这机器并不能像以往的晶晨机器那样，使用 usb burning tool 来将安卓固件烧录到 emmc 里面。</p><p>然后我又耗费了很多时间去折腾，中间也联系了 radxa 的工作人员，最终发现，只能使用 Ubuntu 物理机才行。</p><p>教程在官方的 wiki 这里：<a href="https://wiki.radxa.com/Zero/install/eMMC_aml_tool">https://wiki.radxa.com/Zero/install/eMMC_aml_tool</a></p><p>在 Ubuntu 上面没有像 Windows 一样的 gui 烧录程序，只能通过脚本来烧录。我一开始在 win10 上面通过虚拟机，执行脚本，将镜像烧录进机器，却一直报错。即使已经设置了 usb 默认连接到虚拟机里面，也不行。尝试了 virtual box 和 VMware，都没有成功。</p><p>后来 radxa 这边的大哥告诉我，他烧录成功是在物理机上面执行的。那么我就抱着最后的希望，我用 t48e 这台小主机，装了一个 ubuntu 20.04 server 版，之后在 win10 上通过 ssh 控制它。</p><p>安装 lrzsz 后将固件传入机器，下载和安装刷机工具。</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># git clone flash tool</span></span><br><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/radxa/</span>aml-flash-tool.git</span><br><span class="line"><span class="comment"># install dependency</span></span><br><span class="line">cd aml-flash-tool</span><br><span class="line">./INSTALL</span><br></pre></td></tr></table></figure><p>传入固件后，解压（如果电脑没下载固件的话，也可以在 Ubuntu 里面下载）</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载，看情况</span></span><br><span class="line">wget https:<span class="regexp">//</span>dl.radxa.com<span class="regexp">/zero/im</span>ages<span class="regexp">/android/</span>radxa_zero_android_9_20210708-amlupdate.img.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -xzvf radxa_zero_android_9_20210708-amlupdate.img.gz</span><br></pre></td></tr></table></figure><p><img src="/img/2021/radxa-zero-2.jpg" alt="radxa-zero-2"></p><p>之后按住机器背后的按键，使用数据线连接运行着 Ubuntu 的电脑，通过 <code>lsusb</code> 查看是否有识别到名字带 Amlogic 的设备。</p><p>有的话可以进行下一步，执行刷机命令，由于此时固件和脚本放在同一个目录下，所以可以这样执行</p><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">./aml-flash-tool.sh radx<span class="built_in">a_zero</span>_android_9_20210708-amlupdate.img</span><br></pre></td></tr></table></figure><p>我的执行过程是这样的</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">ver@t48e:~/aml-flash-tool$ ./aml-flash-tool.<span class="keyword">sh</span> radxa_zero_android_9_20210717-amlupdate.img</span><br><span class="line">Unpacking image [OK]</span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">awk: cmd. <span class="built_in">line</span>:<span class="number">1</span>: warnin<span class="variable">g:</span> regexp <span class="built_in">escape</span> sequence `\<span class="comment">&quot;&#x27; is not a known regexp operator</span></span><br><span class="line">Initializing ddr ........[OK]</span><br><span class="line">Running <span class="keyword">u</span>-boot ........[OK]</span><br><span class="line">Create partitions [OK]</span><br><span class="line">Writing device tree [OK]</span><br><span class="line">Writing bootloader [OK]</span><br><span class="line">Wiping  data partition [OK]</span><br><span class="line">Wiping  cache partition [OK]</span><br><span class="line">Writing boot partition [OK]</span><br><span class="line">Writing dtbo partition [OK]</span><br><span class="line">Writing logo partition [OK]</span><br><span class="line">Writing odm partition [OK]</span><br><span class="line">Writing product partition [OK]</span><br><span class="line">Writing recovery partition [OK]</span><br><span class="line">Writing <span class="built_in">system</span> partition [OK]</span><br><span class="line">Writing vbmeta partition [OK]</span><br><span class="line">Writing vendor partition [OK]</span><br><span class="line">Resetting board [OK]</span><br><span class="line">ver@t48e:~/aml-flash-tool$</span><br></pre></td></tr></table></figure><p>那么就成功刷好了，之后重启机器就进入 Android 9 了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近搞来了一台 radxa zero&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/radxa-zero-1.jpg&quot; alt=&quot;radxa-zero-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;产品信息：&lt;a href=&quot;https://forum.radxa.com/t/introd
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>中兴e8820s路由器</title>
    <link href="https://powersee.github.io/2021/07/zte-e8820s/"/>
    <id>https://powersee.github.io/2021/07/zte-e8820s/</id>
    <published>2021-07-25T07:11:50.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/2021/zte-e8820s.jpg" alt="zte-e8820s"></p><p>参考帖子：<a href="https://www.right.com.cn/forum/thread-4046951-1-1.html">中兴8820S与8820V2比较及TTL刷机</a></p><p>相关文件：</p><p>网盘：<a href="http://veger.ys168.com/">http://veger.ys168.com/</a><br>个人下载站：<a href="https://pan.powersee.top/">https://pan.powersee.top</a></p><p>padavan 固件下载：<a href="https://opt.cn2qq.com/padavan">https://opt.cn2qq.com/padavan</a></p><p>选择 ZTE_E8820S 开头的</p><p>这台路由器想刷机的话，需要自己焊接针脚。</p><p><img src="/img/2021/e8820s-ttl.jpg" alt="e8820s-ttl"></p><p>我使用的模块是 CH340</p><p><img src="/img/2021/e8820s-ttl2.jpg" alt="e8820s-ttl2"></p><p>软件的选择有很多，可以用 putty，也可以用 xshell。</p><ul><li>连接上之后，使用账号密码进行登录。</li><li>之后将 breed 放在 U 盘中，插入路由器</li><li>路由器进入 U 盘所在目录</li><li>备份原系统</li><li>写入 breed</li><li>重启</li></ul><p><img src="/img/2021/command-zte.png" alt="14.command-zte"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/2021/zte-e8820s.jpg&quot; alt=&quot;zte-e8820s&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考帖子：&lt;a href=&quot;https://www.right.com.cn/forum/thread-4046951-1-1.html&quot;&gt;中兴8820
      
    
    </summary>
    
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>vscode 修改默认终端</title>
    <link href="https://powersee.github.io/2021/07/vscode-change-default-terminal/"/>
    <id>https://powersee.github.io/2021/07/vscode-change-default-terminal/</id>
    <published>2021-07-18T13:37:21.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>vscode 默认新建终端的话，开启的是一个 cmd 的 shell，如何将它改为其它的呢？例如 powershell。</p><p>首先点击左下角的进入设置，也可以用快捷键 <code>ctrl + ,</code> </p><p>点击【功能】，【终端】，修改如下图两个地方即可。</p><p><img src="/img/2021/vscode-settings.jpg" alt="vscode-settings"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vscode 默认新建终端的话，开启的是一个 cmd 的 shell，如何将它改为其它的呢？例如 powershell。&lt;/p&gt;
&lt;p&gt;首先点击左下角的进入设置，也可以用快捷键 &lt;code&gt;ctrl + ,&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;点击【功能】，【终端】，修改如下图两
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>路由器和软路由速度记录</title>
    <link href="https://powersee.github.io/2021/07/router-speed/"/>
    <id>https://powersee.github.io/2021/07/router-speed/</id>
    <published>2021-07-05T01:25:59.000Z</published>
    <updated>2022-01-12T02:42:43.025Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录测试过的路由器和软路由设备，它们的出国速度表现。</p><p>由于家里的移动宽带，目前最高只能跑到 440-450 mbps 左右，所以有些性能较强的设备，目前没有条件测出它的极限，见谅。</p><table><thead><tr><th align="left">设备型号</th><th>出国速度（Mbps）</th></tr></thead><tbody><tr><td align="left">章鱼星球 S912</td><td>440（已达到宽带极限，未知上限）</td></tr><tr><td align="left">小米 CR6608 （mt7621）</td><td>80</td></tr><tr><td align="left">JCG Q20</td><td>80</td></tr><tr><td align="left">我家云 rk3328</td><td>300</td></tr><tr><td align="left">D2550</td><td>210（ssr 可以到 390）</td></tr><tr><td align="left">k2p</td><td>80</td></tr><tr><td align="left">树莓派4B</td><td>415</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文记录测试过的路由器和软路由设备，它们的出国速度表现。&lt;/p&gt;
&lt;p&gt;由于家里的移动宽带，目前最高只能跑到 440-450 mbps 左右，所以有些性能较强的设备，目前没有条件测出它的极限，见谅。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;l
      
    
    </summary>
    
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="openwrt" scheme="https://powersee.github.io/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>小米WiFi6路由器--cr660x</title>
    <link href="https://powersee.github.io/2021/06/xiaomi-cr660x/"/>
    <id>https://powersee.github.io/2021/06/xiaomi-cr660x/</id>
    <published>2021-06-22T03:07:40.000Z</published>
    <updated>2022-01-12T08:34:59.925Z</updated>
    
    <content type="html"><![CDATA[<ul><li>6606 — 联通</li><li>6608 — 移动</li><li>6609 — 电信</li></ul><p>配置</p><blockquote><p>soc mt7621 双核 880mhz</p><p>rom 128M</p><p>ram 256M</p><p>全千兆 1 WAN   3 LAN</p><p>支持 WiFi6、mesh</p></blockquote><p>刷机的难点在于解锁 ssh ，不同于其它的小米路由器，这台解锁需要用到一台 openwrt 路由器来辅助，比较麻烦点。</p><p>xqsystem.lua</p><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">module(<span class="string">&quot;luci.controller.admin.xqsystem&quot;</span>, package.seeall)</span><br><span class="line"></span><br><span class="line">function<span class="meta"> index(</span>)</span><br><span class="line">    local <span class="meta">page</span>   = node(<span class="string">&quot;api&quot;</span>)</span><br><span class="line">    <span class="meta">page</span>.target  = firstchild()</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">title</span>   = (<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">order</span>   = 100</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">index</span> = true</span><br><span class="line">    <span class="meta">page</span>   = node(<span class="string">&quot;api&quot;</span>,<span class="string">&quot;xqsystem&quot;</span>)</span><br><span class="line">    <span class="meta">page</span>.target  = firstchild()</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">title</span>   = (<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">order</span>   = 100</span><br><span class="line">    <span class="meta">page</span>.<span class="meta">index</span> = true</span><br><span class="line">    entry(&#123;<span class="string">&quot;api&quot;</span>, <span class="string">&quot;xqsystem&quot;</span>, <span class="string">&quot;token&quot;</span>&#125;, <span class="meta">call</span>(<span class="string">&quot;getToken&quot;</span>), (<span class="string">&quot;&quot;</span>), 103, 0x08)</span><br><span class="line"><span class="meta">end</span></span><br><span class="line"></span><br><span class="line">local LuciHttp = require(<span class="string">&quot;luci.http&quot;</span>)</span><br><span class="line"></span><br><span class="line">function getTok<span class="meta">en(</span>)</span><br><span class="line">    local result = &#123;&#125;</span><br><span class="line">    result[<span class="string">&quot;code&quot;</span>] = 0</span><br><span class="line">    result[<span class="string">&quot;token&quot;</span>] = <span class="string">&quot;; nvram set ssh_en=1; nvram commit; sed -i &#x27;s/channel=.*/channel=\&quot;debug\&quot;/g&#x27; /etc/init.d/dropbear; /etc/init.d/dropbear start;&quot;</span></span><br><span class="line">    LuciHttp.write_js<span class="meta">on(</span>result)</span><br><span class="line"><span class="meta">end</span></span><br></pre></td></tr></table></figure><p>如果会用 vi 的话，自己 ssh 进去之后，创建文件，将内容粘贴进去即可。</p><p>不会的话，可以使用 winscp 连接旧路由器，将 <code>xqsystem.lua</code> 文件拖进去，放在这个目录里</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/lua/</span>luci<span class="regexp">/controller/</span>admin/</span><br></pre></td></tr></table></figure><p>之后修改修改旧路由器的 ip 地址为 <code>169.254.31.1</code> ，并且把 dhcp 关闭</p><p>用浏览器访问：<a href="http://169.254.31.1/cgi-bin/luci/api/xqsystem/token">http://169.254.31.1/cgi-bin/luci/api/xqsystem/token</a></p><script type="text/javascript">    function mergeText()    {        document.getElementById('link1').innerText =         'http://192.168.10.1/cgi-bin/luci/;stok=' +            document.getElementById('stok').value +             '/api/misystem/extendwifi_connect?ssid='+            document.getElementById('ssid').value +            '&password='+            document.getElementById('passwd').value;         document.getElementById('link2').innerText =         'http://192.168.10.1/cgi-bin/luci/;stok=' +        document.getElementById('stok').value +         '/api/xqsystem/oneclick_get_remote_token?username=xxx&password=xxx&nonce=xxx';    }</script>你的 stok         <input type="text" id="stok" onkeyup="mergeText()" /><br/>你的 wifi 名     <input type="text" id="ssid" onkeyup="mergeText()" /><br/>你的 wifi 密码 <input type="text" id="passwd" onkeyup="mergeText()" /><br/><pre id="link1">填好自动生成链接</pre>第二个链接<pre id="link2">填好自动生成链接</pre><p>之后使用 winscp 连接小米路由器，将 <code>pb-boot.img</code> 放到 <code>tmp</code> 目录中，接着使用命令将它写入 Bootloader</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">mtd <span class="keyword">write</span> <span class="regexp">/tmp/</span>pb-boot.img Bootloader</span><br></pre></td></tr></table></figure><p>到此路由器的原系统就没了，现在断电重启，机器会自动进入 pb-boot ，在浏览器访问 192.168.1.1，可以进入刷机界面，如果要刷 openwrt 的话，需要先刷入 factory.bin 结尾的固件。</p><p><img src="/img/2021/cr6608.jpg" alt="cr6608"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;6606 — 联通&lt;/li&gt;
&lt;li&gt;6608 — 移动&lt;/li&gt;
&lt;li&gt;6609 — 电信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;soc mt7621 双核 880mhz&lt;/p&gt;
&lt;p&gt;rom 128M&lt;/p&gt;
&lt;p&gt;ra
      
    
    </summary>
    
    
      <category term="路由器" scheme="https://powersee.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="openwrt" scheme="https://powersee.github.io/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>github 拉取项目出错</title>
    <link href="https://powersee.github.io/2021/06/github-clone-error/"/>
    <id>https://powersee.github.io/2021/06/github-clone-error/</id>
    <published>2021-06-07T08:19:09.000Z</published>
    <updated>2022-01-12T02:42:43.023Z</updated>
    
    <content type="html"><![CDATA[<p>今天拉取 GitHub 上面的项目时，发现一直出错。</p><figure class="highlight vhdl"><table><tr><td class="code"><pre><span class="line">fatal: unable <span class="keyword">to</span> <span class="keyword">access</span> <span class="symbol">&#x27;https</span>://github.com/xxxx/xxxxx/&#x27;: gnutls_handshake() failed: <span class="literal">Error</span> <span class="keyword">in</span> the pull <span class="keyword">function</span>.</span><br></pre></td></tr></table></figure><p>最终发现，开代理就行，唉</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">url=http:<span class="comment">//192.168.123.69:7890</span></span><br><span class="line">alias pon=<span class="string">&#x27;export http_proxy=<span class="subst">$url</span>; export https_proxy=<span class="subst">$url</span>&#x27;</span></span><br><span class="line">pon</span><br></pre></td></tr></table></figure><p>我电脑的 ip 是 192.168.123.69 ，使用的代理软件是 clash ，把 allow lan 的开关打开后，局域网的其它设备就能使用电脑的代理。7890 是 clash 默认的端口，如果使用 ssr 默认是 1080。</p><p>另外一种方法</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">config</span> --<span class="keyword">global</span> http<span class="variable">.proxy</span> http:<span class="comment">//127.0.0.1:10809</span></span><br><span class="line">git <span class="keyword">config</span> --<span class="keyword">global</span> https<span class="variable">.proxy</span> https:<span class="comment">//127.0.0.1:10809</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天拉取 GitHub 上面的项目时，发现一直出错。&lt;/p&gt;
&lt;figure class=&quot;highlight vhdl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fatal: unable &lt;span cla
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>使用 telethon 来定时发送消息</title>
    <link href="https://powersee.github.io/2021/06/telethon-auto-reply/"/>
    <id>https://powersee.github.io/2021/06/telethon-auto-reply/</id>
    <published>2021-06-02T13:49:39.000Z</published>
    <updated>2022-01-12T08:34:59.925Z</updated>
    
    <content type="html"><![CDATA[<p>今天介绍一个 python 库 —— telethon，使用它我们可以在 Linux 服务器上登录 telegram，可以获取群消息、联系人，以及今天要重点介绍的自动发送消息。</p><p>更多的内容可以查看官方文档：<a href="https://docs.telethon.dev/en/latest/">https://docs.telethon.dev/en/latest/</a></p><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p>首先需要有 python 环境，我这里在 Ubuntu 服务器上面演示的，我用的是 python3</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> telethon</span><br></pre></td></tr></table></figure><p>安装成功后可以通过执行下面这个来检查</p><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">pytho<span class="symbol">n3</span> -c <span class="string">&quot;import telethon; print(telethon.__version__)&quot;</span></span><br></pre></td></tr></table></figure><p>我目前装的版本是 <code>1.21.1</code></p><h3 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h3><p>之后来到浏览器，需要申请 API</p><p><a href="https://my.telegram.org/auth?to=apps">https://my.telegram.org/auth?to=apps</a></p><p><img src="/img/2021/2021-06-02_22-00-41.jpg" alt="2021-06-02_22-00-41"></p><p>填写自己的手机号，前面的 <code>+</code> 我是有填的，不知道不填行不行。点击 next 按钮后我们的 telegram 客户端就会收到一条验证消息，验证码是英文字母，还挺长的。</p><p>之后需要创建一个 application ，要填的就是 App title 和 Short name 这两个而已，主要只能 <code>英文字母和数字</code> ，不可以用下划线，并且要在 5-32 个字符之间。可以参考这么填。</p><blockquote><p>App title: firstApp<br>Short name: 12345</p></blockquote><p>完成后可以看到 <code>api_id、api_hash</code> 这两个，把它们保存下来。需要将它们填写到下面的脚本里。</p><h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use your own values from my.telegram.org</span></span><br><span class="line">api_id = <span class="number">12345</span></span><br><span class="line">api_hash = <span class="string">&#x27;0123456789abcdef0123456789abcdef&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The first parameter is the .session file name (absolute paths allowed)</span></span><br><span class="line"><span class="keyword">with</span> TelegramClient(<span class="string">&#x27;anon&#x27;</span>, api_id, api_hash) <span class="keyword">as</span> client:</span><br><span class="line">    client.loop.run_until_complete(client.send_message(<span class="string">&#x27;me&#x27;</span>, <span class="string">&#x27;Hello, myself!&#x27;</span>))</span><br></pre></td></tr></table></figure><p>完成后保存，例如我这里保存为 tele-test.py ，然后通过 <code>python3 tele-test.py</code> 来执行这个脚本。它会让我们输入手机号码，因为这是我们第一次在陌生的设备上登录，之后在 telegram 客户端里我们会收到一个验证码，输入后就可以登录了。（此处手机号前面的 + 我就没填了）</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Please enter your phone (<span class="keyword">or</span> bot <span class="keyword">token</span>): <span class="number">123456789</span></span><br><span class="line">Please enter <span class="keyword">the</span> code you received: <span class="number">11631</span></span><br><span class="line">Signed <span class="keyword">in</span> successfully <span class="keyword">as</span> powersee</span><br></pre></td></tr></table></figure><p>那么这样我们在服务器上面登录了，并且此时也已经成功地发送了一条消息。就是给 <code>me</code> 这个用户发送 <code>Hello, myself!</code> 这条消息。其实就是将这句话，保存到 “保存的消息”里面而已。如果你想发送给其他人，以及修改内容，就修改一下脚本的内容就行。</p><p>里面的 anon 是缓存的密钥，第一次执行脚本后，我们输出手机号和验证码，完成后脚本所在文件夹就会出现一个 <code>anon.session</code> 文件，下次再执行这个脚本就不用输入手机号验证了。你可以将它移动到其它地方，但是记得也修改一下脚本里的内容，如将 acon 改为 <code>/opt/acon</code> 。</p><h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><p>然后想要实现定时执行的话，需要用到 crontab ，可以轻松实现每天定时发送消息给某个用户。</p><p>如果想让发送时间有些变化的话，可以在 python 里面加入 time 和 random</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">time.sleep(random.randint(<span class="number">5</span>,<span class="number">200</span>))</span><br></pre></td></tr></table></figure><p>这样会随机暂停 5 到 200 秒，因此每次发送消息的时间就不同了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天介绍一个 python 库 —— telethon，使用它我们可以在 Linux 服务器上登录 telegram，可以获取群消息、联系人，以及今天要重点介绍的自动发送消息。&lt;/p&gt;
&lt;p&gt;更多的内容可以查看官方文档：&lt;a href=&quot;https://docs.telet
      
    
    </summary>
    
    
      <category term="python" scheme="https://powersee.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>使用 Docker 将服务器打造成全能下载机</title>
    <link href="https://powersee.github.io/2021/05/docker-download-server/"/>
    <id>https://powersee.github.io/2021/05/docker-download-server/</id>
    <published>2021-05-16T00:41:53.000Z</published>
    <updated>2022-01-12T02:42:43.023Z</updated>
    
    <content type="html"><![CDATA[<p>本文建议搭配视频观看：</p><p><a href="https://www.bilibili.com/video/BV1xv411573B/">https://www.bilibili.com/video/BV1xv411573B/</a></p><p>两个 Docker 容器的搭建</p><p>transmission</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">docker run <span class="string">\</span></span><br><span class="line">    -d <span class="string">\</span></span><br><span class="line">    --name transmission <span class="string">\</span></span><br><span class="line">    -p <span class="number">9091</span>:<span class="number">9091</span> <span class="string">\</span></span><br><span class="line">    -p <span class="number">51413</span>:<span class="number">51413</span> <span class="string">\</span></span><br><span class="line">    -v /mnt/tr_data:/data <span class="string">\</span></span><br><span class="line">    -e USERNAME=admin <span class="string">\</span></span><br><span class="line">    -e PASSWORD=admin <span class="string">\</span></span><br><span class="line">    gists/transmission</span><br></pre></td></tr></table></figure><p>aria2</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -<span class="ruby">-name aria2-pro \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">-restart <span class="keyword">unless</span>-stopped \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">-network host \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">e PUID=<span class="variable">$UID</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">e PGID=<span class="variable">$GID</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">e RPC_SECRET=<span class="number">12345</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">e RPC_PORT=<span class="number">6800</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">e LISTEN_PORT=<span class="number">6888</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">v ~<span class="regexp">/aria2-config:/config</span> \</span></span><br><span class="line"><span class="ruby"></span>    -<span class="ruby">v /mnt/<span class="symbol">aria2:</span>/downloads \</span></span><br><span class="line"><span class="ruby"></span>    p3terx/aria2-pro</span><br></pre></td></tr></table></figure><p>使用 python 开启一个简单的文件分享服务</p><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">python3 -m http.<span class="keyword">server</span></span><br></pre></td></tr></table></figure><p>此时默认使用 8000 端口</p><p>更好的文件展示服务—— h5ai</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d -p <span class="number">5555</span>:<span class="number">80</span> -v /mnt:/h<span class="number">5</span>ai --name h<span class="number">5</span>ai ilemonrain/h<span class="number">5</span>ai:full</span><br></pre></td></tr></table></figure><p>最后记得防火墙放行。</p><p>如果你有购买腾讯云轻量服务器的需求，可以点击我的链接进行购买</p><p><a href="https://curl.qcloud.com/i4FBqtLH">https://curl.qcloud.com/i4FBqtLH</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文建议搭配视频观看：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1xv411573B/&quot;&gt;https://www.bilibili.com/video/BV1xv411573B/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两个 Dock
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>乐橙 sn1 刷机经验分享</title>
    <link href="https://powersee.github.io/2021/03/sn1-flash/"/>
    <id>https://powersee.github.io/2021/03/sn1-flash/</id>
    <published>2021-03-27T09:00:06.000Z</published>
    <updated>2022-01-12T08:34:59.925Z</updated>
    
    <content type="html"><![CDATA[<p>刷机关键点，绿联读卡器，<a href="https://detail.tmall.com/item.htm?id=595545521913&skuId=4539873880456">淘宝购买链接</a></p><p>@<strong>88841807849_bili</strong> 这位老哥告诉我的，他说他使用这款读卡器成功刷机了，于是我也就去买来试试看。果然是这样，用其它的读卡器和 U 盘一直不行，用了这款读卡器一下子就成功了。</p><p>另外还要买两样东西：</p><p><a href="https://item.taobao.com/item.htm?id=565486361121&_u=rod6isk7e40">单头电子线 端子线</a></p><p>要选择 4P 的</p><p>usb 转 ttl，我是在拼多多买的，CH340G普通版，价格 6.3 包邮。</p><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>建议还是先备份一下源系统比较好，可以先使用 <code>df -h</code> 看一下硬盘的挂载情况，然后再使用 dd 命令把 emmc 备份出来</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">dd <span class="attribute">if</span>=/dev/mmcblk0 <span class="attribute">of</span>=你的硬盘或U盘路径/lecheng.img</span><br></pre></td></tr></table></figure><h3 id="固件"><a href="#固件" class="headerlink" title="固件"></a>固件</h3><p>固件可以到 GitHub 上面下载，<a href="https://github.com/hanwckf/build-imou-sn1/releases">https://github.com/hanwckf/build-imou-sn1/releases</a></p><p>为了方便访问不了 GitHub 的朋友，我也把它们备份到网盘里。</p><p>链接：<a href="https://pan.baidu.com/s/1XncryNlALVXAO4rsVaqP3w">https://pan.baidu.com/s/1XncryNlALVXAO4rsVaqP3w</a><br>提取码：psee</p><p>7z b 分数</p><p>![乐橙 sn1 7z b](/img/2021/乐橙 sn1 7z b.jpg)</p><p>总分 4283</p><p>参考另外两台设备</p><blockquote><p>N1 3556</p><p>我家云 3457</p></blockquote><p>之后如果想刷回安卓系统，可以进入 U 盘中的 alpine 恢复系统，先用 mount 命令挂载硬盘或者U盘，然后使用 dd 命令讲安卓系统恢复到 mmcblk0 </p><p>例如我是这样的</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mount <span class="regexp">/dev/</span>sda1 /mnt</span><br><span class="line">dd <span class="keyword">if</span>=<span class="regexp">/mnt/</span>lecheng.img of=<span class="regexp">/dev/mm</span>cblk0</span><br></pre></td></tr></table></figure><p>刷机教程文章：<a href="https://www.jianshu.com/p/695fa3b0dab5">https://www.jianshu.com/p/695fa3b0dab5</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刷机关键点，绿联读卡器，&lt;a href=&quot;https://detail.tmall.com/item.htm?id=595545521913&amp;skuId=4539873880456&quot;&gt;淘宝购买链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@&lt;strong&gt;88841807849_bili&lt;/
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>关于乐橙 SN1 一些记录</title>
    <link href="https://powersee.github.io/2021/03/about-sn1/"/>
    <id>https://powersee.github.io/2021/03/about-sn1/</id>
    <published>2021-03-16T05:27:52.000Z</published>
    <updated>2022-01-12T02:42:43.021Z</updated>
    
    <content type="html"><![CDATA[<p>简书刷机教程</p><p><a href="https://www.jianshu.com/p/695fa3b0dab5">https://www.jianshu.com/p/695fa3b0dab5</a></p><p>拆解与介绍</p><p><a href="https://www.mydigit.cn/forum.php?mod=viewthread&amp;tid=139874">https://www.mydigit.cn/forum.php?mod=viewthread&amp;tid=139874</a></p><p>扩展玩法</p><p><a href="https://www.right.com.cn/forum/thread-3773109-1-1.html">乐橙SN1破解补丁包-机顶盒桌面-去限制-开ADB-ROOT-安装未知来源软件</a></p><p><a href="https://post.smzdm.com/p/aoo8oqzn/">乐橙SN1 扩展 Transmission插件， 内置硬盘充分利用 PT必备</a></p><p>由于我依然还是无法刷机，所以只能改为研究怎么折腾原生系统了。</p><h4 id="自带的远程下载软件"><a href="#自带的远程下载软件" class="headerlink" title="自带的远程下载软件"></a>自带的远程下载软件</h4><p>与其它 bt 软件连接的端口，似乎每次都变化。我通过在电脑使用 qb 做种，然后 sn1 下载这个种子资源，了解到 sn1 在 qb 中显示的 客户端 信息为 client_test/1.1.1.0，估计是他们自己搞的一个 BT 软件吧。</p><h4 id="硬盘的路径"><a href="#硬盘的路径" class="headerlink" title="硬盘的路径"></a>硬盘的路径</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/linux/m</span>nt<span class="regexp">/lv/</span></span><br></pre></td></tr></table></figure><h4 id="web-网页的路径"><a href="#web-网页的路径" class="headerlink" title="web 网页的路径"></a>web 网页的路径</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/linux/m</span>nt/web</span><br></pre></td></tr></table></figure><p>我是先 root ，然后通过 ttl 备份原本的系统。再来折腾其它的，建议大家也这么做，这个非常重要，因为这机器现在是没有线刷包的，要是自己搞坏了系统，估计就变砖了。</p><p>root 后是可以恢复出厂设置的，不用担心，而且恢复之后功能都还能用，远程访问、下载这些都在，并且 root 权限依旧，不会因为恢复出厂而丢失。</p><p>折腾主要就是安装 entware ，他人已经写好教程了，大家可以根据超链接跳转过去学习，建议有科学上网环境再来折腾这个，不然很可能安装失败。</p><p><a href="https://post.smzdm.com/p/aoo8oqzn/">乐橙SN1 扩展 Transmission插件， 内置硬盘充分利用 PT必备</a></p><p>这个过程中，需要安装 <strong>busybox</strong> ，我这里安装的是 1.20.2，使用这个版本才可以用 wget 。安装包我上传到网盘里 <a href="http://veger.ys168.com/">http://veger.ys168.com/</a> 在 【手机软件】里面。</p><p>代理可以参考这样</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">url=http:<span class="comment">//192.168.123.69:7890</span></span><br><span class="line">alias pon=<span class="string">&#x27;export http_proxy=<span class="subst">$url</span>; export https_proxy=<span class="subst">$url</span>&#x27;</span></span><br><span class="line">pon</span><br></pre></td></tr></table></figure><p>192.168.123.69 是我电脑的 ip ，不细讲了。</p><p>配置好 entware 之后，还可以装 qb</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">opkg <span class="keyword">install</span> qbittorrent</span><br></pre></td></tr></table></figure><p>安装完成应用在 /opt/bin 里面，可以通过 /opt/bin/qbittorrent-nox 来运行。</p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">/opt/bin # qbittorrent-nox </span><br><span class="line">QtSingleCoreApplication: listen <span class="keyword">on</span> <span class="keyword">local</span> socket failed, QLocalServer::listen: <span class="keyword">Name</span> error</span><br><span class="line"></span><br><span class="line">*** Legal Notice ***</span><br><span class="line">qBittorrent <span class="keyword">is</span> a <span class="keyword">file</span> sharing <span class="keyword">program</span>. When you run a torrent, its data will be made available <span class="keyword">to</span> others by means <span class="keyword">of</span> upload. Any content you share <span class="keyword">is</span> your sole responsibility.</span><br><span class="line"></span><br><span class="line">No further notices will be issued.</span><br><span class="line"></span><br><span class="line">Press <span class="string">&#x27;y&#x27;</span> key <span class="keyword">to</span> accept <span class="keyword">and</span> <span class="keyword">continue</span>...</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">******** Information ********</span><br><span class="line"><span class="keyword">To</span> control qBittorrent, access the Web UI at http:<span class="comment">//localhost:8080</span></span><br><span class="line">The Web UI administrator username <span class="keyword">is</span>: admin</span><br><span class="line">The Web UI administrator password <span class="keyword">is</span> still the <span class="keyword">default</span> one: adminadmin</span><br><span class="line">This <span class="keyword">is</span> a security risk, please consider changing your password from <span class="keyword">program</span> preferences.</span><br></pre></td></tr></table></figure><p>第一次运行需要按 y 同意一下。</p><p>想知道能装什么，可以浏览器访问 <a href="http://bin.entware.net/armv7sf-k3.2/">http://bin.entware.net/armv7sf-k3.2/</a></p><p>然后通过查找来查询自己想装的应用。</p><p>不过装好这些应用后，机器重启，自身的 launcher 就打不开了。也就是自身的 nas 功能丢失了。估计是哪里冲突了，暂时还没找到原因。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书刷机教程&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/695fa3b0dab5&quot;&gt;https://www.jianshu.com/p/695fa3b0dab5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拆解与介绍&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>关于迅雷赚钱宝二代一些小记录</title>
    <link href="https://powersee.github.io/2021/03/about-zhuanqianbao2/"/>
    <id>https://powersee.github.io/2021/03/about-zhuanqianbao2/</id>
    <published>2021-03-01T12:59:41.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>最近买了台 赚钱宝2代，闲鱼买的，30块包邮，有包装，电源适配器，网线。</p><p><img src="/img/2021/2021-03-01_21-01-42.jpg" alt="2021-03-01_21-01-42"></p><p>买这个干什么呢？拿它来赚钱吗？并不是，现在这个好像赚不了钱了吧，不然别人也不会卖。主要是看到恩山上面有刷机的帖子，想买来刷机玩玩。</p><p>论坛帖子：<a href="https://www.right.com.cn/forum/thread-4063295-1-1.html">https://www.right.com.cn/forum/thread-4063295-1-1.html</a></p><p>刷机很简单，下载镜像——<strong>二代线刷无需算号只需改mac后插盘就用.img</strong></p><p>然后使用 usb burning tool 导入，赚钱宝先用双公头 usb 线连接电脑，然后用卡针或者牙签，捅住复位键，再插电源。软件应该就能识别到了，然后就可以点【开始】刷机</p><p><img src="/img/2021/2021-03-01_23-17-35.jpg" alt="2021-03-01_23-17-35"></p><p>完成后拔电源、双公头 usb，再插上网线、电源开机。等待路由器出现 IP，然后就可以通过 ssh 连接上去。</p><p><img src="/img/2021/2021-03-01_21-05-16.jpg" alt="2021-03-01_21-05-16"></p><p>原本以为是 armbian ，刷完才发现，原来是 openwrt，而且精简得不能再精简的，很多命令行工具都没有。里面自带有甜糖，一开机就跑，有兴趣可以去原帖看看。</p><p>我对这个是没什么兴趣，那就把它拆开看看吧。网上一搜好像没有拆机的文章，那只能自己研究了。耗费很长很长的时间，终于把机器拆开了，也拆坏了。</p><p><img src="/img/2021/2021-03-01_23-23-40.jpg" alt="2021-03-01_23-23-40"></p><p>通过这伤痕累累的外壳，也可以想象我拆得好辛苦。</p><p><img src="/img/2021/2021-03-01_23-24-19.jpg" alt="2021-03-01_23-24-19"></p><p>而且主板上的一颗电容也被我弄掉下来了，现在机器无法开机了。</p><p><img src="/img/2021/2021-03-01_23-24-24.jpg" alt="2021-03-01_23-24-24"></p><p>背面长这样，可以焊接排针，用于 ttl 。</p><p><img src="/img/2021/2021-03-01_23-24-31.jpg" alt="2021-03-01_23-24-31"></p><p>正确的拆法应该是，用吹风筒吹机器的正面加热，然后取下上面比较薄的一层壳，应该就能看到 4 颗螺丝，拧开才能取下外壳。而我这种拆法是直接大力出奇迹，在 4 颗螺丝拧紧的情况下，强行将外壳掰开。</p><p>希望后人引以为戒。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近买了台 赚钱宝2代，闲鱼买的，30块包邮，有包装，电源适配器，网线。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/2021-03-01_21-01-42.jpg&quot; alt=&quot;2021-03-01_21-01-42&quot;&gt;&lt;/p&gt;
&lt;p&gt;买这个干什么呢？拿它来赚钱吗
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>bilibili 粉丝数量展示器 app</title>
    <link href="https://powersee.github.io/2021/02/bilibili-fans/"/>
    <id>https://powersee.github.io/2021/02/bilibili-fans/</id>
    <published>2021-02-24T05:58:21.000Z</published>
    <updated>2022-01-12T08:34:59.890Z</updated>
    
    <content type="html"><![CDATA[<p>去年搞了好几台墨水屏手机，平时除了阅读，就是放在桌面上当时钟用。</p><p><img src="/img/2021/f1_time.jpg" alt="f1_time"></p><p>后来突发奇想，要不拿它来当粉丝计数器吧。放在桌面上展示当前的粉丝数量，反正墨水屏屏幕不刷新的话，也不怎么耗电。</p><p>于是花费了一些时间，写了这个 app —— B站粉丝展示器</p><p><img src="/img/2021/Bili_fans_app.jpg" alt="Bili_fans_app"></p><p>app 只申请网络权限而已，其它的权限都不需要</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p>当然这个权限申请不会弹出选项，所以直接安装就可以使用。打开 app 后会显示 </p><blockquote><p>waiting for update</p></blockquote><p>需要点击文字，进入设置页面</p><p><img src="/img/2021/bili_fans_settings.jpg" alt="bili_fans_settings"></p><p>填写 mid ，在电脑网页上，点击用户头像，就可以在地址栏看到 mid 了。例如这样</p><blockquote><p><a href="https://space.bilibili.com/254479550">https://space.bilibili.com/254479550</a></p><p>254479550 就是 mid</p></blockquote><p>填完退出 app，再重新打开。就可以刷新出粉丝数量了。手机如果有打开自动旋转屏幕，可以横屏展示。</p><p><img src="/img/2021/phones_bili_fans.jpg" alt="phones_bili_fans"></p><p>默认设置每 60 秒请求一次粉丝数量，并且屏幕永不熄屏，比较适合在墨水屏设备上面使用。</p><p>下载地址：<a href="http://veger.ys168.com/">http://veger.ys168.com/</a></p><p>在【手机软件】文件夹里</p><p>其它信息</p><blockquote><p>compileSdkVersion 30<br>minSdkVersion 16<br>targetSdkVersion 30</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;去年搞了好几台墨水屏手机，平时除了阅读，就是放在桌面上当时钟用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/f1_time.jpg&quot; alt=&quot;f1_time&quot;&gt;&lt;/p&gt;
&lt;p&gt;后来突发奇想，要不拿它来当粉丝计数器吧。放在桌面上展示当前的粉丝数量，反正墨水屏屏幕
      
    
    </summary>
    
    
      <category term="手机" scheme="https://powersee.github.io/tags/%E6%89%8B%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>关于章鱼星球</title>
    <link href="https://powersee.github.io/2021/02/about-zhangyuxingqiu/"/>
    <id>https://powersee.github.io/2021/02/about-zhangyuxingqiu/</id>
    <published>2021-02-14T04:05:56.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>1</p><h3 id="固件介绍"><a href="#固件介绍" class="headerlink" title="固件介绍"></a>固件介绍</h3><p><img src="C:\Users\ver\hexobackup\source/img/2021/2021-02-14_16-56-47.jpg" alt="2021-02-14_16-56-47"></p><p>打开 win10 主题是这样的</p><p><img src="C:\Users\ver\hexobackup\source/img/2021/2021-02-14_16-57-25.jpg" alt="2021-02-14_16-57-25"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1&lt;/p&gt;
&lt;h3 id=&quot;固件介绍&quot;&gt;&lt;a href=&quot;#固件介绍&quot; class=&quot;headerlink&quot; title=&quot;固件介绍&quot;&gt;&lt;/a&gt;固件介绍&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;C:\Users\ver\hexobackup\source/img/2021/202
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>玩客云第二版固件说明</title>
    <link href="https://powersee.github.io/2021/02/wankeyun-2/"/>
    <id>https://powersee.github.io/2021/02/wankeyun-2/</id>
    <published>2021-02-01T07:05:09.000Z</published>
    <updated>2022-01-12T08:34:59.833Z</updated>
    
    <content type="html"><![CDATA[<p>玩客云第二版固件已经发布。</p><p><img src="/img/2021/wky-2.jpg" alt="wky-2"></p><p>下载链接和上一版一样。</p><p>固件和刷机工具下载链接</p><p>链接：<a href="https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA">https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA</a><br>提取码：6666 </p><p>固件天翼云盘分流：<a href="https://cloud.189.cn/t/eYfInuiuYFja">https://cloud.189.cn/t/eYfInuiuYFja</a></p><p>解压出来，名字是 <code>Armbian_s805_powersee_2021-01-31.img</code>  </p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>第二版的介绍已发布视频到 B站</p><p><a href="https://www.bilibili.com/video/BV1kT4y1P7RL?p=5">https://www.bilibili.com/video/BV1kT4y1P7RL?p=5</a></p><hr><p>博客用来作为补充和方便大家查询。</p><p>第二版更改了 led。开机后，灯自动熄灭，但是网口的灯是亮着的，而且一般网口两个灯都是亮着的。</p><p><img src="/img/2021/2021-02-02_19-29-14.jpg" alt="2021-02-02_19-29-14"></p><p>可以通过这来判断机器有没有进入U盘中的系统。</p><p>qbittorrent 使用原生安装，而不使用 docker 了。并且默认下载路径设置为 <code>/mnt</code> ，下载之前请注意网页底部显示的 <code>剩余磁盘空间</code> 。</p><p>添加了 Aria2 ，使用的是 P3TERX 大佬制作的<a href="https://github.com/P3TERX/aria2.sh">一键脚本</a>安装的。rpc 密钥是：12345</p><p>启动：<code>/etc/init.d/aria2 start</code> | <code>service aria2 start</code></p><p>停止：<code>/etc/init.d/aria2 stop</code> | <code>service aria2 stop</code></p><p>重启：<code>/etc/init.d/aria2 restart</code> | <code>service aria2 restart</code></p><hr><p>smb 添加多一个共享文件夹 <code>mnt-rw</code> ，访问路径依然是 <code>/mnt</code> ，这个文件夹需要账号密码才可以访问，账号 <code>root</code>，密码 <code>1234</code> </p><hr><h3 id="led-灯的控制"><a href="#led-灯的控制" class="headerlink" title="led 灯的控制"></a>led 灯的控制</h3><p>开机之后，系统会执行 <code>ledoff blue</code> 来关闭灯光。</p><p>如果想自己控制灯光，可以用 <code>ledon blue</code> 来打开蓝灯。打开绿灯就是 <code>ledon green</code>，红灯 <code>ledon red</code> 。关闭的话，就是将 <code>ledon</code> 换为 <code>ledoff</code></p><p>如果想要在 python 脚本中控制它，可以这样用</p><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">&quot;ledon green&quot;</span>)</span><br></pre></td></tr></table></figure><p>来自 B友 @<strong>猫肆音Moshin</strong> 反馈的问题：</p><blockquote><p>我反映一个玩客云1.3板子刷第二版固件无法网页启动的解决方法。<br>我试了U盘读卡器TF卡好几个，面板灯不亮，网口只一个灯闪后一直没法进入网页。<br>后来发现一个不识别网络设备MAC是123456789ABC，直接用xshell连接IP成功，然后写入emmc后就可以正常进入网页了。</p></blockquote><p>我简单的复述一下，就是玩客云其实已经获取到 ip 了，但是在路由器里面，它的设备名没有被路由器正确识别到，所以可以通过 mac 地址来判断新增加的 ip 是否为玩客云的。</p><h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p>1、<a href="https://www.right.com.cn/forum/thread-2881296-1-1.html">https://www.right.com.cn/forum/thread-2881296-1-1.html</a></p><p>2、<a href="https://github.com/P3TERX/aria2.sh">https://github.com/P3TERX/aria2.sh</a></p><p>3、<a href="https://github.com/qbittorrent/qBittorrent/wiki">https://github.com/qbittorrent/qBittorrent/wiki</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;玩客云第二版固件已经发布。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/wky-2.jpg&quot; alt=&quot;wky-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;下载链接和上一版一样。&lt;/p&gt;
&lt;p&gt;固件和刷机工具下载链接&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://pan.bai
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>玩客云导航固件使用说明</title>
    <link href="https://powersee.github.io/2021/01/wankeyun-server/"/>
    <id>https://powersee.github.io/2021/01/wankeyun-server/</id>
    <published>2021-01-26T00:46:22.000Z</published>
    <updated>2022-01-12T08:35:31.593Z</updated>
    
    <content type="html"><![CDATA[<h3 id="玩客云乱七八糟的坑"><a href="#玩客云乱七八糟的坑" class="headerlink" title="玩客云乱七八糟的坑"></a>玩客云乱七八糟的坑</h3><p>搞了一个腾讯文档，懒得复制过来了，已经设置了任何人都可以访问，可以在里面看看有没有适合自己的解决方案。</p><p><a href="https://docs.qq.com/doc/DWkhNSmRuQld0UEd0">https://docs.qq.com/doc/DWkhNSmRuQld0UEd0</a></p><h3 id="为什么我的主板和你不一样？"><a href="#为什么我的主板和你不一样？" class="headerlink" title="为什么我的主板和你不一样？"></a>为什么我的主板和你不一样？</h3><p>有些小伙伴看了视频，非常激动地跑去买玩客云，买来拆开后却发现，怎么和视频里的不一样呢？难道是被坑了？</p><p>其实不用慌，这是因为玩客云有分两版，我视频里展示的是老版，它的短接点是在主板的背面。</p><p><img src="/img/2020/%E7%8E%A9%E5%AE%A2%E4%BA%91%E7%9F%AD%E6%8E%A5.png" alt="玩客云短接"></p><p>另外还有一款新版，短接点是在正面。</p><p><img src="/img/2021/%E7%8E%A9%E5%AE%A2%E4%BA%91%E6%96%B0%E7%89%88%E7%9F%AD%E6%8E%A5%E7%82%B9.jpg" alt="玩客云新版短接点"></p><p><img src="/img/2021/%E7%8E%A9%E5%AE%A2%E4%BA%91%E6%96%B0%E7%89%88%E7%9F%AD%E6%8E%A5%E7%82%B945.jpg" alt="玩客云新版短接点45"></p><p>刷机方式一样的。</p><h3 id="为什么没有进入-U-盘中的系统？"><a href="#为什么没有进入-U-盘中的系统？" class="headerlink" title="为什么没有进入 U 盘中的系统？"></a>为什么没有进入 U 盘中的系统？</h3><p>如果你发现 led 灯每隔几秒就闪一下，那可能是你 U 盘没有插在靠近网口的 USB 口。</p><p><img src="/img/2021/wky-usb-1613448634572.png" alt="wky-usb"></p><p>如果这样还不行，你可以尝试换一个 U 盘，如果有内存卡加读卡器的话，也可以试试。</p><h3 id="总结一下玩客云的优劣"><a href="#总结一下玩客云的优劣" class="headerlink" title="总结一下玩客云的优劣"></a>总结一下玩客云的优劣</h3><p>优点</p><ul><li>便宜</li><li>省电，之前测试过功耗只有 1.5 w 左右</li><li>静音，没有风扇，自然不会有噪音</li></ul><p>缺点</p><ul><li>性能较弱</li><li>cpu 是 32 位的，能用的 docker 镜像有限</li><li>usb 2.0 速度慢</li></ul><p>由于这次视频的播放量还可以，很多没有关注我的观众在评论区里留言，说 N1 、树莓派这些比玩客云强。我当然知道这些比玩客云强啊，因为大多数矿渣设备我都有买，有兴趣的朋友可以去翻翻我以前的视频。</p><p>其实不用看参数也能知道 N1 、树莓派 这些比玩客云强，看价格就行呗。N1 现在应该要一百多，树莓派得两百多。所以没什么可比性嘛。</p><hr><h3 id="固件相关"><a href="#固件相关" class="headerlink" title="固件相关"></a>固件相关</h3><p>2021-01-25</p><p><img src="/img/2021/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%AF%BC%E8%88%AA.jpg" alt="玩客云导航"></p><p>固件和刷机工具下载链接</p><p>链接：<a href="https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA">https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA</a><br>提取码：6666 </p><p>访问导航：直接在浏览器输入 onecloud/ 或者输入玩客云的 ip 地址。</p><hr><p>文件管理器：账号密码都是 admin</p><p>portainer : 账号 admin 密码 powersee</p><p>transmission : 账号密码都是 admin</p><p>qbittorrent : 账号 admin 密码 adminadmin</p><p>ssh ：账号 root 密码 powersee233</p><hr><p>qiandao 这个容器并没有设置开机启动，如果想启动它，可以在 portainer 中启动，或者通过 ssh 使用</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">docker <span class="literal">start</span> qiandao</span><br></pre></td></tr></table></figure><p>来启动。</p><p>这个自动签到平台我以前也有做过视频，有兴趣可以去翻翻看。</p><hr><h3 id="关于-SD-卡"><a href="#关于-SD-卡" class="headerlink" title="关于 SD 卡"></a>关于 SD 卡</h3><p>挂载 SD 卡有一点需要注意，有些卡套可能会有问题。插上去后，可以读取到 disk ，但是读取不到 part ，所以没法挂载。质量好的卡套，应该是可以显示 disk 和 part 的，如下图所示。</p><p>![挂载 sd 卡](/img/2021/挂载 sd 卡.png)</p><h3 id="如何挂载硬盘"><a href="#如何挂载硬盘" class="headerlink" title="如何挂载硬盘"></a>如何挂载硬盘</h3><p>其实视频里有讲了，先输入 <code>lsblk</code> 查看一下硬盘连接上没，一般会显示 sda 或者 sdb 这样。</p><p>假设显示的是 sda ，那么它下面应该有个 sda1 这个才对。这个 sda1 指的是分区，就像你在电脑上，你添加了一块硬盘，你可能把分为 D、E、F　三个盘。但是它都是属于同一块物理硬盘。而这里的 sda 就是指物理硬盘，你不能挂载它，只能挂载它里面的分区。</p><p>所以你应该使用的命令是</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mount <span class="regexp">/dev/</span>sda1 /mnt</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mount <span class="regexp">/dev/</span>sdb1 /mnt</span><br></pre></td></tr></table></figure><hr><p>系统装有 python3 和 pip3，同时我还安装了一个命令行的文件管理器 ranger，在终端输入 <code>ranger</code> 就可以打开这样的界面。</p><p><img src="/img/2021/ranger.jpg" alt="ranger"></p><p>按 q 退出</p><hr><h3 id="如何判断有没有刷成功"><a href="#如何判断有没有刷成功" class="headerlink" title="如何判断有没有刷成功"></a>如何判断有没有刷成功</h3><p>其实可以用通过玩客云的 hdmi 来判断，你可以把玩客云连接电视或者显示器。</p><p>当你刷好底层包之后，不插U盘，画面会显示这个几秒</p><p><img src="/img/2021/%E7%8E%A9%E5%AE%A2%E4%BA%91mxq.png" alt="玩客云mxq"></p><p>然后就没信号几秒，再显示这个画面几秒，再没信号……会这样一直重复。</p><p>如果你插上U盘，并且玩客云成功进入 U 盘里的系统，画面就会停留在上面这个图片这里，不会变化了。所以你可以通过这种方法来判断有没有成功进入 U 盘系统。</p><hr><h3 id="一直线刷失败？"><a href="#一直线刷失败？" class="headerlink" title="一直线刷失败？"></a>一直线刷失败？</h3><p>症状是什么呢？无法刷入 snail 底层包，也无法刷入 emmc 直刷包，线刷最后永远报错。这里有一张网友线刷失败的图片。</p><p><img src="/img/2021/wky-fail1.png" alt="wky-fail1"></p><p>里面的结果这一列，有好多个 5004。然后最近我收了一台有问题的玩客云，下午线刷，发现也是一堆 5004 的报错。所以我估计，可能报 5004 的，应该就是 emmc 有坏块，毕竟症状一样。</p><p>到目前为止，我见识过 4 台设备这样，我自己手上就有一台。唯有一个底层包可以刷，是一个 700多K的 img 包，我将它上传到了网盘。<a href="http://veger.ys168.com/">http://veger.ys168.com/</a> </p><p><img src="/img/2021/wky-pan1.png" alt="wky-pan1"></p><p>使用这个底层包，可以线刷进去。</p><p><img src="/img/2021/wky-%E7%BA%BF%E5%88%B7%E6%88%90%E5%8A%9F.png" alt="wky-线刷成功"></p><p>刷这个 700 多k 的底层包，开机是亮绿灯。由于 emmc 损坏，因此系统只能装在 U 盘里面使用。</p><h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><ol><li><p><a href="https://www.right.com.cn/forum/thread-4057492-1-1.html">https://www.right.com.cn/forum/thread-4057492-1-1.html</a></p></li><li><p><a href="https://github.com/AragonSnow/qiandao">https://github.com/AragonSnow/qiandao</a></p></li><li><p><a href="https://github.com/bituplink/OneHtmlNav">https://github.com/bituplink/OneHtmlNav</a></p></li><li><p><a href="https://www.right.com.cn/forum/thread-4058499-1-1.html">https://www.right.com.cn/forum/thread-4058499-1-1.html</a></p></li><li><p><a href="https://www.right.com.cn/FORUM/thread-4066518-1-1.html">https://www.right.com.cn/FORUM/thread-4066518-1-1.html</a></p></li></ol><h3 id="下期内容"><a href="#下期内容" class="headerlink" title="下期内容"></a>下期内容</h3><p>下一个版本会添加的内容</p><p>1、网页终端</p><p><img src="/img/2021/wky-ttyd.png" alt="wky-ttyd"></p><p>2、portainer 中文化</p><p><img src="/img/2021/portainer%E6%B1%89%E5%8C%96.png" alt="portainer汉化"></p><p>3、添加控制 led 功能</p><p>默认情况下，开机后会一直亮蓝灯。其实没什么用，我打算把这灯利用起来，所以设置了开机进入系统后，灯光会自动关闭。然后这灯就可以跑脚本的时候用。例如用 python 脚本来控制它，让它亮绿灯之类的。以后再说吧。</p><p><img src="/img/2021/wky-green.jpg" alt="wky-green"></p><p>4、aria2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;玩客云乱七八糟的坑&quot;&gt;&lt;a href=&quot;#玩客云乱七八糟的坑&quot; class=&quot;headerlink&quot; title=&quot;玩客云乱七八糟的坑&quot;&gt;&lt;/a&gt;玩客云乱七八糟的坑&lt;/h3&gt;&lt;p&gt;搞了一个腾讯文档，懒得复制过来了，已经设置了任何人都可以访问，可以在里面看看有没有适
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>IOS 设备备份相册与文件到 NAS</title>
    <link href="https://powersee.github.io/2020/12/ios-backup-photos/"/>
    <id>https://powersee.github.io/2020/12/ios-backup-photos/</id>
    <published>2020-12-18T12:14:59.000Z</published>
    <updated>2022-01-12T08:35:31.593Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来，我都是用安卓手机，特别是小米的手机，已经用了很多年了。一开始的照片也不多，用小米自带的云服务备份即可。后来照片有点多了，小米云服务免费的 5G 空间已经不够用了。</p><p>我开始尝试其它的备份方案，比如电脑和手机都安装 handshaker 这个软件，可以自动将图片备份到电脑里。电脑里现在还存放着两年多前备份的手机图片。</p><p><img src="/img/2020/handshaker-photos.png" alt="handshaker-photos"></p><p>好像备份了一两次我就不用了，不是我想要的备份方案。后来我还尝试使用 Google photos 备份，也觉得不好用。都不是我想要的。</p><p>后来我接触到 syncthing 这个开源软件。感觉它才是最符合我需求的，它其实是一个同步软件，网上有很多人称它为网盘并不准确。其原理是这样，我手机上面选中一个文件夹，通过这个软件，就可以把里面的文件备份到其它的设备，比如其它的手机、电脑或者 NAS。</p><p>所以在安卓手机上，我只要选中 DCIM 这个文件夹，就可以把手机里面拍摄的图片、视频以及截图备份到其它设备。但是有一些图片，是通过微信保存到手机里的，并不在 DCIM 这个文件夹中。这也不难解决，再选中一个文件夹即可 <code>tencent\MircoMsg\WeiXin</code> 。但是，这款应用并没有 IOS 版……</p><p>所以当我买了台二手的 ipad 后，我发现没法用 syncthing 来备份里面文件，我只能去寻找替代品。于是我找到了这么一款——微力同步（verysync）。这是一款国产的应用，也是支持多平台的同步应用。当我第一次接触它时，我严重怀疑它是拿开源的 syncthing 去换皮的。</p><p><img src="/img/2020/syncthing-and-verysync.png" alt="syncthing-and-verysync"></p><p>它的使用方法和 syncthing 差不多，不过它有一个不错的地方，就是它分享文件夹，不需要像 syncthing 那样先让两台设备建立关系（有点像微信互相添加好友），微力同步可以将要分享的文件夹通过密钥或者链接分享出去。比如我手机里想将相册这个文件夹同步到电脑，那么我只要让它生成一个链接，将链接发到电脑，电脑点击后就可以将文件同步过来了。</p><p>如果是电脑想分享给手机，除了上述的链接和密钥，还可以通过二维码分享，只要扫这个二维码，就可以将电脑的文件同步到手机里。</p><p><img src="/img/2020/verysync-share.png" alt="verysync-share"></p><p>所以我后来就慢慢的使用微力同步代替 syncthing 了，感觉它用起来方便点，而且也都是免费的。然后我还了解到它还有 IOS 版，就想用它来备份 iPad 的相册到 NAS 里。结果却发现，它在其它所有平台都是免费的，唯独在 ios 上是收费的，价格 12 块。</p><p>抱着价格也不贵的心态，而我也使用了有一段时间了，我也就买一份支持一下。</p><p><img src="/img/2020/ios-appstore-verysync.PNG" alt="ios-appstore-verysync"></p><p>不过后来我又发现了一款功能差不多，而且可以免费用的 app —— resilio sync 。并且我这时才知道，原来微力同步的那些功能都是从这里学来的。</p><p><img src="/img/2020/resilio-option.png" alt="resilio-option"></p><p>这软件以前叫 btsync ，感觉像是 BT 的变种。最早的 BT 是，比如我有一部电影想分享给朋友，我可以为这部电影制作一个种子（torrent 文件），我只要电脑不关，保持做种状态，并把这个种子文件发给其他人。其他人只要能连接到我的电脑，就能下载我电脑里的这部电影。</p><p>而这个 btsync 可以省去制作种子和传播种子文件的过程，直接发给别人一个链接或一个密钥就行。但其实 BT 也可以省去传播种子文件的过程，发磁力链接就行呗。但是有一点 BT 就做不到了，那就是更新，btsync 可以分享一个文件夹，比如现在里面是一个文件 <code>xxxS01E01.mp4</code> ，是某部电视剧的第一集，其他人得到这个分享链接或密钥，就可以下载到。但如果下个星期出第二集了，其他人不需要进行任何操作，就可以下载到第二集 <code>xxxS01E02.mp4</code> ，因为这个分享文件夹更新了。</p><p>但是用 BT 就做不到，只能等出第二集了，再做一个 BT 种子，分享给其他人才行。所以听说以前这个 btsync 挺火的，那后来怎么不火的呢？因为官方觉得使用 dht 技术自己管控不了这个软件，所以在 1.4.111 版本后，就把 dht 功能去掉了。之后的版本如果想通过 bysync 下载资源的话，就得通过官方的服务器，才可以查询到其他用户 IP ，从而进行下载。而再之后，它的服务器在国内被墙了，因此在国内也就基本凉了。</p><p>不过它只是作为资源下载这方面凉了，用来局域网同步还是可以用的，使用的方法都一样，因为这三个软件的关系很微妙。我在 <a href="https://www.appinn.com/verysync/">小众软件</a> 看到了网友 <strong>哆哆爱焱垚</strong> 的这样一段留言</p><blockquote><p><strong>这个软件我知道，在Resilio Sync时代，发现不能使用时，微力同步的作者一直以小资源站的形式进行着Resilio Sync再度能用的努力，但是后来实在经不住这么折腾就在开源软件Syncthing的基础上自己开发了这款微力同步，而界面的相似真的是为了让当初一批Resilio Sync用户减少适应的难度而高度相似。后来，也是看着作者一步步因为论坛及QQ群网友的要求开发出了适应各个平台的版本。作者一路走来也真的是不容易，也挺高兴他的软件被小编收录到了主站！</strong></p></blockquote><p>这三款应用，简单的同步功能，都可以免费使用。</p><ul><li>syncthing 由于是开源软件，完全免费，但是它没有 IOS 端，而且同步之前需要设备互相添加好友，感觉有点不方便。</li><li>verysync 基于 syncthing 开发的国产闭源软件，IOS 端需要付费购买才可以使用，现在的价格是 ￥12。其它平台可以免费使用，但是有些高级功能，如电脑和 Linux 端的选择同步，需要 Pro 才可以使用，想拥有 Pro 资格，需要 ￥99.</li><li>resilio sync 是闭源商业软件，除了同步功能之外，还可以下载资源。免费版对于个人使用应该也是足够的。</li></ul><p>为了写这篇文章，我把三款应用都通过 docker 装在 N1 上了。</p><p><img src="/img/2020/3-sync-app.png" alt="3-sync-app"></p><p>体验下来还是觉得 verysync 用着比较顺手。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以来，我都是用安卓手机，特别是小米的手机，已经用了很多年了。一开始的照片也不多，用小米自带的云服务备份即可。后来照片有点多了，小米云服务免费的 5G 空间已经不够用了。&lt;/p&gt;
&lt;p&gt;我开始尝试其它的备份方案，比如电脑和手机都安装 handshaker 这个软件，可以自
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
      <category term="ios" scheme="https://powersee.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>树莓派 4B 变身 NAS 服务器</title>
    <link href="https://powersee.github.io/2020/12/raspberrypi-nas/"/>
    <id>https://powersee.github.io/2020/12/raspberrypi-nas/</id>
    <published>2020-12-08T03:18:00.000Z</published>
    <updated>2022-01-12T08:35:31.593Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>树莓派由于体积非常小，只有一张银行卡的大小，而且还支持 WiFi ，所以拿它当服务器也是一个不错的选择。只要找一个有电源的地方，丢在那里就行。</p><p>如果只是当成服务器来使用，可以感兴趣的人会比较少，如果能够在上面装些下载软件，再开启 smb 共享，那么树莓派也是可以当成一台的简单的 NAS 来使用的。</p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>个人推荐先使用官方系统 raspios , 不建议使用以前的 raspbian ，raspbian 是 32 位的系统，如果有使用 docker 的话，就会知道，32 位的 docker 镜像非常的少。如果可以的话，一定要装 64 位的系统，不管是官方的 raspios 还是 Ubuntu 都行。</p><p>这里我以官方的 raspios 来作为演示。</p><p>下载来源：<a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/">清华镜像站</a></p><p>由于是当 NAS 使用，建议使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/raspios_lite_arm64/images/raspios_lite_arm64-2020-08-24/2020-08-20-raspios-buster-arm64-lite.zip">lite 版</a></p><p>下载后将里面的 img 镜像解压出来，然后使用镜像写入工具。我使用的是 usb image tools （我的网盘里面有），也可以使用其它的工具，例如 Etcher ，win32diskimager 等等。</p><h3 id="开启-ssh"><a href="#开启-ssh" class="headerlink" title="开启 ssh"></a>开启 ssh</h3><p>镜像写入完成后，如果直接弹出读卡器，然后启动树莓派的话，会发现无法用 ssh 连接。解决的方法也很简单，将内存卡重新插回电脑，在里面建立一个文件夹，名字为 <code>ssh</code></p><p>这样系统启动后就开启 ssh 了。</p><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>备份原来的</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp <span class="regexp">/etc/</span>apt<span class="regexp">/source.list /</span>etc<span class="regexp">/apt/</span><span class="keyword">source</span>.list.bak</span><br></pre></td></tr></table></figure><p>/etc/apt/source.list</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">deb https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster main contrib non-free</span><br><span class="line">deb-src https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster main contrib non-free</span><br><span class="line">deb https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster-updates main contrib non-free</span><br><span class="line">deb-src https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster-updates main contrib non-free</span><br><span class="line">deb https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster-backports main contrib non-free</span><br><span class="line">deb-src https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian/</span> buster-backports main contrib non-free</span><br><span class="line">deb https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian-security buster/u</span>pdates main contrib non-free</span><br><span class="line">deb-src https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/debian-security buster/u</span>pdates main contrib non-free</span><br></pre></td></tr></table></figure><p>/etc/apt/source.list.d/raspi.list</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/raspberrypi/</span> buster main ui</span><br></pre></td></tr></table></figure><p>我使用的是 nano 编辑器，对文本内容进行修改之后，想保存退出，需要按 <code>ctrl + X</code> 退出，然后编辑器会问，是否要保存，按 <code>Y</code> 选择 yes ，再让你确认保存的文件名，按回车键即可。</p><p>更改好源之后，输入</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">apt update</span></span><br></pre></td></tr></table></figure><h3 id="安装常用应用"><a href="#安装常用应用" class="headerlink" title="安装常用应用"></a>安装常用应用</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> vim samba zsh docker.io -y</span><br></pre></td></tr></table></figure><h3 id="挂载硬盘"><a href="#挂载硬盘" class="headerlink" title="挂载硬盘"></a>挂载硬盘</h3><p>将硬盘通过 usb 连接到树莓派，在终端输入</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">lsblk</span></span><br></pre></td></tr></table></figure><p>列出所有可用块设备的信息，例如我的显示</p><figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0   <span class="number"> 0 </span>55.9G <span class="number"> 0 </span>disk </span><br><span class="line">├─sda1        8:1   <span class="number"> 0 </span>53.9G <span class="number"> 0 </span>part </span><br><span class="line">├─sda2        8:2   <span class="number"> 0 </span>   1K <span class="number"> 0 </span>part </span><br><span class="line">└─sda5        8:5   <span class="number"> 0 </span>   2G <span class="number"> 0 </span>part </span><br><span class="line">mmcblk0     179:0   <span class="number"> 0 </span>14.7G <span class="number"> 0 </span>disk </span><br><span class="line">├─mmcblk0p1 179:1   <span class="number"> 0 </span> 256M <span class="number"> 0 </span>part /boot/firmware</span><br><span class="line">└─mmcblk0p2 179:2   <span class="number"> 0 </span>14.5G <span class="number"> 0 </span>part /</span><br></pre></td></tr></table></figure><p>我需要挂载 sda1 这个分区，想将它挂载到 /mnt/to 这个目录下，所以我先创建这个文件夹，再进行挂载</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir <span class="regexp">/mnt/</span>to</span><br><span class="line">mount <span class="regexp">/dev/</span>sda1 <span class="regexp">/mnt/</span>to</span><br></pre></td></tr></table></figure><p>这种情况下，如果我们重启了机器，那么就得重新挂载硬盘，如果你并不频繁重启机器，这样或许还可以接受。若不是的话，可以了解一下自动挂载。</p><p>首先查看硬盘的 UUID ，可以使用 <code>blkid</code> 命令</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># blkid     </span></span><br><span class="line">/dev/mmcblk0p1: <span class="attribute">LABEL</span>=<span class="string">&quot;system-boot&quot;</span> <span class="attribute">UUID</span>=<span class="string">&quot;85F3-CC2B&quot;</span> <span class="attribute">TYPE</span>=<span class="string">&quot;vfat&quot;</span> <span class="attribute">PARTUUID</span>=<span class="string">&quot;da84cd12-01&quot;</span></span><br><span class="line">/dev/mmcblk0p2: <span class="attribute">LABEL</span>=<span class="string">&quot;writable&quot;</span> <span class="attribute">UUID</span>=<span class="string">&quot;b96d647f-679e-4582-87d0-2d8c7afc91f4&quot;</span> <span class="attribute">TYPE</span>=<span class="string">&quot;ext4&quot;</span> <span class="attribute">PARTUUID</span>=<span class="string">&quot;da84cd12-02&quot;</span></span><br><span class="line">/dev/sda1: <span class="attribute">UUID</span>=<span class="string">&quot;041ff92b-0a5c-49f4-b965-0d3a55ef8284&quot;</span> <span class="attribute">TYPE</span>=<span class="string">&quot;ext4&quot;</span> <span class="attribute">PARTUUID</span>=<span class="string">&quot;0eff14f3-01&quot;</span></span><br><span class="line">/dev/sda5: <span class="attribute">UUID</span>=<span class="string">&quot;b82db7cf-756f-4109-8800-9c0d9bb58810&quot;</span> <span class="attribute">TYPE</span>=<span class="string">&quot;swap&quot;</span> <span class="attribute">PARTUUID</span>=<span class="string">&quot;0eff14f3-05&quot;</span></span><br><span class="line">/dev/mmcblk0: <span class="attribute">PTUUID</span>=<span class="string">&quot;da84cd12&quot;</span> <span class="attribute">PTTYPE</span>=<span class="string">&quot;dos&quot;</span></span><br></pre></td></tr></table></figure><p>这里我想挂载的是 <code>/dev/sda1</code> ，所以我复制它的 UUID <code>041ff92b-0a5c-49f4-b965-0d3a55ef8284</code> 记住它的 type 是 ext4 ，你的有可能是其它的，例如 ntfs 之类。</p><p>编辑 <code>/etc/fstab</code> </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>在最下面添加一行</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">UUID</span>=<span class="number">041</span>ff<span class="number">92</span>b-<span class="number">0</span>a<span class="number">5</span>c-<span class="number">49</span>f<span class="number">4</span>-b<span class="number">965</span>-<span class="number">0</span>d<span class="number">3</span>a<span class="number">55</span>ef<span class="number">8284</span> /mnt/to ext<span class="number">4</span> defaults     <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/img/2020/fstab-nano.png" alt="fstab-nano"></p><p>填好后，按 <code>ctrl + o</code> 保存，回车键确认，再按 <code>ctrl + x</code> 退出。</p><h3 id="设置-smb-共享"><a href="#设置-smb-共享" class="headerlink" title="设置 smb 共享"></a>设置 smb 共享</h3><p>此时我想通过 smb 的方式将硬盘中的内容共享出来，我需要先编辑 samba 的配置文件</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>samba/smb.conf</span><br></pre></td></tr></table></figure><p>然后在最后添加这么几行</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">to</span>]</span><br><span class="line">    path = /mnt/<span class="keyword">to</span></span><br><span class="line">    browseable = <span class="literal">yes</span> </span><br><span class="line">    guest ok = <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>保存退出，然后重启 smbd</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">service smbd restart</span></span><br></pre></td></tr></table></figure><p>此时在 资源管理器 的 网络 中，点击树莓派对应的设备名，应该就可以看到一个名字为 to 的共享文件夹。由于上面是设置 guest ok ，所以不用身份验证就可以直接打开。</p><p>但这样可能不是你想要的，毕竟任何人都可以直接访问，不安全。能否添加账号密码来验证呢？答案是可以的。</p><p>如果你装的是树莓派的 raspbian 或者 raspios ，默认就有一个 pi 用户，如果你安装的是 Ubuntu ，默认情况下就有一个 ubuntu 用户。那么现在就到 samba 里面添加这个同名用户。</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">smbpasswd -<span class="keyword">a</span> <span class="literal">pi</span></span><br></pre></td></tr></table></figure><p>用 Ubuntu 的</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">smbpasswd -<span class="selector-tag">a</span> ubuntu</span><br></pre></td></tr></table></figure><p>之后会让你设置密码，需要设置两次。会如下面这样显示。</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added <span class="keyword">user</span> <span class="title">ubuntu</span>.</span><br></pre></td></tr></table></figure><p>然后我们可以再来修改 smb 配置文件。</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>samba/smb.conf</span><br></pre></td></tr></table></figure><p>在最后面添加这么几行</p><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">[test]</span><br><span class="line">    <span class="attr">path</span> = /mnt/to/test</span><br><span class="line">    <span class="attr">writable</span> =yes</span><br><span class="line">    valid <span class="attr">users</span> = ubuntu</span><br><span class="line">    force create <span class="attr">mode</span> = <span class="number">0644</span></span><br></pre></td></tr></table></figure><p>保存退出，然后重启 smbd</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">service smbd restart</span></span><br></pre></td></tr></table></figure><p>然后在网络中应该就可以看到名字为 test 的共享文件夹，直接双击打开的话，会要求你输入账号和密码。账号就是 pi 或者 ubuntu ，密码是你刚才自己设置的。</p><p><img src="/img/2020/samba-test-dir.png" alt="samba-test-dir"></p><h3 id="安装我家云导航"><a href="#安装我家云导航" class="headerlink" title="安装我家云导航"></a>安装我家云导航</h3><p>导航下载，在网盘中的【不仅限于盒子】、【贝壳云and我家云】文件夹中。我使用的是 2019 年的旧版导航，用新的应该也可以。</p><p>先进入 <code>/opt</code> 这个目录</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt</span></span><br></pre></td></tr></table></figure><p>想安装需要先把导航压缩包传进树莓派，达到这个目的的方法有很多。我使用的终端是 xshell ，我先在树莓派里安装一个 lrzsz</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> lrzsz</span><br></pre></td></tr></table></figure><p>安装完成后，使用 <code>rz</code> 命令，就可以把电脑里的文件，传输到树莓派里面了。</p><p>把 <code>entware_navi.tgz</code> 和 <code>install_navi.sh</code> 这两个文件，传到 <code>/opt</code> 目录下，然后安装脚本执行权限，再执行安装</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">chmod +x install_navi.<span class="keyword">sh</span></span><br><span class="line">./install_navi.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>然后等一段时间……</p><p>完成后就可以在浏览器输入树莓派的 ip 来访问这个导航界面了。</p><p><img src="/img/2020/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AF%BC%E8%88%AA%E7%95%8C%E9%9D%A2.png" alt="树莓派导航界面"></p><p>实测 qb 启动不了，控制台那个是给我家云的 omv 用的，装在其它设备上本来就是没法用的。其它的功能好像都还可以用吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;树莓派由于体积非常小，只有一张银行卡的大小，而且还支持 WiFi ，所以拿它当服务器也是一个不错的选择。只要找一个有电源的地方，丢在那里就行
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="树莓派" scheme="https://powersee.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装 transmission</title>
    <link href="https://powersee.github.io/2020/12/raspberrypi-install-transmission/"/>
    <id>https://powersee.github.io/2020/12/raspberrypi-install-transmission/</id>
    <published>2020-12-06T08:27:34.000Z</published>
    <updated>2022-01-12T08:35:31.593Z</updated>
    
    <content type="html"><![CDATA[<p>安装</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> transmission-daemon</span><br></pre></td></tr></table></figure><p>停止程序，修改配置</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">service transmission-daemon stop</span><br><span class="line">vi <span class="regexp">/etc/</span>transmission-daemon/settings.json</span><br></pre></td></tr></table></figure><p>使用 vi 打开这个配置文件后，按 <code>i</code> 键进入编辑模式</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;download-dir&quot;</span>: <span class="string">&quot;/mnt/tr/downloads&quot;</span>,</span><br><span class="line"><span class="string">&quot;rpc-whitelist&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br></pre></td></tr></table></figure><p>修改这么两行，此时账号和密码没有修改，默认情况下都是 transmission</p><p>修改完成按 <code>ESC</code> 键退出编辑模式，再按 <code>:wq</code> 保存退出。</p><p>接着启动 transmission</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">service transmission-daemon <span class="literal">start</span></span><br></pre></td></tr></table></figure><p>此时在浏览器中输入 树莓派ip:9091 就可以访问 transmission 。</p><p><img src="/img/2020/raspi-tr.png"></p><p>此时直接下载种子，应该会报错提示没有写入权限。</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir <span class="regexp">/mnt/</span>tr/downloads</span><br><span class="line">chmod <span class="number">777</span> <span class="regexp">/mnt/</span>tr/downloads</span><br></pre></td></tr></table></figure><p>这样应该就可以正常下载了。下载完成后，如果想将下载文件夹通过 smb 共享出来，可以在 <code>/etc/samba/smb.conf</code> 中添加这一段</p><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">[download]</span><br><span class="line">   <span class="attr">comment</span> = Printer Drivers</span><br><span class="line">   <span class="attr">path</span> = /mnt/tr/downloads</span><br><span class="line">   <span class="attr">browseable</span> = yes</span><br><span class="line">   read <span class="attr">only</span> = yes</span><br><span class="line">   guest <span class="attr">ok</span> = yes</span><br></pre></td></tr></table></figure><p>然后重启 smb</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">smbd restart</span></span><br></pre></td></tr></table></figure><p>此时应该就可以在 win10 的资源管理器中的 【网络】找到树莓派，直接点击应该就可以访问里面的内容。</p><p>我使用的内存卡的闪迪的，32G ，class 10，实测 smb 读取速度在 40MB/s 左右。如果打算长期下载的话，建议还是接一个 usb 硬盘比较好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; trans
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
</feed>
